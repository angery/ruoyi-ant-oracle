{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/layouts/RouteView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/layouts/RouteView.vue","mtime":1581492640507},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["export default {\n  name: 'RouteView',\n  props: {\n    keepAlive: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  render: function render() {\n    var h = arguments[0];\n    var meta = this.$route.meta,\n        getters = this.$store.getters;\n    var inKeep = h(\"keep-alive\", [h(\"router-view\")]);\n    var notKeep = h(\"router-view\"); // 这里增加了 multiTab 的判断，当开启了 multiTab 时\n    // 应当全部组件皆缓存，否则会导致切换页面后页面还原成原始状态\n    // 若确实不需要，可改为 return meta.keepAlive ? inKeep : notKeep\n\n    if (!getters.multiTab && !meta.keepAlive) {\n      return notKeep;\n    }\n\n    return this.keepAlive || getters.multiTab || meta.keepAlive ? inKeep : notKeep;\n  }\n};",{"version":3,"sources":["RouteView.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA,EAAA;AACA,GAVA;AAWA,EAAA,MAXA,oBAWA;AAAA;AAAA,QACA,IADA,GACA,IADA,CACA,MADA,CACA,IADA;AAAA,QACA,OADA,GACA,IADA,CACA,MADA,CACA,OADA;AAEA,QAAA,MAAA,sCAAA;AAKA,QAAA,OAAA,mBAAA,CAPA,CAUA;AACA;AACA;;AACA,QAAA,CAAA,OAAA,CAAA,QAAA,IAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AACA,aAAA,OAAA;AACA;;AACA,WAAA,KAAA,SAAA,IAAA,OAAA,CAAA,QAAA,IAAA,IAAA,CAAA,SAAA,GAAA,MAAA,GAAA,OAAA;AACA;AA5BA,CAAA","sourcesContent":["<script>\nexport default {\n  name: 'RouteView',\n  props: {\n    keepAlive: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {}\n  },\n  render () {\n    const { $route: { meta }, $store: { getters } } = this\n    const inKeep = (\n      <keep-alive>\n        <router-view />\n      </keep-alive>\n    )\n    const notKeep = (\n      <router-view />\n    )\n    // 这里增加了 multiTab 的判断，当开启了 multiTab 时\n    // 应当全部组件皆缓存，否则会导致切换页面后页面还原成原始状态\n    // 若确实不需要，可改为 return meta.keepAlive ? inKeep : notKeep\n    if (!getters.multiTab && !meta.keepAlive) {\n      return notKeep\n    }\n    return this.keepAlive || getters.multiTab || meta.keepAlive ? inKeep : notKeep\n  }\n}\n</script>\n"],"sourceRoot":"src/layouts"}]}