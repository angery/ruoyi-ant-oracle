{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Tree/Tree.jsx","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Tree/Tree.jsx","mtime":1581492640497},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1580791774215}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { Menu, Icon, Input } from 'ant-design-vue';\nvar Item = Menu.Item,\n    ItemGroup = Menu.ItemGroup,\n    SubMenu = Menu.SubMenu;\nvar Search = Input.Search;\nexport default {\n  name: 'Tree',\n  props: {\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    openKeys: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    search: {\n      type: Boolean,\n      default: false\n    }\n  },\n  created: function created() {\n    this.localOpenKeys = this.openKeys.slice(0);\n  },\n  data: function data() {\n    return {\n      localOpenKeys: []\n    };\n  },\n  methods: {\n    handlePlus: function handlePlus(item) {\n      this.$emit('add', item);\n    },\n    handleTitleClick: function handleTitleClick() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.$emit('titleClick', {\n        args: args\n      });\n    },\n    renderSearch: function renderSearch() {\n      var h = this.$createElement;\n      return h(Search, {\n        \"attrs\": {\n          \"placeholder\": \"input search text\"\n        },\n        \"style\": \"width: 100%; margin-bottom: 1rem\"\n      });\n    },\n    renderIcon: function renderIcon(icon) {\n      var h = this.$createElement;\n      return icon && h(Icon, {\n        \"attrs\": {\n          \"type\": icon\n        }\n      }) || null;\n    },\n    renderMenuItem: function renderMenuItem(item) {\n      var _this = this;\n\n      var h = this.$createElement;\n      return h(Item, {\n        \"key\": item.key\n      }, [this.renderIcon(item.icon), item.title, h(\"a\", {\n        \"class\": \"btn\",\n        \"style\": \"width: 20px;z-index:1300\",\n        \"on\": _objectSpread({}, {\n          click: function click() {\n            return _this.handlePlus(item);\n          }\n        })\n      }, [h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"plus\"\n        }\n      })])]);\n    },\n    renderItem: function renderItem(item) {\n      return item.children ? this.renderSubItem(item, item.key) : this.renderMenuItem(item, item.key);\n    },\n    renderItemGroup: function renderItemGroup(item) {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      var childrenItems = item.children.map(function (o) {\n        return _this2.renderItem(o, o.key);\n      });\n      return h(ItemGroup, {\n        \"key\": item.key\n      }, [h(\"template\", {\n        \"slot\": \"title\"\n      }, [h(\"span\", [item.title]), h(\"a-dropdown\", [h(\"a\", {\n        \"class\": \"btn\"\n      }, [h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"ellipsis\"\n        }\n      })]), h(\"a-menu\", {\n        \"slot\": \"overlay\"\n      }, [h(\"a-menu-item\", {\n        \"key\": \"1\"\n      }, [\"\\u65B0\\u589E\"]), h(\"a-menu-item\", {\n        \"key\": \"2\"\n      }, [\"\\u5408\\u5E76\"]), h(\"a-menu-item\", {\n        \"key\": \"3\"\n      }, [\"\\u79FB\\u9664\"])])])]), childrenItems]);\n    },\n    renderSubItem: function renderSubItem(item, key) {\n      var _this3 = this;\n\n      var h = this.$createElement;\n      var childrenItems = item.children && item.children.map(function (o) {\n        return _this3.renderItem(o, o.key);\n      });\n      var title = h(\"span\", {\n        \"slot\": \"title\"\n      }, [this.renderIcon(item.icon), h(\"span\", [item.title])]);\n\n      if (item.group) {\n        return this.renderItemGroup(item);\n      } // titleClick={this.handleTitleClick(item)}\n\n\n      return h(SubMenu, {\n        \"key\": key\n      }, [title, childrenItems]);\n    }\n  },\n  render: function render() {\n    var _this4 = this;\n\n    var h = arguments[0];\n    var _this$$props = this.$props,\n        dataSource = _this$$props.dataSource,\n        search = _this$$props.search; // this.localOpenKeys = openKeys.slice(0)\n\n    var list = dataSource.map(function (item) {\n      return _this4.renderItem(item);\n    });\n    return h(\"div\", {\n      \"class\": \"tree-wrapper\"\n    }, [search ? this.renderSearch() : null, h(Menu, {\n      \"attrs\": {\n        \"mode\": \"inline\",\n        \"openKeys\": this.localOpenKeys\n      },\n      \"class\": \"custom-tree\",\n      \"on\": _objectSpread({}, {\n        click: function click(item) {\n          return _this4.$emit('click', item);\n        },\n        'update:openKeys': function updateOpenKeys(val) {\n          _this4.localOpenKeys = val;\n        }\n      })\n    }, [list])]);\n  }\n};",{"version":3,"sources":["/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Tree/Tree.jsx"],"names":["Menu","Icon","Input","Item","ItemGroup","SubMenu","Search","name","props","dataSource","type","Array","required","openKeys","default","search","Boolean","created","localOpenKeys","slice","data","methods","handlePlus","item","$emit","handleTitleClick","args","renderSearch","renderIcon","icon","renderMenuItem","key","title","click","renderItem","children","renderSubItem","renderItemGroup","childrenItems","map","o","group","render","$props","list","val"],"mappings":"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","sourcesContent":["import { Menu, Icon, Input } from 'ant-design-vue'\n\nconst { Item, ItemGroup, SubMenu } = Menu\nconst { Search } = Input\n\nexport default {\n  name: 'Tree',\n  props: {\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    openKeys: {\n      type: Array,\n      default: () => []\n    },\n    search: {\n      type: Boolean,\n      default: false\n    }\n  },\n  created () {\n    this.localOpenKeys = this.openKeys.slice(0)\n  },\n  data () {\n    return {\n      localOpenKeys: []\n    }\n  },\n  methods: {\n    handlePlus (item) {\n      this.$emit('add', item)\n    },\n    handleTitleClick (...args) {\n      this.$emit('titleClick', { args })\n    },\n\n    renderSearch () {\n      return (\n        <Search\n          placeholder=\"input search text\"\n          style=\"width: 100%; margin-bottom: 1rem\"\n        />\n      )\n    },\n    renderIcon (icon) {\n      return icon && (<Icon type={icon} />) || null\n    },\n    renderMenuItem (item) {\n      return (\n        <Item key={item.key}>\n          { this.renderIcon(item.icon) }\n          { item.title }\n          <a class=\"btn\" style=\"width: 20px;z-index:1300\" {...{ on: { click: () => this.handlePlus(item) } }}><a-icon type=\"plus\"/></a>\n        </Item>\n      )\n    },\n    renderItem (item) {\n      return item.children ? this.renderSubItem(item, item.key) : this.renderMenuItem(item, item.key)\n    },\n    renderItemGroup (item) {\n      const childrenItems = item.children.map(o => {\n        return this.renderItem(o, o.key)\n      })\n\n      return (\n        <ItemGroup key={item.key}>\n          <template slot=\"title\">\n            <span>{ item.title }</span>\n            <a-dropdown>\n              <a class=\"btn\"><a-icon type=\"ellipsis\" /></a>\n              <a-menu slot=\"overlay\">\n                <a-menu-item key=\"1\">新增</a-menu-item>\n                <a-menu-item key=\"2\">合并</a-menu-item>\n                <a-menu-item key=\"3\">移除</a-menu-item>\n              </a-menu>\n            </a-dropdown>\n          </template>\n          { childrenItems }\n        </ItemGroup>\n      )\n    },\n    renderSubItem (item, key) {\n      const childrenItems = item.children && item.children.map(o => {\n        return this.renderItem(o, o.key)\n      })\n\n      const title = (\n        <span slot=\"title\">\n          { this.renderIcon(item.icon) }\n          <span>{ item.title }</span>\n        </span>\n      )\n\n      if (item.group) {\n        return this.renderItemGroup(item)\n      }\n      // titleClick={this.handleTitleClick(item)}\n      return (\n        <SubMenu key={key}>\n          { title }\n          { childrenItems }\n        </SubMenu>\n      )\n    }\n  },\n  render () {\n    const { dataSource, search } = this.$props\n\n    // this.localOpenKeys = openKeys.slice(0)\n    const list = dataSource.map(item => {\n      return this.renderItem(item)\n    })\n\n    return (\n      <div class=\"tree-wrapper\">\n        { search ? this.renderSearch() : null }\n        <Menu mode=\"inline\" class=\"custom-tree\" {...{ on: { click: item => this.$emit('click', item), 'update:openKeys': val => { this.localOpenKeys = val } } }} openKeys={this.localOpenKeys}>\n          { list }\n        </Menu>\n      </div>\n    )\n  }\n}\n"]}]}