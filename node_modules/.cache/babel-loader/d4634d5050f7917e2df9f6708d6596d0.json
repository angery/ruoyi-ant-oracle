{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/form/advancedForm/AdvancedForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/form/advancedForm/AdvancedForm.vue","mtime":1581492640533},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport _toConsumableArray from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport RepositoryForm from \"./RepositoryForm\";\nimport TaskForm from \"./TaskForm\";\nimport FooterToolBar from '@/components/FooterToolbar';\nimport { mixin, mixinDevice } from '@/utils/mixin';\nvar fieldLabels = {\n  name: '仓库名',\n  url: '仓库域名',\n  owner: '仓库管理员',\n  approver: '审批人',\n  dateRange: '生效日期',\n  type: '仓库类型',\n  name2: '任务名',\n  url2: '任务描述',\n  owner2: '执行人',\n  approver2: '责任人',\n  dateRange2: '生效日期',\n  type2: '任务类型'\n};\nexport default {\n  name: 'AdvancedForm',\n  mixins: [mixin, mixinDevice],\n  components: {\n    FooterToolBar: FooterToolBar,\n    RepositoryForm: RepositoryForm,\n    TaskForm: TaskForm\n  },\n  data: function data() {\n    return {\n      description: '高级表单常见于一次性输入和提交大批量数据的场景。',\n      loading: false,\n      memberLoading: false,\n      // table\n      columns: [{\n        title: '成员姓名',\n        dataIndex: 'name',\n        key: 'name',\n        width: '20%',\n        scopedSlots: {\n          customRender: 'name'\n        }\n      }, {\n        title: '工号',\n        dataIndex: 'workId',\n        key: 'workId',\n        width: '20%',\n        scopedSlots: {\n          customRender: 'workId'\n        }\n      }, {\n        title: '所属部门',\n        dataIndex: 'department',\n        key: 'department',\n        width: '40%',\n        scopedSlots: {\n          customRender: 'department'\n        }\n      }, {\n        title: '操作',\n        key: 'action',\n        scopedSlots: {\n          customRender: 'operation'\n        }\n      }],\n      data: [{\n        key: '1',\n        name: '小明',\n        workId: '001',\n        editable: false,\n        department: '行政部'\n      }, {\n        key: '2',\n        name: '李莉',\n        workId: '002',\n        editable: false,\n        department: 'IT部'\n      }, {\n        key: '3',\n        name: '王小帅',\n        workId: '003',\n        editable: false,\n        department: '财务部'\n      }],\n      errors: []\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit(e) {\n      e.preventDefault();\n    },\n    newMember: function newMember() {\n      var length = this.data.length;\n      this.data.push({\n        key: length === 0 ? '1' : (parseInt(this.data[length - 1].key) + 1).toString(),\n        name: '',\n        workId: '',\n        department: '',\n        editable: true,\n        isNew: true\n      });\n    },\n    remove: function remove(key) {\n      var newData = this.data.filter(function (item) {\n        return item.key !== key;\n      });\n      this.data = newData;\n    },\n    saveRow: function saveRow(record) {\n      var _this = this;\n\n      this.memberLoading = true;\n      var key = record.key,\n          name = record.name,\n          workId = record.workId,\n          department = record.department;\n\n      if (!name || !workId || !department) {\n        this.memberLoading = false;\n        this.$message.error('请填写完整成员信息。');\n        return;\n      } // 模拟网络请求、卡顿 800ms\n\n\n      new Promise(function (resolve) {\n        setTimeout(function () {\n          resolve({\n            loop: false\n          });\n        }, 800);\n      }).then(function () {\n        var target = _this.data.find(function (item) {\n          return item.key === key;\n        });\n\n        target.editable = false;\n        target.isNew = false;\n        _this.memberLoading = false;\n      });\n    },\n    toggle: function toggle(key) {\n      var target = this.data.find(function (item) {\n        return item.key === key;\n      });\n      target._originalData = _objectSpread({}, target);\n      target.editable = !target.editable;\n    },\n    getRowByKey: function getRowByKey(key, newData) {\n      var data = this.data;\n      return (newData || data).find(function (item) {\n        return item.key === key;\n      });\n    },\n    cancel: function cancel(key) {\n      var target = this.data.find(function (item) {\n        return item.key === key;\n      });\n      Object.keys(target).forEach(function (key) {\n        target[key] = target._originalData[key];\n      });\n      target._originalData = undefined;\n    },\n    handleChange: function handleChange(value, key, column) {\n      var newData = _toConsumableArray(this.data);\n\n      var target = newData.find(function (item) {\n        return key === item.key;\n      });\n\n      if (target) {\n        target[column] = value;\n        this.data = newData;\n      }\n    },\n    // 最终全页面提交\n    validate: function validate() {\n      var _this2 = this;\n\n      var _this$$refs = this.$refs,\n          repository = _this$$refs.repository,\n          task = _this$$refs.task,\n          $notification = this.$notification;\n      var repositoryForm = new Promise(function (resolve, reject) {\n        repository.form.validateFields(function (err, values) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve(values);\n        });\n      });\n      var taskForm = new Promise(function (resolve, reject) {\n        task.form.validateFields(function (err, values) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve(values);\n        });\n      }); // clean this.errors\n\n      this.errors = [];\n      Promise.all([repositoryForm, taskForm]).then(function (values) {\n        $notification['error']({\n          message: 'Received values of form:',\n          description: JSON.stringify(values)\n        });\n      }).catch(function () {\n        var errors = Object.assign({}, repository.form.getFieldsError(), task.form.getFieldsError());\n\n        var tmp = _objectSpread({}, errors);\n\n        _this2.errorList(tmp);\n      });\n    },\n    errorList: function errorList(errors) {\n      if (!errors || errors.length === 0) {\n        return;\n      }\n\n      this.errors = Object.keys(errors).filter(function (key) {\n        return errors[key];\n      }).map(function (key) {\n        return {\n          key: key,\n          message: errors[key][0],\n          fieldLabel: fieldLabels[key]\n        };\n      });\n    },\n    scrollToField: function scrollToField(fieldKey) {\n      var labelNode = document.querySelector(\"label[for=\\\"\".concat(fieldKey, \"\\\"]\"));\n\n      if (labelNode) {\n        labelNode.scrollIntoView(true);\n      }\n    }\n  }\n};",{"version":3,"sources":["AdvancedForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a-card class=\"card\" title=\"仓库管理\" :bordered=\"false\">\n      <repository-form ref=\"repository\" :showSubmit=\"false\" />\n    </a-card>\n    <a-card class=\"card\" title=\"任务管理\" :bordered=\"false\">\n      <task-form ref=\"task\" :showSubmit=\"false\" />\n    </a-card>\n\n    <!-- table -->\n    <a-card>\n      <a-table\n        :columns=\"columns\"\n        :dataSource=\"data\"\n        :pagination=\"false\"\n        :loading=\"memberLoading\"\n      >\n        <template v-for=\"(col, i) in ['name', 'workId', 'department']\" :slot=\"col\" slot-scope=\"text, record\">\n          <a-input\n            :key=\"col\"\n            v-if=\"record.editable\"\n            style=\"margin: -5px 0\"\n            :value=\"text\"\n            :placeholder=\"columns[i].title\"\n            @change=\"e => handleChange(e.target.value, record.key, col)\"\n          />\n          <template v-else>{{ text }}</template>\n        </template>\n        <template slot=\"operation\" slot-scope=\"text, record\">\n          <template v-if=\"record.editable\">\n            <span v-if=\"record.isNew\">\n              <a @click=\"saveRow(record)\">添加</a>\n              <a-divider type=\"vertical\" />\n              <a-popconfirm title=\"是否要删除此行？\" @confirm=\"remove(record.key)\">\n                <a>删除</a>\n              </a-popconfirm>\n            </span>\n            <span v-else>\n              <a @click=\"saveRow(record)\">保存</a>\n              <a-divider type=\"vertical\" />\n              <a @click=\"cancel(record.key)\">取消</a>\n            </span>\n          </template>\n          <span v-else>\n            <a @click=\"toggle(record.key)\">编辑</a>\n            <a-divider type=\"vertical\" />\n            <a-popconfirm title=\"是否要删除此行？\" @confirm=\"remove(record.key)\">\n              <a>删除</a>\n            </a-popconfirm>\n          </span>\n        </template>\n      </a-table>\n      <a-button style=\"width: 100%; margin-top: 16px; margin-bottom: 8px\" type=\"dashed\" icon=\"plus\" @click=\"newMember\">新增成员</a-button>\n    </a-card>\n\n    <!-- fixed footer toolbar -->\n    <footer-tool-bar :style=\"{ width: isSideMenu() && isDesktop() ? `calc(100% - ${sidebarOpened ? 256 : 80}px)` : '100%'}\">\n      <span class=\"popover-wrapper\">\n        <a-popover title=\"表单校验信息\" overlayClassName=\"antd-pro-pages-forms-style-errorPopover\" trigger=\"click\" :getPopupContainer=\"trigger => trigger.parentNode\">\n          <template slot=\"content\">\n            <li v-for=\"item in errors\" :key=\"item.key\" @click=\"scrollToField(item.key)\" class=\"antd-pro-pages-forms-style-errorListItem\">\n              <a-icon type=\"cross-circle-o\" class=\"antd-pro-pages-forms-style-errorIcon\" />\n              <div class=\"\">{{ item.message }}</div>\n              <div class=\"antd-pro-pages-forms-style-errorField\">{{ item.fieldLabel }}</div>\n            </li>\n          </template>\n          <span class=\"antd-pro-pages-forms-style-errorIcon\" v-if=\"errors.length > 0\">\n            <a-icon type=\"exclamation-circle\" />{{ errors.length }}\n          </span>\n        </a-popover>\n      </span>\n      <a-button type=\"primary\" @click=\"validate\" :loading=\"loading\">提交</a-button>\n    </footer-tool-bar>\n  </div>\n</template>\n\n<script>\nimport RepositoryForm from './RepositoryForm'\nimport TaskForm from './TaskForm'\nimport FooterToolBar from '@/components/FooterToolbar'\nimport { mixin, mixinDevice } from '@/utils/mixin'\n\nconst fieldLabels = {\n  name: '仓库名',\n  url: '仓库域名',\n  owner: '仓库管理员',\n  approver: '审批人',\n  dateRange: '生效日期',\n  type: '仓库类型',\n  name2: '任务名',\n  url2: '任务描述',\n  owner2: '执行人',\n  approver2: '责任人',\n  dateRange2: '生效日期',\n  type2: '任务类型'\n}\n\nexport default {\n  name: 'AdvancedForm',\n  mixins: [mixin, mixinDevice],\n  components: {\n    FooterToolBar,\n    RepositoryForm,\n    TaskForm\n  },\n  data () {\n    return {\n      description: '高级表单常见于一次性输入和提交大批量数据的场景。',\n      loading: false,\n      memberLoading: false,\n\n      // table\n      columns: [\n        {\n          title: '成员姓名',\n          dataIndex: 'name',\n          key: 'name',\n          width: '20%',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '工号',\n          dataIndex: 'workId',\n          key: 'workId',\n          width: '20%',\n          scopedSlots: { customRender: 'workId' }\n        },\n        {\n          title: '所属部门',\n          dataIndex: 'department',\n          key: 'department',\n          width: '40%',\n          scopedSlots: { customRender: 'department' }\n        },\n        {\n          title: '操作',\n          key: 'action',\n          scopedSlots: { customRender: 'operation' }\n        }\n      ],\n      data: [\n        {\n          key: '1',\n          name: '小明',\n          workId: '001',\n          editable: false,\n          department: '行政部'\n        },\n        {\n          key: '2',\n          name: '李莉',\n          workId: '002',\n          editable: false,\n          department: 'IT部'\n        },\n        {\n          key: '3',\n          name: '王小帅',\n          workId: '003',\n          editable: false,\n          department: '财务部'\n        }\n      ],\n\n      errors: []\n    }\n  },\n  methods: {\n    handleSubmit (e) {\n      e.preventDefault()\n    },\n    newMember () {\n      const length = this.data.length\n      this.data.push({\n        key: length === 0 ? '1' : (parseInt(this.data[length - 1].key) + 1).toString(),\n        name: '',\n        workId: '',\n        department: '',\n        editable: true,\n        isNew: true\n      })\n    },\n    remove (key) {\n      const newData = this.data.filter(item => item.key !== key)\n      this.data = newData\n    },\n    saveRow (record) {\n      this.memberLoading = true\n      const { key, name, workId, department } = record\n      if (!name || !workId || !department) {\n        this.memberLoading = false\n        this.$message.error('请填写完整成员信息。')\n        return\n      }\n      // 模拟网络请求、卡顿 800ms\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({ loop: false })\n        }, 800)\n      }).then(() => {\n        const target = this.data.find(item => item.key === key)\n        target.editable = false\n        target.isNew = false\n        this.memberLoading = false\n      })\n    },\n    toggle (key) {\n      const target = this.data.find(item => item.key === key)\n      target._originalData = { ...target }\n      target.editable = !target.editable\n    },\n    getRowByKey (key, newData) {\n      const data = this.data\n      return (newData || data).find(item => item.key === key)\n    },\n    cancel (key) {\n      const target = this.data.find(item => item.key === key)\n      Object.keys(target).forEach(key => { target[key] = target._originalData[key] })\n      target._originalData = undefined\n    },\n    handleChange (value, key, column) {\n      const newData = [...this.data]\n      const target = newData.find(item => key === item.key)\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n    },\n\n    // 最终全页面提交\n    validate () {\n      const { $refs: { repository, task }, $notification } = this\n      const repositoryForm = new Promise((resolve, reject) => {\n        repository.form.validateFields((err, values) => {\n          if (err) {\n            reject(err)\n            return\n          }\n          resolve(values)\n        })\n      })\n      const taskForm = new Promise((resolve, reject) => {\n        task.form.validateFields((err, values) => {\n          if (err) {\n            reject(err)\n            return\n          }\n          resolve(values)\n        })\n      })\n\n      // clean this.errors\n      this.errors = []\n      Promise.all([repositoryForm, taskForm]).then(values => {\n        $notification['error']({\n          message: 'Received values of form:',\n          description: JSON.stringify(values)\n        })\n      }).catch(() => {\n        const errors = Object.assign({}, repository.form.getFieldsError(), task.form.getFieldsError())\n        const tmp = { ...errors }\n        this.errorList(tmp)\n      })\n    },\n    errorList (errors) {\n      if (!errors || errors.length === 0) {\n        return\n      }\n      this.errors = Object.keys(errors)\n        .filter(key => errors[key])\n        .map(key => ({\n          key: key,\n          message: errors[key][0],\n          fieldLabel: fieldLabels[key]\n        }))\n    },\n    scrollToField (fieldKey) {\n      const labelNode = document.querySelector(`label[for=\"${fieldKey}\"]`)\n      if (labelNode) {\n        labelNode.scrollIntoView(true)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .card{\n    margin-bottom: 24px;\n  }\n  .popover-wrapper {\n    /deep/ .antd-pro-pages-forms-style-errorPopover .ant-popover-inner-content {\n      min-width: 256px;\n      max-height: 290px;\n      padding: 0;\n      overflow: auto;\n    }\n  }\n  .antd-pro-pages-forms-style-errorIcon {\n    user-select: none;\n    margin-right: 24px;\n    color: #f5222d;\n    cursor: pointer;\n    i {\n          margin-right: 4px;\n    }\n  }\n  .antd-pro-pages-forms-style-errorListItem {\n    padding: 8px 16px;\n    list-style: none;\n    border-bottom: 1px solid #e8e8e8;\n    cursor: pointer;\n    transition: all .3s;\n\n    &:hover {\n      background: #e6f7ff;\n    }\n    .antd-pro-pages-forms-style-errorIcon {\n      float: left;\n      margin-top: 4px;\n      margin-right: 12px;\n      padding-bottom: 22px;\n      color: #f5222d;\n    }\n    .antd-pro-pages-forms-style-errorField {\n      margin-top: 2px;\n      color: rgba(0,0,0,.45);\n      font-size: 12px;\n    }\n  }\n</style>\n"],"sourceRoot":"src/views/form/advancedForm"}]}