{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/UserList.vue","mtime":1581495955935},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Tree } from 'ant-design-vue';\nimport { STable, STree } from '@/components';\nimport { getUserList, getDeptList, delUser, changUserStatus } from '@/api/system';\nimport UserModal from \"./modules/UserModal\";\nimport UserPwdModal from \"./modules/UserPwdModal\";\nimport pick from 'lodash.pick';\nimport { checkPermission } from '@/utils/permissions';\nexport default {\n  name: 'TableList',\n  components: {\n    Tree: Tree,\n    STree: STree,\n    STable: STable,\n    UserModal: UserModal,\n    UserPwdModal: UserPwdModal\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      description: '列表使用场景：后台管理中的权限管理以及角色管理，可用于基于 RBAC 设计的角色权限控制，颗粒度细到每一个操作类型。',\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      mdl: {},\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '用户名',\n        dataIndex: 'loginName'\n      }, {\n        title: '昵称',\n        dataIndex: 'userName'\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        scopedSlots: {\n          customRender: 'status'\n        }\n      }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        sorter: true\n      }, {\n        title: '操作',\n        width: '200px',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getUserList(Object.assign(parameter, _this.queryParam)).then(function (res) {\n          console.log('getUserList', res);\n          return res;\n        });\n      },\n      searchValue: '',\n      deptTree: [],\n      expandedKeys: [],\n      dataList: [],\n      autoExpandParent: true,\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:user:add'),\n      editEnabel: checkPermission('system:user:edit'),\n      resetPwdEnabel: checkPermission('system:user:resetPwd'),\n      removeEnable: checkPermission('system:user:remove')\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    getDeptList().then(function (res) {\n      var data = res.rows;\n\n      _this2.buildtree(data, _this2.deptTree, '0');\n\n      _this2.expandedKeys = data.map(function (m) {\n        return m.parentId;\n      });\n      _this2.dataList = data.map(function (m) {\n        return {\n          key: m.deptId,\n          title: m.deptName\n        };\n      });\n    });\n  },\n  methods: {\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    handleEdit: function handleEdit(record) {\n      this.$refs.modal.edit(record);\n    },\n    resetPwd: function resetPwd(record) {\n      this.$refs.pwdmodal.edit(record);\n    },\n    onChange: function onChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh();\n      console.log('handleSaveOk');\n    },\n    delByIds: function delByIds(ids) {\n      var _this3 = this;\n\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: function onOk() {\n          delUser({\n            ids: ids.join(',')\n          }).then(function (res) {\n            if (res.code === 0) {\n              _this3.$message.success(\"\\u5220\\u9664\\u6210\\u529F\");\n\n              _this3.handleOk();\n            } else {\n              _this3.$message.error(res.msg);\n            } // const difference = new Set(this.selectedRowKeys.filter(x => !new Set(ids).has(x)))\n            // this.selectedRowKeys = Array.from(difference)\n\n\n            _this3.selectedRowKeys = [];\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    onChangeStatus: function onChangeStatus(record) {\n      var _this4 = this;\n\n      record.status = record.status === '0' ? '1' : '0';\n      changUserStatus(pick(record, 'userId', 'status')).then(function (res) {\n        if (res.code === 0) {\n          _this4.$message.success('保存成功');\n        } else {\n          _this4.$message.error(res.msg);\n        }\n      }); // 发送状态到服务器\n    },\n    buildtree: function buildtree(list, arr, parentId) {\n      var _this5 = this;\n\n      list.forEach(function (item) {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.deptId,\n            value: item.deptId,\n            // value是给modal的select用的，2者属性不一样\n            title: item.deptName,\n            scopedSlots: {\n              title: 'title'\n            },\n            children: []\n          };\n\n          _this5.buildtree(list, child.children, item.deptId);\n\n          if (child.children.length === 0) {\n            delete child.children;\n          }\n\n          arr.push(child);\n        }\n      });\n    },\n    // 下面是树相关方法\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    emitEmpty: function emitEmpty() {\n      this.$refs.searchInput.focus();\n      this.searchValue = '';\n      this.searchDept();\n    },\n    getParentKey: function getParentKey(key, tree) {\n      var parentKey;\n\n      for (var i = 0; i < tree.length; i++) {\n        var node = tree[i];\n\n        if (node.children) {\n          if (node.children.some(function (item) {\n            return item.key === key;\n          })) {\n            parentKey = node.key;\n          } else if (this.getParentKey(key, node.children)) {\n            parentKey = this.getParentKey(key, node.children);\n          }\n        }\n      }\n\n      return parentKey;\n    },\n    handleChange: function handleChange(e) {\n      this.searchDept();\n    },\n    searchDept: function searchDept() {\n      var _this6 = this;\n\n      var value = this.searchValue;\n      var expandedKeys = this.dataList.map(function (item) {\n        if (item.title.indexOf(value) > -1) {\n          var parentKey = _this6.getParentKey(item.key, _this6.deptTree);\n\n          return parentKey;\n        }\n\n        return null;\n      }).filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      });\n      Object.assign(this, {\n        expandedKeys: expandedKeys,\n        autoExpandParent: true\n      });\n    },\n    handleSelect: function handleSelect(selectedKeys, info) {\n      this.queryParam = {\n        deptId: selectedKeys[0]\n      };\n      this.$refs.table.refresh(true);\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA,SAAA,IAAA,QAAA,gBAAA;AACA,SAAA,MAAA,EAAA,KAAA,QAAA,cAAA;AACA,SAAA,WAAA,EAAA,WAAA,EAAA,OAAA,EAAA,eAAA,QAAA,cAAA;AACA,OAAA,SAAA;AACA,OAAA,YAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,SAAA,eAAA,QAAA,qBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,SAAA,EAAA,SAJA;AAKA,IAAA,YAAA,EAAA;AALA,GAFA;AASA,EAAA,IATA,kBASA;AAAA;;AACA,WAAA;AACA,MAAA,WAAA,EAAA,4DADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAHA;AAOA,MAAA,UAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAPA;AAWA,MAAA,GAAA,EAAA,EAXA;AAYA;AACA,MAAA,QAAA,EAAA,KAbA;AAcA;AACA,MAAA,UAAA,EAAA,EAfA;AAgBA;AACA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,SAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA,QAFA;AAGA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAHA,OATA,EAcA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,SAAA,EAAA,YAFA;AAGA,QAAA,MAAA,EAAA;AAHA,OAdA,EAkBA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA,OAFA;AAGA,QAAA,SAAA,EAAA,QAHA;AAIA,QAAA,WAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAJA,OAlBA,CAjBA;AA0CA;AACA,MAAA,QAAA,EAAA,kBAAA,SAAA,EAAA;AACA,eAAA,WAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA,KAAA,CAAA,UAAA,CAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,GAAA;AACA,iBAAA,GAAA;AACA,SAJA,CAAA;AAKA,OAjDA;AAkDA,MAAA,WAAA,EAAA,EAlDA;AAmDA,MAAA,QAAA,EAAA,EAnDA;AAoDA,MAAA,YAAA,EAAA,EApDA;AAqDA,MAAA,QAAA,EAAA,EArDA;AAsDA,MAAA,gBAAA,EAAA,IAtDA;AAuDA,MAAA,eAAA,EAAA,EAvDA;AAwDA,MAAA,YAAA,EAAA,EAxDA;AAyDA,MAAA,SAAA,EAAA,eAAA,CAAA,iBAAA,CAzDA;AA0DA,MAAA,UAAA,EAAA,eAAA,CAAA,kBAAA,CA1DA;AA2DA,MAAA,cAAA,EAAA,eAAA,CAAA,sBAAA,CA3DA;AA4DA,MAAA,YAAA,EAAA,eAAA,CAAA,oBAAA;AA5DA,KAAA;AA8DA,GAxEA;AAyEA,EAAA,OAzEA,qBAyEA;AAAA;;AACA,IAAA,WAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,IAAA,GAAA,GAAA,CAAA,IAAA;;AACA,MAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA,QAAA,EAAA,GAAA;;AACA,MAAA,MAAA,CAAA,YAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,QAAA;AAAA,OAAA,CAAA;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA;AAAA,UAAA,GAAA,EAAA,CAAA,CAAA,MAAA;AAAA,UAAA,KAAA,EAAA,CAAA,CAAA;AAAA,SAAA;AACA,OAFA,CAAA;AAGA,KAPA;AAQA,GAlFA;AAmFA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,eADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,2BAAA,EAAA,eAAA;AACA,WAAA,eAAA,GAAA,eAAA;AACA,KAJA;AAKA,IAAA,UALA,sBAKA,MALA,EAKA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA;AACA,KAPA;AAQA,IAAA,QARA,oBAQA,MARA,EAQA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,KAVA;AAWA,IAAA,QAXA,oBAWA,eAXA,EAWA,YAXA,EAWA;AACA,WAAA,eAAA,GAAA,eAAA;AACA,WAAA,YAAA,GAAA,YAAA;AACA,KAdA;AAeA,IAAA,QAfA,sBAeA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,KAlBA;AAmBA,IAAA,QAnBA,oBAmBA,GAnBA,EAmBA;AAAA;;AACA,WAAA,QAAA,CAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,OAAA,EAAA,aAFA;AAGA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,OAAA,CAAA;AAAA,YAAA,GAAA,EAAA,GAAA,CAAA,IAAA,CAAA,GAAA;AAAA,WAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA;;AACA,cAAA,MAAA,CAAA,QAAA;AACA,aAHA,MAGA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA;AACA,aANA,CAOA;AACA;;;AACA,YAAA,MAAA,CAAA,eAAA,GAAA,EAAA;AACA,WAVA;AAWA,SAfA;AAgBA,QAAA,QAhBA,sBAgBA,CACA;AAjBA,OAAA;AAmBA,KAvCA;AAwCA,IAAA,cAxCA,0BAwCA,MAxCA,EAwCA;AAAA;;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,MAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA;AACA,MAAA,eAAA,CAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,OANA,EAFA,CASA;AACA,KAlDA;AAmDA,IAAA,SAnDA,qBAmDA,IAnDA,EAmDA,GAnDA,EAmDA,QAnDA,EAmDA;AAAA;;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,cAAA,KAAA,GAAA;AACA,YAAA,GAAA,EAAA,IAAA,CAAA,MADA;AAEA,YAAA,KAAA,EAAA,IAAA,CAAA,MAFA;AAEA;AACA,YAAA,KAAA,EAAA,IAAA,CAAA,QAHA;AAIA,YAAA,WAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAJA;AAKA,YAAA,QAAA,EAAA;AALA,WAAA;;AAOA,UAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,QAAA,EAAA,IAAA,CAAA,MAAA;;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,KAAA,CAAA,QAAA;AAAA;;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,OAbA;AAcA,KAlEA;AAmEA;AACA,IAAA,QApEA,oBAoEA,YApEA,EAoEA;AACA,WAAA,YAAA,GAAA,YAAA;AACA,WAAA,gBAAA,GAAA,KAAA;AACA,KAvEA;AAwEA,IAAA,SAxEA,uBAwEA;AACA,WAAA,KAAA,CAAA,WAAA,CAAA,KAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,UAAA;AACA,KA5EA;AA6EA,IAAA,YA7EA,wBA6EA,GA7EA,EA6EA,IA7EA,EA6EA;AACA,UAAA,SAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,CAAA,CAAA;;AACA,YAAA,IAAA,CAAA,QAAA,EAAA;AACA,cAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,mBAAA,IAAA,CAAA,GAAA,KAAA,GAAA;AAAA,WAAA,CAAA,EAAA;AACA,YAAA,SAAA,GAAA,IAAA,CAAA,GAAA;AACA,WAFA,MAEA,IAAA,KAAA,YAAA,CAAA,GAAA,EAAA,IAAA,CAAA,QAAA,CAAA,EAAA;AACA,YAAA,SAAA,GAAA,KAAA,YAAA,CAAA,GAAA,EAAA,IAAA,CAAA,QAAA,CAAA;AACA;AACA;AACA;;AACA,aAAA,SAAA;AACA,KA1FA;AA2FA,IAAA,YA3FA,wBA2FA,CA3FA,EA2FA;AACA,WAAA,UAAA;AACA,KA7FA;AA8FA,IAAA,UA9FA,wBA8FA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,WAAA;AACA,UAAA,YAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAAA,CAAA,EAAA;AACA,cAAA,SAAA,GAAA,MAAA,CAAA,YAAA,CAAA,IAAA,CAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAAA;;AACA,iBAAA,SAAA;AACA;;AACA,eAAA,IAAA;AACA,OANA,EAMA,MANA,CAMA,UAAA,IAAA,EAAA,CAAA,EAAA,IAAA;AAAA,eAAA,IAAA,IAAA,IAAA,CAAA,OAAA,CAAA,IAAA,MAAA,CAAA;AAAA,OANA,CAAA;AAOA,MAAA,MAAA,CAAA,MAAA,CAAA,IAAA,EAAA;AACA,QAAA,YAAA,EAAA,YADA;AAEA,QAAA,gBAAA,EAAA;AAFA,OAAA;AAIA,KA3GA;AA4GA,IAAA,YA5GA,wBA4GA,YA5GA,EA4GA,IA5GA,EA4GA;AACA,WAAA,UAAA,GAAA;AACA,QAAA,MAAA,EAAA,YAAA,CAAA,CAAA;AADA,OAAA;AAGA,WAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA;AACA;AAjHA,GAnFA;AAsMA,EAAA,KAAA,EAAA;AACA;;;;;;;;;;;;AADA;AAtMA,CAAA","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-row :gutter=\"8\">\n      <a-col :span=\"5\">\n        <a-input style=\"margin-bottom: 8px\" placeholder=\"搜索部门\" v-model=\"searchValue\" @change=\"handleChange\" ref=\"searchInput\" >\n          <a-icon slot=\"prefix\" type=\"search\" />\n          <a-icon v-if=\"searchValue\" slot=\"suffix\" type=\"close-circle\" @click=\"emitEmpty\" />\n        </a-input>\n        <a-tree\n          v-if=\"deptTree.length>0\"\n          :treeData=\"deptTree\"\n          @expand=\"onExpand\"\n          :expandedKeys=\"expandedKeys\"\n          :autoExpandParent=\"autoExpandParent\"\n          @select=\"handleSelect\">\n          <template slot=\"title\" slot-scope=\"{title}\">\n            <span v-if=\"title.indexOf(searchValue) > -1\">\n              {{ title.substr(0, title.indexOf(searchValue)) }}\n              <span style=\"color: red\">{{ searchValue }}</span>\n              {{ title.substr(title.indexOf(searchValue) + searchValue.length) }}\n            </span>\n            <span v-else>{{ title }}</span>\n          </template>\n        </a-tree>\n      </a-col>\n      <a-col :span=\"19\">\n        <div class=\"table-page-search-wrapper\">\n          <a-form layout=\"inline\">\n            <a-row :gutter=\"48\">\n              <a-col :md=\"5\" d:sm=\"15\">\n                <a-form-item label=\"用户名\">\n                  <a-input placeholder=\"请输入\" v-model=\"queryParam.loginName\"/>\n                </a-form-item>\n              </a-col>\n              <a-col :md=\"5\" d:sm=\"15\">\n                <a-form-item label=\"状态\">\n                  <a-select placeholder=\"请选择\" v-model=\"queryParam.status\" >\n                    <a-select-option :value=\"''\">全部</a-select-option>\n                    <a-select-option :value=\"'0'\">正常</a-select-option>\n                    <a-select-option :value=\"'1'\">禁用</a-select-option>\n                  </a-select>\n                </a-form-item>\n              </a-col>\n              <a-col :md=\"5\" d:sm=\"15\">\n                <span class=\"table-page-search-submitButtons\">\n                  <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n                  <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n                </span>\n              </a-col>\n            </a-row>\n          </a-form>\n        </div>\n        <div class=\"table-operator\">\n          <!-- <a-button type=\"primary\" icon=\"plus\" @click=\"$refs.modal.add()\">新建</a-button>\n      <a-dropdown v-if=\"selectedRowKeys.length > 0\"> -->\n          <a-button v-if=\"addEnable\" type=\"primary\" icon=\"plus\" @click=\"$refs.modal.add()\">新建</a-button>\n          <a-dropdown v-if=\"removeEnable&& selectedRowKeys.length > 0\">\n            <!-- <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\"><a-icon type=\"delete\" />删除</a-menu-item>\n          <a-menu-item key=\"2\"><a-icon type=\"lock\" />禁用</a-menu-item>\n        </a-menu>\n        <a-button style=\"margin-left: 8px\">\n          批量操作 <a-icon type=\"down\" />\n        </a-button> -->\n            <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n          </a-dropdown>\n        </div>\n        <s-table\n          size=\"default\"\n          ref=\"table\"\n          rowKey=\"userId\"\n          :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n          :columns=\"columns\"\n          :data=\"loadData\"\n        >\n          <span slot=\"status\" slot-scope=\"text,record\">\n            <a-switch :checked=\"record.status=='0'\" @change=\"onChangeStatus(record)\"/>\n          </span>\n          <span slot=\"action\" slot-scope=\"text, record\">\n            <a v-if=\"editEnabel\" @click=\"handleEdit(record)\">编辑</a>\n            <a-divider type=\"vertical\" />\n            <a v-if=\"removeEnable\" @click=\"delByIds([record.userId])\">删除</a>\n            <a-divider type=\"vertical\" />\n            <a v-if=\"resetPwdEnabel\" @click=\"resetPwd(record)\">重置密码</a>\n          </span>\n        </s-table>\n      </a-col>\n    </a-row>\n    <user-modal ref=\"modal\" @ok=\"handleOk\" :deptTree=\"deptTree\"/>\n    <user-pwd-modal ref=\"pwdmodal\"/>\n  </a-card>\n</template>\n\n<script>\nimport { Tree } from 'ant-design-vue'\nimport { STable, STree } from '@/components'\nimport { getUserList, getDeptList, delUser, changUserStatus } from '@/api/system'\nimport UserModal from './modules/UserModal'\nimport UserPwdModal from './modules/UserPwdModal'\nimport pick from 'lodash.pick'\nimport { checkPermission } from '@/utils/permissions'\nexport default {\n  name: 'TableList',\n  components: {\n    Tree,\n    STree,\n    STable,\n    UserModal,\n    UserPwdModal\n  },\n  data () {\n    return {\n      description: '列表使用场景：后台管理中的权限管理以及角色管理，可用于基于 RBAC 设计的角色权限控制，颗粒度细到每一个操作类型。',\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      mdl: {},\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '用户名',\n          dataIndex: 'loginName'\n        },\n        {\n          title: '昵称',\n          dataIndex: 'userName'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        }, {\n          title: '操作',\n          width: '200px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getUserList(Object.assign(parameter, this.queryParam))\n          .then(res => {\n            console.log('getUserList', res)\n            return res\n          })\n      },\n      searchValue: '',\n      deptTree: [],\n      expandedKeys: [],\n      dataList: [],\n      autoExpandParent: true,\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:user:add'),\n      editEnabel: checkPermission('system:user:edit'),\n      resetPwdEnabel: checkPermission('system:user:resetPwd'),\n      removeEnable: checkPermission('system:user:remove')\n    }\n  },\n  created () {\n    getDeptList().then(res => {\n      const data = res.rows\n      this.buildtree(data, this.deptTree, '0')\n      this.expandedKeys = data.map(m => m.parentId)\n      this.dataList = data.map(m => {\n        return { key: m.deptId, title: m.deptName }\n      })\n    })\n  },\n  methods: {\n    onSelectChange (selectedRowKeys) {\n      console.log('selectedRowKeys changed: ', selectedRowKeys)\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleEdit (record) {\n      this.$refs.modal.edit(record)\n    },\n    resetPwd (record) {\n      this.$refs.pwdmodal.edit(record)\n    },\n    onChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    handleOk () {\n      this.$refs.table.refresh()\n      console.log('handleSaveOk')\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delUser({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            // const difference = new Set(this.selectedRowKeys.filter(x => !new Set(ids).has(x)))\n            // this.selectedRowKeys = Array.from(difference)\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    },\n    onChangeStatus (record) {\n      record.status = record.status === '0' ? '1' : '0'\n      changUserStatus(pick(record, 'userId', 'status')).then(res => {\n        if (res.code === 0) {\n          this.$message.success('保存成功')\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n      // 发送状态到服务器\n    },\n    buildtree (list, arr, parentId) {\n      list.forEach(item => {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.deptId,\n            value: item.deptId, // value是给modal的select用的，2者属性不一样\n            title: item.deptName,\n            scopedSlots: { title: 'title' },\n            children: []\n          }\n          this.buildtree(list, child.children, item.deptId)\n          if (child.children.length === 0) { delete child.children }\n          arr.push(child)\n        }\n      })\n    },\n    // 下面是树相关方法\n    onExpand  (expandedKeys) {\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    emitEmpty () {\n      this.$refs.searchInput.focus()\n      this.searchValue = ''\n      this.searchDept()\n    },\n    getParentKey (key, tree) {\n      let parentKey\n      for (let i = 0; i < tree.length; i++) {\n        const node = tree[i]\n        if (node.children) {\n          if (node.children.some(item => item.key === key)) {\n            parentKey = node.key\n          } else if (this.getParentKey(key, node.children)) {\n            parentKey = this.getParentKey(key, node.children)\n          }\n        }\n      }\n      return parentKey\n    },\n    handleChange (e) {\n      this.searchDept()\n    },\n    searchDept () {\n      const value = this.searchValue\n      const expandedKeys = this.dataList.map((item) => {\n        if (item.title.indexOf(value) > -1) {\n          const parentKey = this.getParentKey(item.key, this.deptTree)\n          return parentKey\n        }\n        return null\n      }).filter((item, i, self) => item && self.indexOf(item) === i)\n      Object.assign(this, {\n        expandedKeys,\n        autoExpandParent: true\n      })\n    },\n    handleSelect (selectedKeys, info) {\n      this.queryParam = {\n        deptId: selectedKeys[0]\n      }\n      this.$refs.table.refresh(true)\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system"}]}