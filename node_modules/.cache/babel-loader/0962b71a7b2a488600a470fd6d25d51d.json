{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcDefNode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcDefNode.vue","mtime":1581494123460},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Tree, Icon } from 'ant-design-vue';\nimport { STable } from '@/components';\nimport { getNodeList, getNodeInfo, updateNodeInfo } from '@/api/activiti';\nimport { getDeptList, getUserList, getRoleAll } from '@/api/system';\nimport pick from 'lodash.pick';\nvar MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1574906_mvhehmkaer.js' // 在 iconfont.cn 上生成\n\n});\nexport default {\n  name: 'TableList',\n  components: {\n    Tree: Tree,\n    STable: STable,\n    MyIcon: MyIcon\n  },\n  data: function data() {\n    return {\n      visible: false,\n      labelCol: {\n        lg: {\n          span: 3\n        },\n        sm: {\n          span: 3\n        }\n      },\n      wrapperCol: {\n        lg: {\n          span: 20\n        },\n        sm: {\n          span: 12\n        }\n      },\n      mdl: {},\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      deptChecked: false,\n      depts: [],\n      userChecked: false,\n      users: [],\n      roleChecked: false,\n      roles: [],\n      deptHeader: false,\n      nodes: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var procDefId = this.$route.query.procDefId;\n    getNodeList(procDefId).then(function (res) {\n      _this.nodes = res.rows.map(function (n) {\n        var icon = '';\n\n        switch (n.type) {\n          case 0:\n            icon = 'icon-kaishi1';\n            break;\n\n          case 2:\n            icon = 'icon-jieshu';\n            break;\n\n          default:\n            icon = 'icon-shen';\n        }\n\n        return {\n          name: n.name,\n          nodeId: n.nodeId,\n          icon: icon,\n          type: n.type\n        };\n      });\n    });\n    getRoleAll().then(function (res) {\n      _this.roles = res.rows;\n    });\n    getDeptList().then(function (res) {\n      var data = res.rows;\n\n      _this.buildtree(data, _this.depts, '0');\n    });\n    getUserList().then(function (res) {\n      _this.users = res.rows;\n    });\n  },\n  methods: {\n    handleSelect: function handleSelect(e) {\n      var _this2 = this;\n\n      var nodeId = e.key;\n      var node = this.nodes.filter(function (item) {\n        return nodeId === item.nodeId;\n      })[0];\n\n      if (node.type === 1) {\n        getNodeInfo(nodeId).then(function (res) {\n          var data = res.data;\n          _this2.mdl = Object.assign(data, node);\n          _this2.roleChecked = data.roleIds.length > 0;\n          _this2.deptChecked = data.deptIds.length > 0;\n          _this2.userChecked = data.userIds.length > 0;\n          _this2.deptHeader = data.deptHeader;\n          console.log('mdl:', _this2.mdl);\n\n          _this2.$nextTick(function () {\n            _this2.form.setFieldsValue(pick(_this2.mdl, 'nodeId', 'userIds', 'deptIds', 'roleIds', 'deptHeader'));\n\n            console.log('form.deptHeader:', _this2.form.getFieldValue('deptHeader')); // this.form.setFieldsValue({ ...record })\n          });\n        });\n      } else {\n        this.$message.error('只能编辑任务节点');\n        this.mdl = {};\n        this.roleChecked = this.deptChecked = this.userChecked = this.deptHeader = false;\n      }\n    },\n    onChangeRole: function onChangeRole(e) {\n      var value = e.target.checked;\n      this.roleChecked = value;\n\n      if (!value) {\n        this.form.setFieldsValue({\n          roleIds: []\n        });\n      }\n    },\n    onChangeDept: function onChangeDept(e) {\n      var value = e.target.checked;\n      this.deptChecked = value;\n\n      if (!value) {\n        this.form.setFieldsValue({\n          deptIds: []\n        });\n      }\n    },\n    buildtree: function buildtree(list, arr, parentId) {\n      var _this3 = this;\n\n      list.forEach(function (item) {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.deptId,\n            value: item.deptId,\n            // value是给modal的select用的，2者属性不一样\n            title: item.deptName,\n            scopedSlots: {\n              title: 'title'\n            },\n            children: []\n          };\n\n          _this3.buildtree(list, child.children, item.deptId);\n\n          if (child.children.length === 0) {\n            delete child.children;\n          }\n\n          arr.push(child);\n        }\n      });\n    },\n    onChangeUser: function onChangeUser(e) {\n      var value = e.target.checked;\n      this.userChecked = value;\n\n      if (!value) {\n        this.form.setFieldsValue({\n          userIds: []\n        });\n      }\n    },\n    onChangeDeptHeader: function onChangeDeptHeader(e) {\n      this.deptHeader = e.target.checked;\n      this.form.setFieldsValue({\n        deptHeader: this.deptHeader\n      });\n    },\n    handleChangeDept: function handleChangeDept(value, label, extra) {\n      console.log(extra);\n\n      if (extra.selected && extra.triggerNode.$children.length > 0) {\n        this.$message.error('不能选择父节点 ' + extra.triggerNode.title);\n        value.splice(value.findIndex(function (item) {\n          return item === extra.triggerValue;\n        }), 1);\n      }\n    },\n    toList: function toList() {\n      this.$router.push({\n        name: 'procDefList'\n      });\n    },\n    handleSubmit: function handleSubmit(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          _this4.confirmLoading = true;\n          updateNodeInfo(values).then(function (res) {\n            if (res.code === 0) {\n              _this4.$message.success('保存成功'); // this.toList()\n\n            } else {\n              _this4.$message.error(res.msg);\n            }\n          }).catch(function () {\n            _this4.$message.error('系统错误，请稍后再试');\n          }).finally(function () {\n            _this4.confirmLoading = false;\n          });\n        }\n      });\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["ProcDefNode.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-row :gutter=\"8\">\n      <a-col :span=\"5\">\n        <!-- <a-tree\n          v-if=\"nodes.length>0\"\n          :treeData=\"nodes\"\n          showIcon\n          @select=\"handleSelect\">\n          <my-icon slot=\"0\" type=\"icon-kaishi1\" />\n          <my-icon slot=\"1\" type=\"icon-shen\" />\n          <my-icon slot=\"2\" type=\"icon-jieshu\" />\n        </a-tree> -->\n        <a-menu style=\"width: 256px\" mode=\"vertical\" @select=\"handleSelect\">\n          <a-menu-item v-for=\"node in nodes\" :key=\"node.nodeId\" :title=\"node.name\" >\n            <my-icon :type=\"node.icon\" />\n            {{ node.name }}\n          </a-menu-item>\n        </a-menu>\n      </a-col>\n      <a-col :span=\"12\">\n        <div class=\"table-page-search-wrapper\">\n          <a-form @submit=\"handleSubmit\" :form=\"form\">\n            <a-form-item\n              :wrapperCol=\"{ span: 22 }\">\n              <a-alert message=\"温馨提示：若流程运行至未分配审批人员的审批节点时，流程将自动中断取消\" type=\"warning\" showIcon />\n            </a-form-item>\n            <a-form-item v-show=\"false\">\n              <a-input v-decorator=\"['nodeId']\"/>\n            </a-form-item>\n            <a-form-item v-show=\"false\">\n              <a-input v-decorator=\"['deptHeader']\"/>\n            </a-form-item>\n            <a-form-item\n              label=\"节点名称\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\">\n              <span>{{ mdl.name }}</span>\n            </a-form-item>\n            <a-form-item\n              label=\"审批人\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\">\n              <a-checkbox @change=\"onChangeRole\" :checked=\"roleChecked\">角色</a-checkbox>\n              <a-checkbox @change=\"onChangeDept\" :checked=\"deptChecked\">部门</a-checkbox>\n              <a-checkbox @change=\"onChangeUser\" :checked=\"userChecked\">用户</a-checkbox>\n              <a-checkbox @change=\"onChangeDeptHeader\" :checked=\"deptHeader\" >所属部门负责人</a-checkbox>\n            </a-form-item>\n            <a-form-item\n              label=\"选择角色\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              v-show=\"roleChecked\"\n            >\n              <!-- <a-select\n                v-decorator=\"['roleIds', {rules: [{ required: roleChecked, message: '至少选择一个角色' }]}]\"\n                mode=\"multiple\"\n                allowClear\n                placeholder=\"角色\">\n                <a-select-option v-for=\"(item, index) in roles\" :key=\"index\" :value=\"item.roleId\">{{ item.roleName }}</a-select-option>\n              </a-select> -->\n\n              <a-select\n                v-decorator=\"['roleIds', {rules: [{ required: roleChecked, message: '至少选择一个用户' }]}]\"\n                mode=\"multiple\"\n                allowClear\n                placeholder=\"用户\">\n                <a-select-option v-for=\"(item, index) in roles\" :key=\"index\" :value=\"item.roleId\">{{ item.roleName }}</a-select-option>\n              </a-select>\n            </a-form-item>\n            <a-form-item\n              label=\"选择部门\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              v-show=\"deptChecked\"\n            >\n              <a-tree-select\n                v-decorator=\"['deptIds', {rules: [{ required: deptChecked, message: '至少选择一个部门' }]}]\"\n                :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\n                :treeData=\"depts\"\n                treeDefaultExpandAll\n                @change=\"handleChangeDept\"\n                placeholder=\"部门\"\n                multiple\n                allowClear\n              >\n              </a-tree-select>\n            </a-form-item>\n            <a-form-item\n              label=\"选择用户\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              v-show=\"userChecked\"\n            >\n              <a-select\n                v-decorator=\"['userIds', {rules: [{ required: userChecked, message: '至少选择一个用户' }]}]\"\n                mode=\"multiple\"\n                allowClear\n                placeholder=\"用户\">\n                <a-select-option v-for=\"(item, index) in users\" :key=\"index\" :value=\"item.userId\">{{ item.userName+' - '+item.loginName }}</a-select-option>\n              </a-select>\n            </a-form-item>\n            <a-form-item\n              :wrapperCol=\"{ span: 24 }\"\n              style=\"text-align: center\"\n            >\n              <a-button htmlType=\"submit\" type=\"primary\" :loading=\"confirmLoading\" :disabled=\"mdl.type!==1\">提交</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"toList\">返回</a-button>\n            </a-form-item>\n          </a-form>\n        </div>\n      </a-col>\n    </a-row>\n  </a-card>\n</template>\n\n<script>\nimport { Tree, Icon } from 'ant-design-vue'\nimport { STable } from '@/components'\nimport { getNodeList, getNodeInfo, updateNodeInfo } from '@/api/activiti'\nimport { getDeptList, getUserList, getRoleAll } from '@/api/system'\nimport pick from 'lodash.pick'\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1574906_mvhehmkaer.js' // 在 iconfont.cn 上生成\n})\nexport default {\n  name: 'TableList',\n  components: {\n    Tree,\n    STable,\n    MyIcon\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        lg: { span: 3 }, sm: { span: 3 }\n      },\n      wrapperCol: {\n        lg: { span: 20 }, sm: { span: 12 }\n      },\n      mdl: {},\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      deptChecked: false,\n      depts: [],\n      userChecked: false,\n      users: [],\n      roleChecked: false,\n      roles: [],\n      deptHeader: false,\n      nodes: []\n    }\n  },\n  created () {\n    const procDefId = this.$route.query.procDefId\n    getNodeList(procDefId).then(res => {\n      this.nodes = res.rows.map(n => {\n        let icon = ''\n        switch (n.type) {\n          case 0:\n            icon = 'icon-kaishi1'\n            break\n          case 2:\n            icon = 'icon-jieshu'\n            break\n          default:\n            icon = 'icon-shen'\n        }\n        return { name: n.name, nodeId: n.nodeId, icon: icon, type: n.type }\n      })\n    })\n    getRoleAll().then(res => {\n      this.roles = res.rows\n    })\n    getDeptList().then(res => {\n      const data = res.rows\n      this.buildtree(data, this.depts, '0')\n    })\n    getUserList().then(res => {\n      this.users = res.rows\n    })\n  },\n  methods: {\n    handleSelect (e) {\n      const nodeId = e.key\n      const node = this.nodes.filter(item => nodeId === item.nodeId)[0]\n      if (node.type === 1) {\n        getNodeInfo(nodeId).then(res => {\n          const data = res.data\n          this.mdl = Object.assign(data, node)\n          this.roleChecked = data.roleIds.length > 0\n          this.deptChecked = data.deptIds.length > 0\n          this.userChecked = data.userIds.length > 0\n          this.deptHeader = data.deptHeader\n          console.log('mdl:', this.mdl)\n          this.$nextTick(() => {\n            this.form.setFieldsValue(pick(this.mdl, 'nodeId', 'userIds', 'deptIds', 'roleIds', 'deptHeader'))\n            console.log('form.deptHeader:', this.form.getFieldValue('deptHeader'))\n            // this.form.setFieldsValue({ ...record })\n          })\n        })\n      } else {\n        this.$message.error('只能编辑任务节点')\n        this.mdl = {}\n        this.roleChecked = this.deptChecked = this.userChecked = this.deptHeader = false\n      }\n    },\n    onChangeRole (e) {\n      const value = e.target.checked\n      this.roleChecked = value\n      if (!value) { this.form.setFieldsValue({ roleIds: [] }) }\n    },\n    onChangeDept (e) {\n      const value = e.target.checked\n      this.deptChecked = value\n      if (!value) { this.form.setFieldsValue({ deptIds: [] }) }\n    },\n    buildtree (list, arr, parentId) {\n      list.forEach(item => {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.deptId,\n            value: item.deptId, // value是给modal的select用的，2者属性不一样\n            title: item.deptName,\n            scopedSlots: { title: 'title' },\n            children: []\n          }\n          this.buildtree(list, child.children, item.deptId)\n          if (child.children.length === 0) { delete child.children }\n          arr.push(child)\n        }\n      })\n    },\n    onChangeUser (e) {\n      const value = e.target.checked\n      this.userChecked = value\n      if (!value) { this.form.setFieldsValue({ userIds: [] }) }\n    },\n    onChangeDeptHeader (e) {\n      this.deptHeader = e.target.checked\n      this.form.setFieldsValue({ deptHeader: this.deptHeader })\n    },\n    handleChangeDept (value, label, extra) {\n      console.log(extra)\n      if (extra.selected && extra.triggerNode.$children.length > 0) {\n        this.$message.error('不能选择父节点 ' + extra.triggerNode.title)\n        value.splice(value.findIndex(item => item === extra.triggerValue), 1)\n      }\n    },\n    toList () {\n      this.$router.push({ name: 'procDefList' })\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values)\n          this.confirmLoading = true\n          updateNodeInfo(values).then(res => {\n            if (res.code === 0) {\n              this.$message.success('保存成功')\n              // this.toList()\n            } else {\n              this.$message.error(res.msg)\n            }\n          }).catch(() => {\n            this.$message.error('系统错误，请稍后再试')\n          }).finally(() => {\n            this.confirmLoading = false\n          })\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n/deep/ .ant-menu-vertical {\n  .ant-menu-item{\n    display: flex;\n    .anticon{\n        font-size: 24px;\n        display: flex;\n        align-items: center;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/activiti"}]}