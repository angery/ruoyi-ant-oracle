{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/RoleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/RoleModal.vue","mtime":1581586557926},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPermissions, getRolePermIds, saveRole } from '@/api/system';\nimport pick from 'lodash.pick';\nexport default {\n  name: 'RoleModal',\n  data: function data() {\n    return {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      mdl: {},\n      form: this.$form.createForm(this),\n      permissions: [],\n      treeCheck: false,\n      pidSet: [],\n      checkedKeys: [],\n      halfCheckedKeys: []\n    };\n  },\n  created: function created() {\n    this.loadPermissions();\n  },\n  methods: {\n    add: function add() {\n      this.form.resetFields();\n      this.checkedKeys = [];\n      this.pidSet = [];\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this2 = this;\n\n      if (record.roleId) {\n        getRolePermIds(record.roleId).then(function (res) {\n          var pidSet = new Set(res.map(function (m) {\n            return m.parentId;\n          }).filter(function (id) {\n            return id > 0;\n          }));\n          _this2.pidSet = pidSet; // 因为antd 树插件勾选父节点会导致所有子节点选中,所以过滤所有父节点\n\n          _this2.checkedKeys = res.map(function (m) {\n            return m.menuId;\n          }).filter(function (id) {\n            return !pidSet.has(id);\n          });\n        });\n      }\n\n      this.mdl = Object.assign({}, record); // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n\n      this.treeCheck = false;\n      this.visible = true;\n      this.$nextTick(function () {\n        _this2.form.setFieldsValue(pick(_this2.mdl, 'roleId', 'roleName', 'status', 'roleSort', 'roleKey')); // this.form.setFieldsValue(...record)\n\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      console.log('onExpand', expandedKeys);\n      this.expandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    onCheck: function onCheck(checkedKeys, info) {\n      if (!this.treeCheck) this.treeCheck = true;\n      console.log('onCheck', info);\n      this.checkedKeys = checkedKeys;\n      this.halfCheckedKeys = info.halfCheckedKeys;\n    },\n    onSelect: function onSelect(selectedKeys, info) {\n      console.log('onSelect', info);\n      this.selectedKeys = selectedKeys;\n    },\n    loadPermissions: function loadPermissions() {\n      var _this3 = this;\n\n      getPermissions().then(function (res) {\n        _this3.buildtree(res.rows, _this3.permissions, '0');\n      });\n    },\n    buildtree: function buildtree(list, permissions, parentId) {\n      var _this4 = this;\n\n      list.forEach(function (item) {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.menuId,\n            title: item.menuName,\n            children: []\n          };\n\n          _this4.buildtree(list, child.children, item.menuId);\n\n          permissions.push(child);\n        }\n      });\n    },\n    handleOk: function handleOk(e) {\n      var _this = this; // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n\n\n      var checkedAll = this.treeCheck ? _this.checkedKeys.concat(_this.halfCheckedKeys) : _this.checkedKeys.concat(Array.from(_this.pidSet));\n\n      if (!checkedAll.length > 0) {\n        _this.$message.warning('请至少选择一个权限');\n\n        return;\n      } // 触发表单验证\n\n\n      this.form.validateFields(function (err, values) {\n        // 验证表单没错误\n        if (!err) {\n          values.menuIds = checkedAll;\n          _this.confirmLoading = true;\n          saveRole(Object.assign(values)).then(function (res) {\n            if (res.code === 0) {\n              _this.$message.success('保存成功');\n\n              _this.$emit('ok');\n\n              _this.visible = false;\n            } else {\n              _this.$message.warning(res.msg);\n            }\n          }).catch(function () {\n            _this.$message.error('系统错误，请稍后再试');\n          }).finally(function () {\n            _this.confirmLoading = false;\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.confirmLoading = false;\n      this.visible = false;\n    }\n  }\n};",{"version":3,"sources":["RoleModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    title=\"操作\"\n    style=\"top: 20px;\"\n    :width=\"900\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n  >\n    <a-form :form=\"form\">\n\n      <a-form-item style=\"display:none\">\n        <a-input v-decorator=\"['roleId']\"/>\n      </a-form-item>\n\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"角色名称\"\n      >\n        <a-input\n          v-decorator=\"[\n            'roleName',\n            {\n              rules: [{ required: true, message: '请输入角色名称' },{ min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }]\n            }\n          ]\"\n          placeholder=\"起一个名字\"/>\n      </a-form-item>\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"权限字符\"\n      >\n        <a-input\n          v-decorator=\"['roleKey',{rules: [{ required: true, message: '请输入权限字符' },{ min: 1, max: 100, message: '长度在 1 到 30 个字符', trigger: 'blur' }]}]\"\n          placeholder=\"权限字符\"/>\n      </a-form-item>\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"显示顺序\"\n      >\n        <a-input-number v-decorator=\"['roleSort', {initialValue:'0',rules: [{ required: true, message: '请输入序号' },{ min: 0, max: 11, message: '长度在 0 到 11 个字符', trigger: 'blur' }]}]\" placeholder=\"显示顺序\" style=\"width:100%;\" />\n\n      </a-form-item>\n\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"状态\"\n      >\n        <a-select v-decorator=\"['status', {initialValue:'0',rules: [{ required: true, message: '请选择状态' }]}]\">\n          <a-select-option :value=\"'0'\">正常</a-select-option>\n          <a-select-option :value=\"'1'\">禁用</a-select-option>\n        </a-select>\n      </a-form-item>\n\n      <a-divider />\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"拥有权限\"\n      >\n\n        <!-- v-decorator=\"['parentId',{initialValue:'0'}]\" -->\n        <!-- <a-tree\n          checkable\n          autoExpandParent\n          @expand=\"onExpand\"\n          :expandedKeys=\"expandedKeys\"\n          v-model=\"checkedKeys\"\n          @select=\"onSelect\"\n          @check=\"onCheck\"\n          :selectedKeys=\"selectedKeys\"\n          :checkedKeys=\"checkedKeys\"\n          :treeData=\"permissions\"\n        > -->\n        <a-tree\n          checkable\n          v-model=\"checkedKeys\"\n          @check=\"onCheck\"\n          :treeData=\"permissions\"\n        >\n        </a-tree>\n      </a-form-item>\n    </a-form>\n\n  </a-modal>\n</template>\n\n<script>\nimport { getPermissions, getRolePermIds, saveRole } from '@/api/system'\nimport pick from 'lodash.pick'\n\nexport default {\n  name: 'RoleModal',\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      visible: false,\n      confirmLoading: false,\n      mdl: {},\n\n      form: this.$form.createForm(this),\n      permissions: [],\n      treeCheck: false,\n      pidSet: [],\n      checkedKeys: [],\n      halfCheckedKeys: []\n    }\n  },\n  created () {\n    this.loadPermissions()\n  },\n  methods: {\n    add () {\n      this.form.resetFields()\n      this.checkedKeys = []\n      this.pidSet = []\n      this.edit({ })\n    },\n    edit (record) {\n      if (record.roleId) {\n        getRolePermIds(record.roleId).then(res => {\n          const pidSet = new Set(res.map(m => m.parentId).filter(id => id > 0))\n          this.pidSet = pidSet\n          // 因为antd 树插件勾选父节点会导致所有子节点选中,所以过滤所有父节点\n          this.checkedKeys = res.map(m => m.menuId).filter(id => !pidSet.has(id))\n        })\n      }\n      this.mdl = Object.assign({}, record)\n      // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n      this.treeCheck = false\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.mdl, 'roleId', 'roleName', 'status', 'roleSort', 'roleKey'))\n        // this.form.setFieldsValue(...record)\n      })\n    },\n    close () {\n      this.$emit('close')\n      this.visible = false\n    },\n    onExpand (expandedKeys) {\n      console.log('onExpand', expandedKeys)\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    onCheck (checkedKeys, info) {\n      if (!this.treeCheck) this.treeCheck = true\n      console.log('onCheck', info)\n      this.checkedKeys = checkedKeys\n      this.halfCheckedKeys = info.halfCheckedKeys\n    },\n    onSelect (selectedKeys, info) {\n      console.log('onSelect', info)\n      this.selectedKeys = selectedKeys\n    },\n    loadPermissions () {\n      getPermissions().then(res => {\n        this.buildtree(res.rows, this.permissions, '0')\n      })\n    },\n    buildtree (list, permissions, parentId) {\n      list.forEach(item => {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.menuId,\n            title: item.menuName,\n            children: []\n          }\n          this.buildtree(list, child.children, item.menuId)\n          permissions.push(child)\n        }\n      })\n    },\n    handleOk (e) {\n      const _this = this\n      // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n      const checkedAll = this.treeCheck ? _this.checkedKeys.concat(_this.halfCheckedKeys) : _this.checkedKeys.concat(Array.from(_this.pidSet))\n      if (!checkedAll.length > 0) {\n        _this.$message.warning('请至少选择一个权限')\n        return\n      }\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        // 验证表单没错误\n        if (!err) {\n          values.menuIds = checkedAll\n          _this.confirmLoading = true\n          saveRole(Object.assign(values)).then(res => {\n            if (res.code === 0) {\n              _this.$message.success('保存成功')\n              _this.$emit('ok')\n              _this.visible = false\n            } else {\n              _this.$message.warning(res.msg)\n            }\n          }).catch(() => {\n            _this.$message.error('系统错误，请稍后再试')\n          }).finally(() => {\n            _this.confirmLoading = false\n          })\n        }\n      })\n    },\n    handleCancel () {\n      this.confirmLoading = false\n      this.visible = false\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/system/modules"}]}