{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcInstFinished.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcInstFinished.vue","mtime":1581492640527},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { millsToTime } from '@/utils/util';\nimport { getProfInfFinished, delHiProcessIns, resultMap } from '@/api/activiti';\nimport { checkPermission } from '@/utils/permissions';\nexport default {\n  name: 'ProfList',\n  components: {\n    STable: STable\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '流程实例ID',\n        dataIndex: 'id'\n      }, {\n        title: '流程名称',\n        dataIndex: 'procName'\n      }, {\n        title: '申请人',\n        dataIndex: 'applyer'\n      }, {\n        title: '标识key',\n        dataIndex: 'procDefKey'\n      }, {\n        title: '审批结果',\n        dataIndex: 'result',\n        scopedSlots: {\n          customRender: 'result'\n        }\n      }, {\n        title: '耗时',\n        dataIndex: 'duration',\n        customRender: function customRender(text) {\n          return millsToTime(text);\n        }\n      }, {\n        title: '结束原因',\n        dataIndex: 'deleteReason'\n      }, {\n        title: '开始时间',\n        dataIndex: 'startTime'\n      }, {\n        title: '结束时间',\n        dataIndex: 'endTime'\n      }, {\n        title: '操作',\n        width: '150px',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getProfInfFinished(Object.assign(parameter, _this.queryParam));\n      },\n      previewVisible: false,\n      previewImage: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('activiti:prof:add'),\n      editEnabel: checkPermission('activiti:prof:edit'),\n      removeEnable: checkPermission('activiti:prof:remove')\n    };\n  },\n  computed: {\n    rowSelection: function rowSelection() {\n      return {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: this.onSelectChange,\n        getCheckboxProps: function getCheckboxProps(record) {\n          return {// props: {\n            //   disabled: record.deploymentId, // Column configuration not to be checked\n            //   name: record.name\n            // }\n          };\n        }\n      };\n    }\n  },\n  filters: {\n    resultFilter: function resultFilter(result) {\n      return resultMap[result];\n    }\n  },\n  created: function created() {},\n  methods: {\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n      console.log('handleSaveOk');\n    },\n    delByIds: function delByIds(ids) {\n      var _this2 = this;\n\n      delHiProcessIns({\n        ids: ids.join(',')\n      }).then(function (res) {\n        if (res.code === 0) {\n          _this2.$message.success(\"\\u5220\\u9664\\u6210\\u529F\");\n\n          _this2.handleOk();\n        } else {\n          _this2.$message.error(res.msg);\n        }\n      }).finally(this.selectedRowKeys = []);\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["ProcInstFinished.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"流程定义key\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.procDefKey\" allowClear/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"8\" :sm=\"24\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-button :disabled=\"!selectedRowKeys.length>0\" type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"id\"\n      :rowSelection=\"rowSelection\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n    >\n      <span slot=\"result\" slot-scope=\"text\">\n        {{ text | resultFilter }}\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a v-if=\"removeEnable\" @click=\"delByIds([record.id])\">删除</a>\n      </span>\n    </s-table>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { millsToTime } from '@/utils/util'\nimport { getProfInfFinished, delHiProcessIns, resultMap } from '@/api/activiti'\nimport { checkPermission } from '@/utils/permissions'\nexport default {\n  name: 'ProfList',\n  components: {\n    STable\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '流程实例ID',\n          dataIndex: 'id'\n        },\n        {\n          title: '流程名称',\n          dataIndex: 'procName'\n        },\n        {\n          title: '申请人',\n          dataIndex: 'applyer'\n        },\n        {\n          title: '标识key',\n          dataIndex: 'procDefKey'\n        },\n        {\n          title: '审批结果',\n          dataIndex: 'result',\n          scopedSlots: { customRender: 'result' }\n        },\n        {\n          title: '耗时',\n          dataIndex: 'duration',\n          customRender: (text) => millsToTime(text)\n        },\n        {\n          title: '结束原因',\n          dataIndex: 'deleteReason'\n        },\n        {\n          title: '开始时间',\n          dataIndex: 'startTime'\n        },\n        {\n          title: '结束时间',\n          dataIndex: 'endTime'\n        },\n        {\n          title: '操作',\n          width: '150px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getProfInfFinished(Object.assign(parameter, this.queryParam))\n      },\n      previewVisible: false,\n      previewImage: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('activiti:prof:add'),\n      editEnabel: checkPermission('activiti:prof:edit'),\n      removeEnable: checkPermission('activiti:prof:remove')\n    }\n  },\n  computed: {\n    rowSelection () {\n      return {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: this.onSelectChange,\n        getCheckboxProps: record => ({\n          // props: {\n          //   disabled: record.deploymentId, // Column configuration not to be checked\n          //   name: record.name\n          // }\n        })\n      }\n    }\n  },\n  filters: {\n    resultFilter (result) {\n      return resultMap[result]\n    }\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    delByIds (ids) {\n      delHiProcessIns({ ids: ids.join(',') }).then(res => {\n        if (res.code === 0) {\n          this.$message.success(`删除成功`)\n          this.handleOk()\n        } else {\n          this.$message.error(res.msg)\n        }\n      }).finally(\n        this.selectedRowKeys = []\n      )\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/activiti"}]}