{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/gen/GenEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/gen/GenEdit.vue","mtime":1581492640535},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _toConsumableArray from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BasicInfoForm from \"./modules/BasicInfoForm.vue\";\nimport GenInfoForm from \"./modules/GenInfoForm.vue\";\nimport { editGen, editSaveGen } from '@/api/gen';\nexport default {\n  components: {\n    BasicInfoForm: BasicInfoForm,\n    GenInfoForm: GenInfoForm\n  },\n  data: function data() {\n    return {\n      // table\n      columns: [{\n        title: '序号',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '字段列名',\n        dataIndex: 'columnName'\n      }, {\n        title: '字段描述',\n        dataIndex: 'columnComment',\n        key: 'columnComment',\n        width: '10%',\n        scopedSlots: {\n          customRender: 'columnComment'\n        }\n      }, {\n        title: '物理类型',\n        dataIndex: 'columnType',\n        scopedSlots: {\n          customRender: 'columnType'\n        }\n      }, {\n        title: 'Java类型',\n        dataIndex: 'javaType',\n        key: 'javaType',\n        scopedSlots: {\n          customRender: 'javaType'\n        }\n      }, {\n        title: 'Java属性',\n        dataIndex: 'javaField',\n        key: 'javaField',\n        width: '10%',\n        scopedSlots: {\n          customRender: 'javaField'\n        }\n      }, {\n        title: '插入',\n        dataIndex: 'isInsert',\n        key: 'isInsert',\n        scopedSlots: {\n          customRender: 'isInsert'\n        }\n      }, {\n        title: '编辑',\n        dataIndex: 'isEdit',\n        key: 'isEdit',\n        scopedSlots: {\n          customRender: 'isEdit'\n        }\n      }, {\n        title: '列表',\n        dataIndex: 'isList',\n        key: 'isList',\n        scopedSlots: {\n          customRender: 'isList'\n        }\n      }, {\n        title: '查询',\n        dataIndex: 'isQuery',\n        key: 'isQuery',\n        scopedSlots: {\n          customRender: 'isQuery'\n        }\n      }, {\n        title: '查询方式',\n        dataIndex: 'queryType',\n        key: 'queryType',\n        scopedSlots: {\n          customRender: 'queryType'\n        }\n      }, {\n        title: '必填',\n        dataIndex: 'isRequired',\n        key: 'isRequired',\n        scopedSlots: {\n          customRender: 'isRequired'\n        }\n      }, {\n        title: '显示类型',\n        dataIndex: 'htmlType',\n        key: 'htmlType',\n        scopedSlots: {\n          customRender: 'htmlType'\n        }\n      }, {\n        title: '字典类型',\n        dataIndex: 'dictType',\n        key: 'dictType',\n        width: '10%',\n        scopedSlots: {\n          customRender: 'dictType'\n        }\n      }],\n      data: [],\n      info: {},\n      errors: [],\n      loading: false\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    var tableId = this.$route.query.tableId;\n\n    if (tableId) {\n      editGen({\n        tableId: tableId\n      }).then(function (res) {\n        _this.data = res.rows;\n        _this.info = res.data;\n      });\n    }\n  },\n  methods: {\n    handleChange: function handleChange(value, key, column) {\n      console.log(value, key, column);\n\n      var newData = _toConsumableArray(this.data);\n\n      var target = newData.filter(function (item) {\n        return key === item.columnId;\n      })[0];\n\n      if (target) {\n        target[column] = value;\n        this.data = newData;\n      } // console.log(this.data)\n\n    },\n    callback: function callback(key) {// console.log(key)\n    },\n    // 最终全页面提交\n    validate: function validate() {\n      var _this2 = this;\n\n      // eslint-disable-next-line no-debugger\n      // debugger\n      var forms = [];\n      var errors = {};\n      var _this$$refs = this.$refs,\n          basicinfo = _this$$refs.basicinfo,\n          geninfo = _this$$refs.geninfo;\n\n      if (basicinfo) {\n        var basicinfoForm = new Promise(function (resolve, reject) {\n          basicinfo.form.validateFields(function (err, values) {\n            if (err) {\n              reject(err);\n              return;\n            }\n\n            resolve(values);\n          });\n        });\n        forms.push(basicinfoForm);\n        Object.assign(errors, basicinfo.form.getFieldsError());\n      }\n\n      if (geninfo) {\n        var geninfoForm = new Promise(function (resolve, reject) {\n          geninfo.form.validateFields(function (err, values) {\n            if (err) {\n              reject(err);\n              return;\n            }\n\n            resolve(values);\n          });\n        });\n        forms.push(geninfoForm);\n        Object.assign(errors, geninfo.form.getFieldsError());\n      } // clean this.errors\n\n\n      this.errors = [];\n      Promise.all(forms).then(function (values) {\n        var genTable = Object.assign({}, _this2.info);\n        values.forEach(function (i) {\n          Object.assign(genTable, i);\n        });\n        _this2.info = Object.assign({}, genTable);\n        genTable.columns = _this2.data;\n        genTable.params = {\n          treeCode: genTable.treeCode,\n          treeName: genTable.treeName,\n          treeParentCode: genTable.treeParentCode\n        };\n        _this2.loading = true;\n        editSaveGen(genTable).then(function (res) {\n          if (res.code === 0) {\n            _this2.$message.success('保存成功');\n\n            _this2.rollback();\n          } else {\n            _this2.$message.success(res.msg);\n          }\n        }).catch(function () {\n          _this2.$message.error('系统错误，请稍后再试');\n        }).finally(function () {\n          _this2.loading = false;\n        });\n        console.log('received values of form:', genTable);\n      }).catch(function () {\n        var tmp = _objectSpread({}, errors);\n\n        _this2.errorList(tmp);\n      });\n    },\n    errorList: function errorList(errors) {\n      if (!errors || errors.length === 0) {\n        return;\n      }\n\n      this.errors = Object.keys(errors).filter(function (key) {\n        return errors[key];\n      }).map(function (key) {\n        return {\n          key: key,\n          message: errors[key][0]\n        };\n      });\n      console.log(this.errors); // 这里只输出第一个错误,需要自己改\n\n      this.$message.error(this.errors[0].message || '配置错误');\n    },\n    rollback: function rollback() {\n      this.$router.push('/tool/genList');\n    }\n  }\n};",{"version":3,"sources":["GenEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-form @submit=\"handleSubmit\" :form=\"form\">\n      <a-tabs @change=\"callback\" defaultActiveKey=\"2\" type=\"card\">\n        <a-tab-pane tab=\"基本信息\" key=\"1\">\n          <basic-info-form ref=\"basicinfo\" :showSubmit=\"false\" :info=\"info\" />\n        </a-tab-pane>\n        <a-tab-pane tab=\"字段信息\" key=\"2\">\n          <a-table\n            :pagination=\"false\"\n            :columns=\"columns\"\n            :dataSource=\"data\"\n          >\n            <span slot=\"serial\" slot-scope=\"text, record, index\">\n              {{ index + 1 }}\n            </span>\n            <template slot=\"javaType\" slot-scope=\"text, record\">\n              <a-select :value=\"text\" style=\"width: 120px\" @change=\"e => handleChange(e, record.columnId, 'javaType')\">\n                <a-select-option value=\"Long\">Long</a-select-option>\n                <a-select-option value=\"String\">String</a-select-option>\n                <a-select-option value=\"Ingeter\">Ingeter</a-select-option>\n                <a-select-option value=\"Double\">Double</a-select-option>\n                <a-select-option value=\"BigDecimal\">BigDecimal</a-select-option>\n                <a-select-option value=\"Date\">Date</a-select-option>\n              </a-select>\n            </template>\n            <template v-for=\"(coli, i) in ['columnComment','javaField','dictType']\" :slot=\"coli\" slot-scope=\"text, record\">\n              <a-input\n                :key=\"coli\"\n                style=\"margin: -5px 0\"\n                :value=\"text\"\n                @change=\"e => handleChange(e.target.value, record.columnId, coli)\"\n              />\n            </template>\n            <template v-for=\"(col, i) in ['isInsert','isEdit','isList','isQuery','isRequired']\" :slot=\"col\" slot-scope=\"text, record\">\n              <a-checkbox :key=\"col\" :defaultChecked=\"text==='1'\" @change=\"e => handleChange(e.target.checked?'1':'0', record.columnId, col)\"></a-checkbox>\n            </template>\n\n            <template slot=\"queryType\" slot-scope=\"text,record\">\n              <a-select :value=\"text\" style=\"width: 100px\" @change=\"e => handleChange(e, record.columnId, 'queryType')\">\n                <a-select-option value=\"EQ\">=</a-select-option>\n                <a-select-option value=\"NE\">!=</a-select-option>\n                <a-select-option value=\"GT\">&gt;</a-select-option>\n                <a-select-option value=\"GTE\">&gt;=</a-select-option>\n                <a-select-option value=\"LT\">&gt;</a-select-option>\n                <a-select-option value=\"LTE\">&gt;=</a-select-option>\n                <a-select-option value=\"LIKE\">LIKE</a-select-option>\n                <a-select-option value=\"BETWEEN\">BETWEEN</a-select-option>\n              </a-select>\n            </template>\n            <template slot=\"htmlType\" slot-scope=\"text,record\">\n              <a-select :value=\"text\" style=\"width: 100px\" @change=\"e => handleChange(e, record.columnId, 'htmlType')\">\n                <a-select-option value=\"input\">文本框</a-select-option>\n                <a-select-option value=\"textarea\">文本域</a-select-option>\n                <a-select-option value=\"select\">下拉框</a-select-option>\n                <a-select-option value=\"radio\">单选框</a-select-option>\n                <a-select-option value=\"checkbox\">复选框</a-select-option>\n                <a-select-option value=\"datetime\">日期控件</a-select-option>\n              </a-select>\n            </template>\n          </a-table>\n          <br>\n        </a-tab-pane>\n        <a-tab-pane tab=\"生成信息\" key=\"3\">\n          <gen-info-form ref=\"geninfo\" :showSubmit=\"false\" :info=\"info\" />\n        </a-tab-pane>\n      </a-tabs>\n      <a-form-item\n        :wrapperCol=\"{ span: 24 }\"\n        style=\"text-align: center\"\n      >\n        <a-button icon=\"check\" type=\"primary\" @click=\"validate\" :loading=\"loading\">提交</a-button>\n        <a-button icon=\"rollback\" style=\"margin-left: 8px\" @click=\"rollback\">关闭</a-button>\n      </a-form-item>\n    </a-form>\n  </a-card>\n</template>\n<script>\nimport BasicInfoForm from './modules/BasicInfoForm.vue'\nimport GenInfoForm from './modules/GenInfoForm.vue'\nimport { editGen, editSaveGen } from '@/api/gen'\nexport default {\n  components: {\n    BasicInfoForm,\n    GenInfoForm\n  },\n  data () {\n    return {\n      // table\n      columns: [\n        {\n          title: '序号',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '字段列名',\n          dataIndex: 'columnName'\n        },\n        {\n          title: '字段描述',\n          dataIndex: 'columnComment',\n          key: 'columnComment',\n          width: '10%',\n          scopedSlots: { customRender: 'columnComment' }\n        },\n        {\n          title: '物理类型',\n          dataIndex: 'columnType',\n          scopedSlots: { customRender: 'columnType' }\n        },\n        {\n          title: 'Java类型',\n          dataIndex: 'javaType',\n          key: 'javaType',\n          scopedSlots: { customRender: 'javaType' }\n        },\n        {\n          title: 'Java属性',\n          dataIndex: 'javaField',\n          key: 'javaField',\n          width: '10%',\n          scopedSlots: { customRender: 'javaField' }\n        },\n        {\n          title: '插入',\n          dataIndex: 'isInsert',\n          key: 'isInsert',\n          scopedSlots: { customRender: 'isInsert' }\n        },\n        {\n          title: '编辑',\n          dataIndex: 'isEdit',\n          key: 'isEdit',\n          scopedSlots: { customRender: 'isEdit' }\n        },\n        {\n          title: '列表',\n          dataIndex: 'isList',\n          key: 'isList',\n          scopedSlots: { customRender: 'isList' }\n        },\n        {\n          title: '查询',\n          dataIndex: 'isQuery',\n          key: 'isQuery',\n          scopedSlots: { customRender: 'isQuery' }\n        },\n        {\n          title: '查询方式',\n          dataIndex: 'queryType',\n          key: 'queryType',\n          scopedSlots: { customRender: 'queryType' }\n        },\n        {\n          title: '必填',\n          dataIndex: 'isRequired',\n          key: 'isRequired',\n          scopedSlots: { customRender: 'isRequired' }\n        },\n        {\n          title: '显示类型',\n          dataIndex: 'htmlType',\n          key: 'htmlType',\n          scopedSlots: { customRender: 'htmlType' }\n        },\n        {\n          title: '字典类型',\n          dataIndex: 'dictType',\n          key: 'dictType',\n          width: '10%',\n          scopedSlots: { customRender: 'dictType' }\n        }\n      ],\n      data: [],\n      info: {},\n      errors: [],\n      loading: false\n    }\n  },\n  beforeCreate () {\n    const { tableId } = this.$route.query\n    if (tableId) {\n      editGen({ tableId: tableId }).then(res => {\n        this.data = res.rows\n        this.info = res.data\n      })\n    }\n  },\n  methods: {\n    handleChange (value, key, column) {\n      console.log(value, key, column)\n      const newData = [...this.data]\n      const target = newData.filter(item => key === item.columnId)[0]\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n      // console.log(this.data)\n    },\n    callback (key) {\n      // console.log(key)\n    },\n\n    // 最终全页面提交\n    validate () {\n      // eslint-disable-next-line no-debugger\n      // debugger\n      const forms = []\n      const errors = {}\n      const { $refs: { basicinfo, geninfo } } = this\n      if (basicinfo) {\n        const basicinfoForm = new Promise((resolve, reject) => {\n          basicinfo.form.validateFields((err, values) => {\n            if (err) {\n              reject(err)\n              return\n            }\n            resolve(values)\n          })\n        })\n        forms.push(basicinfoForm)\n        Object.assign(errors, basicinfo.form.getFieldsError())\n      }\n      if (geninfo) {\n        const geninfoForm = new Promise((resolve, reject) => {\n          geninfo.form.validateFields((err, values) => {\n            if (err) {\n              reject(err)\n              return\n            }\n            resolve(values)\n          })\n        })\n        forms.push(geninfoForm)\n        Object.assign(errors, geninfo.form.getFieldsError())\n      }\n\n      // clean this.errors\n      this.errors = []\n      Promise.all(forms).then(values => {\n        const genTable = Object.assign({}, this.info)\n        values.forEach(i => {\n          Object.assign(genTable, i)\n        })\n        this.info = Object.assign({}, genTable)\n        genTable.columns = this.data\n        genTable.params = { treeCode: genTable.treeCode, treeName: genTable.treeName, treeParentCode: genTable.treeParentCode }\n        this.loading = true\n        editSaveGen(genTable).then(res => {\n          if (res.code === 0) {\n            this.$message.success('保存成功')\n            this.rollback()\n          } else {\n            this.$message.success(res.msg)\n          }\n        }).catch(() => {\n          this.$message.error('系统错误，请稍后再试')\n        }).finally(() => {\n          this.loading = false\n        })\n        console.log('received values of form:', genTable)\n      }).catch(() => {\n        const tmp = { ...errors }\n        this.errorList(tmp)\n      })\n    },\n    errorList (errors) {\n      if (!errors || errors.length === 0) {\n        return\n      }\n      this.errors = Object.keys(errors)\n        .filter(key => errors[key])\n        .map(key => ({\n          key: key,\n          message: errors[key][0]\n        }))\n      console.log(this.errors)\n      // 这里只输出第一个错误,需要自己改\n      this.$message.error(this.errors[0].message || '配置错误')\n    },\n    rollback () {\n      this.$router.push('/tool/genList')\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/gen"}]}