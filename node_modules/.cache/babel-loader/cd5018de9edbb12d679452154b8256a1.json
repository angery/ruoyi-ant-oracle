{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/permission.js","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/permission.js","mtime":1581575578152},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1580791774215}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from 'vue';\nimport router from \"./router\";\nimport store from \"./store\";\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { notification } from 'ant-design-vue';\nimport { ACCESS_TOKEN } from '@/store/mutation-types';\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['login', 'register', 'registerResult']; // no redirect whitelist\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // start progress bar\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    /* has token */\n    if (to.path === '/user/login') {\n      next({\n        path: '/dashboard/workplace'\n      });\n      NProgress.done();\n    } else {\n      if (store.getters.roles === null || store.getters.roles.length === 0) {\n        store.dispatch('GetInfo').then(function () {\n          // 调用 vuex 的 从后端获取用户的路由菜单，动态添加可访问路由表\n          store.dispatch('GenerateRoutes').then(function () {\n            // 把已获取到的路由菜单加入到路由表中\n            router.addRoutes(store.getters.addRouters);\n            var redirect = decodeURIComponent(from.query.redirect || to.path);\n\n            if (to.path === redirect) {\n              // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n              next(_objectSpread({}, to, {\n                replace: true\n              }));\n            } else {\n              // 跳转到目的路由\n              next({\n                path: redirect\n              });\n            }\n          });\n        }).catch(function (err) {\n          console.log('捕获到异常：', err);\n          notification.error({\n            message: '错误',\n            description: '请求用户信息失败，请重试'\n          });\n          store.dispatch('Logout').then(function () {\n            next({\n              path: '/user/login',\n              query: {\n                redirect: to.fullPath\n              }\n            });\n          });\n        });\n      } else {\n        next();\n      }\n    }\n  } else {\n    if (whiteList.includes(to.name)) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next({\n        path: '/user/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      NProgress.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",{"version":3,"sources":["/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/permission.js"],"names":["Vue","router","store","NProgress","notification","ACCESS_TOKEN","configure","showSpinner","whiteList","beforeEach","to","from","next","start","ls","get","path","done","getters","roles","length","dispatch","then","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","catch","err","console","log","error","message","description","fullPath","includes","name","afterEach"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport router from './router'\nimport store from './store'\n\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { notification } from 'ant-design-vue'\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['login', 'register', 'registerResult'] // no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start() // start progress bar\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    /* has token */\n    if (to.path === '/user/login') {\n      next({ path: '/dashboard/workplace' })\n      NProgress.done()\n    } else {\n      if (store.getters.roles === null || store.getters.roles.length === 0) {\n        store.dispatch('GetInfo')\n          .then(() => {\n            // 调用 vuex 的 从后端获取用户的路由菜单，动态添加可访问路由表\n            store.dispatch('GenerateRoutes').then(() => {\n              // 把已获取到的路由菜单加入到路由表中\n              router.addRoutes(store.getters.addRouters)\n              const redirect = decodeURIComponent(from.query.redirect || to.path)\n              if (to.path === redirect) {\n                // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n                next({ ...to, replace: true })\n              } else {\n                // 跳转到目的路由\n                next({ path: redirect })\n              }\n            })\n          })\n          .catch((err) => {\n            console.log('捕获到异常：', err)\n            notification.error({\n              message: '错误',\n              description: '请求用户信息失败，请重试'\n            })\n            store.dispatch('Logout').then(() => {\n              next({ path: '/user/login', query: { redirect: to.fullPath } })\n            })\n          })\n      } else {\n        next()\n      }\n    }\n  } else {\n    if (whiteList.includes(to.name)) {\n      // 在免登录白名单，直接进入\n      next()\n    } else {\n      next({ path: '/user/login', query: { redirect: to.fullPath } })\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  NProgress.done() // finish progress bar\n})\n"]}]}