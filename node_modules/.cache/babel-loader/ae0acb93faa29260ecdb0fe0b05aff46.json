{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/monitor/LoginLogList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/monitor/LoginLogList.vue","mtime":1581650251435},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { getLoginLogList, delLoginLog, cleanLoginLog } from '@/api/monitor'; // import { getLoginLogList } from '@/api/monitor'\n\nimport { getDictArray } from \"../../utils/dict\";\nvar commonStatusMap = {};\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '登录名称',\n        dataIndex: 'loginName'\n      }, {\n        title: '登录地址',\n        dataIndex: 'ipaddr'\n      }, {\n        title: '登录地点',\n        dataIndex: 'loginLocation'\n      }, {\n        title: '浏览器',\n        dataIndex: 'browser'\n      }, {\n        title: '操作系统',\n        dataIndex: 'os'\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        scopedSlots: {\n          customRender: 'status'\n        }\n      }, {\n        title: '操作信息',\n        dataIndex: 'msg'\n      }, {\n        title: '操作时间',\n        dataIndex: 'loginTime',\n        sorter: true\n      }],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getLoginLogList(Object.assign(parameter, _this.queryParam));\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: []\n    };\n  },\n  filters: {\n    operTypeFilter: function operTypeFilter(type) {\n      return commonStatusMap[type].text;\n    },\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        '1': '失败',\n        '0': '成功'\n      };\n      return statusMap[status];\n    }\n  },\n  beforeCreate: function beforeCreate() {},\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getDictArray('sys_common_status');\n\n            case 2:\n              this.commonStatus = _context.sent;\n              this.commonStatus.map(function (d) {\n                commonStatusMap[d.dictValue] = {\n                  text: d.dictLabel\n                };\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n    },\n    delByIds: function delByIds(ids) {\n      var _this2 = this;\n\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: function onOk() {\n          delLoginLog({\n            ids: ids.join(',')\n          }).then(function (res) {\n            if (res.code === 0) {\n              _this2.$message.success(\"\\u5220\\u9664\\u6210\\u529F\");\n\n              _this2.handleOk();\n            } else {\n              _this2.$message.error(res.msg);\n            }\n\n            _this2.selectedRowKeys = [];\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n    clean: function clean() {\n      var _this3 = this;\n\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: function onOk() {\n          cleanLoginLog().then(function (res) {\n            _this3.handleOk();\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["LoginLogList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"登陆地址\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.ipaddr\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"登陆名称\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.loginName\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\" :sm=\"12\">\n            <a-form-item label=\"登陆状态\">\n              <a-select placeholder=\"请选择\" v-model=\"queryParam.status\" default-value=\"0\">\n                <a-select-option :value=\"''\">全部</a-select-option>\n                <a-select-option v-for=\"(d, index) in commonStatus\" :key=\"index\" :value=\"d.dictValue\">{{ d.dictLabel }}</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"6\" :sm=\"18\">\n            <a-form-item label=\"登陆时间\">\n              <a-range-picker v-model=\"range\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\" :sm=\"12\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-popconfirm v-has=\"'monitor:loginlog:remove'\" title=\"确认清空吗？\" @confirm=\"clean\">\n        <a-icon slot=\"icon\" type=\"question-circle-o\" style=\"color: red\" />\n        <a-button type=\"danger\" ghost icon=\"close\">清空</a-button>\n      </a-popconfirm>\n      <a-dropdown v-has=\"'monitor:loginlog:remove'\" v-if=\"selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"infoId\"\n      :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      :rangPicker=\"range\"\n      defaultSort=\"loginTime\"\n    >\n      <span slot=\"status\" slot-scope=\"text\">\n        {{ text | statusFilter }}\n      </span>\n    </s-table>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getLoginLogList, delLoginLog, cleanLoginLog } from '@/api/monitor'\n// import { getLoginLogList } from '@/api/monitor'\nimport { getDictArray } from '../../utils/dict'\nconst commonStatusMap = {}\nexport default {\n  name: 'TableList',\n  components: {\n    STable\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '登录名称',\n          dataIndex: 'loginName'\n        },\n        {\n          title: '登录地址',\n          dataIndex: 'ipaddr'\n        },\n        {\n          title: '登录地点',\n          dataIndex: 'loginLocation'\n        },\n        {\n          title: '浏览器',\n          dataIndex: 'browser'\n        },\n        {\n          title: '操作系统',\n          dataIndex: 'os'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '操作信息',\n          dataIndex: 'msg'\n        },\n        {\n          title: '操作时间',\n          dataIndex: 'loginTime',\n          sorter: true\n        }\n      ],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getLoginLogList(Object.assign(parameter, this.queryParam))\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: []\n\n    }\n  },\n  filters: {\n    operTypeFilter (type) {\n      return commonStatusMap[type].text\n    },\n    statusFilter (status) {\n      const statusMap = {\n        '1': '失败',\n        '0': '成功'\n      }\n      return statusMap[status]\n    }\n  },\n  beforeCreate () {\n\n  },\n  async created () {\n    this.commonStatus = await getDictArray('sys_common_status')\n    this.commonStatus.map(d => {\n      commonStatusMap[d.dictValue] = { text: d.dictLabel }\n    })\n  },\n  methods: {\n    onSelectChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delLoginLog({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    },\n    clean () {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          cleanLoginLog().then(res => {\n            this.handleOk()\n          })\n        },\n        onCancel () {\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/monitor"}]}