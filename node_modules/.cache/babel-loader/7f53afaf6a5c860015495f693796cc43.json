{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/store/i18n-mixin.js","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/store/i18n-mixin.js","mtime":1581492640514},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1580791774215}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { mapState } from 'vuex';\nvar mixin = {\n  computed: _objectSpread({}, mapState({\n    currentLang: function currentLang(state) {\n      return state.app.lang;\n    }\n  })),\n  methods: {\n    setLang: function setLang(lang) {\n      this.$store.dispatch('SetLang', lang);\n    }\n  }\n};\nexport { mixin };",{"version":3,"sources":["/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/store/i18n-mixin.js"],"names":["mapState","mixin","computed","currentLang","state","app","lang","methods","setLang","$store","dispatch"],"mappings":";AAAA,SAASA,QAAT,QAAyB,MAAzB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,oBACHF,QAAQ,CAAC;AACVG,IAAAA,WAAW,EAAE,qBAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,GAAN,CAAUC,IAAd;AAAA;AADR,GAAD,CADL,CADI;AAMZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO,mBACEF,IADF,EACQ;AACb,WAAKG,MAAL,CAAYC,QAAZ,CAAqB,SAArB,EAAgCJ,IAAhC;AACD;AAHM;AANG,CAAd;AAaA,SAASL,KAAT","sourcesContent":["import { mapState } from 'vuex'\n\nconst mixin = {\n  computed: {\n    ...mapState({\n      currentLang: state => state.app.lang\n    })\n  },\n  methods: {\n    setLang (lang) {\n      this.$store.dispatch('SetLang', lang)\n    }\n  }\n}\n\nexport { mixin }\n"]}]}