{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Charts/TagCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Charts/TagCloud.vue","mtime":1581492640476},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport { registerShape } from 'viser-vue';\n\nvar DataSet = require('@antv/data-set');\n\nvar imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png';\nvar scale = [{\n  dataKey: 'x',\n  nice: false\n}, {\n  dataKey: 'y',\n  nice: false\n}];\nregisterShape('point', 'cloud', {\n  draw: function draw(cfg, container) {\n    return container.addShape('text', {\n      attrs: _objectSpread({\n        fillOpacity: cfg.opacity,\n        fontSize: cfg.origin._origin.size,\n        rotate: cfg.origin._origin.rotate,\n        text: cfg.origin._origin.text,\n        textAlign: 'center',\n        fontFamily: cfg.origin._origin.font,\n        fill: cfg.color,\n        textBaseline: 'Alphabetic'\n      }, cfg.style, {\n        x: cfg.x,\n        y: cfg.y\n      })\n    });\n  }\n});\nexport default {\n  name: 'TagCloud',\n  props: {\n    tagList: {\n      type: Array,\n      required: true\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    width: {\n      type: Number,\n      default: 640\n    }\n  },\n  data: function data() {\n    return {\n      data: [],\n      scale: scale\n    };\n  },\n  watch: {\n    tagList: function tagList(val) {\n      if (val.length > 0) {\n        this.initTagCloud(val);\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.tagList.length > 0) {\n      this.initTagCloud(this.tagList);\n    }\n  },\n  methods: {\n    initTagCloud: function initTagCloud(dataSource) {\n      var _this = this;\n\n      var height = this.height,\n          width = this.width;\n      var dv = new DataSet.View().source(dataSource);\n      var range = dv.range('value');\n      var min = range[0];\n      var max = range[1];\n      var imageMask = new Image();\n      imageMask.crossOrigin = '';\n      imageMask.src = imgUrl;\n\n      imageMask.onload = function () {\n        dv.transform({\n          type: 'tag-cloud',\n          fields: ['name', 'value'],\n          size: [width, height],\n          imageMask: imageMask,\n          font: 'Verdana',\n          padding: 0,\n          timeInterval: 5000,\n          // max execute time\n          rotate: function rotate() {\n            var random = ~~(Math.random() * 4) % 4;\n\n            if (random === 2) {\n              random = 0;\n            }\n\n            return random * 90; // 0, 90, 270\n          },\n          fontSize: function fontSize(d) {\n            if (d.value) {\n              return (d.value - min) / (max - min) * (32 - 8) + 8;\n            }\n\n            return 0;\n          }\n        });\n        _this.data = dv.rows;\n      };\n    }\n  }\n};",{"version":3,"sources":["TagCloud.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-chart :width=\"width\" :height=\"height\" :padding=\"[0]\" :data=\"data\" :scale=\"scale\">\n    <v-tooltip :show-title=\"false\" />\n    <v-coord type=\"rect\" direction=\"TL\" />\n    <v-point position=\"x*y\" color=\"category\" shape=\"cloud\" tooltip=\"value*category\" />\n  </v-chart>\n</template>\n\n<script>\nimport { registerShape } from 'viser-vue'\nconst DataSet = require('@antv/data-set')\n\nconst imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png'\n\nconst scale = [\n  { dataKey: 'x', nice: false },\n  { dataKey: 'y', nice: false }\n]\n\nregisterShape('point', 'cloud', {\n  draw (cfg, container) {\n    return container.addShape('text', {\n      attrs: {\n        fillOpacity: cfg.opacity,\n        fontSize: cfg.origin._origin.size,\n        rotate: cfg.origin._origin.rotate,\n        text: cfg.origin._origin.text,\n        textAlign: 'center',\n        fontFamily: cfg.origin._origin.font,\n        fill: cfg.color,\n        textBaseline: 'Alphabetic',\n        ...cfg.style,\n        x: cfg.x,\n        y: cfg.y\n      }\n    })\n  }\n})\n\nexport default {\n  name: 'TagCloud',\n  props: {\n    tagList: {\n      type: Array,\n      required: true\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    width: {\n      type: Number,\n      default: 640\n    }\n  },\n  data () {\n    return {\n      data: [],\n      scale\n    }\n  },\n  watch: {\n    tagList: function (val) {\n      if (val.length > 0) {\n        this.initTagCloud(val)\n      }\n    }\n  },\n  mounted () {\n    if (this.tagList.length > 0) {\n      this.initTagCloud(this.tagList)\n    }\n  },\n  methods: {\n    initTagCloud (dataSource) {\n      const { height, width } = this\n\n      const dv = new DataSet.View().source(dataSource)\n      const range = dv.range('value')\n      const min = range[0]\n      const max = range[1]\n      const imageMask = new Image()\n      imageMask.crossOrigin = ''\n      imageMask.src = imgUrl\n      imageMask.onload = () => {\n        dv.transform({\n          type: 'tag-cloud',\n          fields: ['name', 'value'],\n          size: [width, height],\n          imageMask,\n          font: 'Verdana',\n          padding: 0,\n          timeInterval: 5000, // max execute time\n          rotate () {\n            let random = ~~(Math.random() * 4) % 4\n            if (random === 2) {\n              random = 0\n            }\n            return random * 90 // 0, 90, 270\n          },\n          fontSize (d) {\n            if (d.value) {\n              return ((d.value - min) / (max - min)) * (32 - 8) + 8\n            }\n            return 0\n          }\n        })\n        this.data = dv.rows\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/Charts"}]}