{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/DictList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/DictList.vue","mtime":1581645216344},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { getDictTypeList, delDictType } from '@/api/system';\nimport DictModal from \"./modules/DictModal.vue\";\nimport DictDataListModal from \"./modules/DictDataListModal.vue\";\nimport { checkPermission } from '@/utils/permissions';\nvar statusMap = {\n  0: {\n    status: 'success',\n    text: '正常'\n  },\n  1: {\n    status: 'default',\n    text: '停用'\n  }\n};\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    DictModal: DictModal,\n    DictDataListModal: DictDataListModal\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '字典名称',\n        dataIndex: 'dictName'\n      }, {\n        title: '字典类型',\n        dataIndex: 'dictType'\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        scopedSlots: {\n          customRender: 'status'\n        }\n      }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        sorter: true\n      }, {\n        title: '操作',\n        width: '200px',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getDictTypeList(Object.assign(parameter, _this.queryParam));\n      },\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:dict:add'),\n      editEnabel: checkPermission('system:dict:edit'),\n      removeEnable: checkPermission('system:dict:remove')\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(type) {\n      return statusMap[type].text;\n    },\n    statusTypeFilter: function statusTypeFilter(type) {\n      return statusMap[type].status;\n    }\n  },\n  created: function created() {},\n  methods: {\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    handleAdd: function handleAdd(parentId) {\n      this.$refs.modal.add(parentId);\n    },\n    handleEdit: function handleEdit(record) {\n      this.$refs.modal.edit(record);\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n      console.log('handleSaveOk');\n    },\n    dataModal: function dataModal(dictType) {\n      this.$refs.datamodal.show(dictType);\n    },\n    delByIds: function delByIds(ids) {\n      var _this2 = this;\n\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: function onOk() {\n          delDictType({\n            ids: ids.join(',')\n          }).then(function (res) {\n            if (res.code === 0) {\n              _this2.$message.success(\"\\u5220\\u9664\\u6210\\u529F\");\n\n              _this2.handleOk();\n            } else {\n              _this2.$message.error(res.msg);\n            }\n\n            _this2.selectedRowKeys = [];\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["DictList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"字典名称\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.dictName\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"字典类型\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.dictType\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"状态\">\n              <a-select placeholder=\"请选择\" v-model=\"queryParam.status\" default-value=\"0\">\n                <a-select-option :value=\"''\">全部</a-select-option>\n                <a-select-option :value=\"0\">正常</a-select-option>\n                <a-select-option :value=\"1\">禁用</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"8\" :sm=\"24\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-button v-if=\"addEnable\" type=\"primary\" icon=\"plus\" @click=\"$refs.modal.add()\">新建</a-button>\n      <a-dropdown v-if=\"removeEnable&&selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"dictId\"\n      :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n    >\n      <span slot=\"status\" slot-scope=\"text\">\n        <a-badge :status=\"text | statusTypeFilter\" :text=\"text | statusFilter\" />\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a v-if=\"editEnabel\" @click=\"handleEdit(record)\">编辑</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"editEnabel\" @click=\"dataModal(record.dictType)\"><a-icon type=\"bars\" />列表</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"removeEnable\" @click=\"delByIds([record.dictId])\">删除</a>\n      </span>\n    </s-table>\n    <dict-modal ref=\"modal\" @ok=\"handleOk\" />\n    <dict-data-list-modal ref=\"datamodal\" @ok=\"handleOk\" />\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getDictTypeList, delDictType } from '@/api/system'\nimport DictModal from './modules/DictModal.vue'\nimport DictDataListModal from './modules/DictDataListModal.vue'\nimport { checkPermission } from '@/utils/permissions'\n\nconst statusMap = {\n  0: {\n    status: 'success',\n    text: '正常'\n  },\n  1: {\n    status: 'default',\n    text: '停用'\n  }\n}\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    DictModal,\n    DictDataListModal\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '字典名称',\n          dataIndex: 'dictName'\n        },\n        {\n          title: '字典类型',\n          dataIndex: 'dictType'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        },\n        {\n          title: '操作',\n          width: '200px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getDictTypeList(Object.assign(parameter, this.queryParam))\n      },\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:dict:add'),\n      editEnabel: checkPermission('system:dict:edit'),\n      removeEnable: checkPermission('system:dict:remove')\n    }\n  },\n  filters: {\n    statusFilter (type) {\n      return statusMap[type].text\n    },\n    statusTypeFilter (type) {\n      return statusMap[type].status\n    }\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleAdd (parentId) {\n      this.$refs.modal.add(parentId)\n    },\n    handleEdit (record) {\n      this.$refs.modal.edit(record)\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    dataModal (dictType) {\n      this.$refs.datamodal.show(dictType)\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delDictType({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system"}]}