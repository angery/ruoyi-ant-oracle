{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/gen/GenList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/gen/GenList.vue","mtime":1581492640536},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { getGenList, delGen, batchGenCode } from '@/api/gen';\nimport { checkPermission } from '@/utils/permissions';\nimport DbListModal from \"./modules/DbListModal.vue\";\nimport PreviewModal from \"./modules/PreviewModal.vue\";\nimport { genCodeZip } from '@/utils/download';\nvar commonStatusMap = {};\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    DbListModal: DbListModal,\n    PreviewModal: PreviewModal\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      description: '代码生成工具，先导入，再生成',\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '序号',\n        scopedSlots: {\n          customRender: 'serial'\n        }\n      }, {\n        title: '表名',\n        dataIndex: 'tableName'\n      }, {\n        title: '表描述',\n        dataIndex: 'tableComment'\n      }, {\n        title: '实体类名称',\n        dataIndex: 'className'\n      }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        sorter: true\n      }, {\n        title: '更新时间',\n        dataIndex: 'updateTime',\n        sorter: true\n      }, {\n        title: '操作',\n        width: '240px',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getGenList(Object.assign(parameter, _this.queryParam));\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: [],\n      codeEnable: checkPermission('tool:gen:code'),\n      editEnable: checkPermission('tool:gen:edit'),\n      removeEnable: checkPermission('tool:gen:remove')\n    };\n  },\n  filters: {\n    operTypeFilter: function operTypeFilter(type) {\n      return commonStatusMap[type].text;\n    },\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        '1': '失败',\n        '0': '成功'\n      };\n      return statusMap[status];\n    }\n  },\n  beforeCreate: function beforeCreate() {},\n  created: function created() {},\n  methods: {\n    onSelectChange: function onSelectChange(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n    },\n    lead: function lead() {\n      this.$refs.dbmodal.show();\n    },\n    handleEdit: function handleEdit(tableId) {\n      this.$router.push({\n        name: 'genEdit',\n        query: {\n          tableId: tableId\n        }\n      });\n    },\n    handlePreview: function handlePreview(tableId) {\n      this.$refs.premodal.show(tableId);\n    },\n    batchGen: function batchGen() {\n      var tables = this.selectedRows.map(function (t) {\n        return t.tableName;\n      });\n      this.handleGen(tables);\n    },\n    handleGen: function handleGen(tables) {\n      genCodeZip(batchGenCode, tables.join(','));\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n    },\n    delByIds: function delByIds(ids) {\n      var _this2 = this;\n\n      delGen({\n        ids: ids.join(',')\n      }).then(function (res) {\n        if (res.code === 0) {\n          _this2.$message.success(\"\\u5220\\u9664\\u6210\\u529F\");\n\n          _this2.handleOk();\n        } else {\n          _this2.$message.error(res.msg);\n        }\n\n        _this2.selectedRowKeys = [];\n      });\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["GenList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"表名称\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.tableName\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"表描述\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.tableComment\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"6\" :sm=\"18\">\n            <a-form-item label=\"表时间\">\n              <a-range-picker v-model=\"range\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\" :sm=\"12\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-button icon=\"upload\" type=\"primary\" @click=\"lead()\">导入</a-button>\n      <!-- <a-button type=\"primary\" icon=\"download\" @click=\"gen(selectedRowKeys)\">生成</a-button> -->\n      <!-- <a-dropdown v-if=\"selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown> -->\n      <a-dropdown v-if=\"selectedRowKeys.length > 0\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"batchGen(selectedRowKeys)\"><a-icon type=\"download\" />生成代码</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"delByIds(selectedRowKeys)\"><a-icon type=\"delete\" />删除</a-menu-item>\n        </a-menu>\n        <a-button style=\"margin-left: 8px\">\n          批量操作 <a-icon type=\"down\" />\n        </a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"tableId\"\n      :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      :rangPicker=\"range\"\n      defaultSort=\"createTime\"\n    >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">\n        {{ index + 1 }}\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a v-if=\"editEnable\" @click=\"handlePreview(record.tableId)\">预览</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"editEnable\" @click=\"handleEdit(record.tableId)\">编辑</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"removeEnable\" @click=\"delByIds([record.tableId])\">删除</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"codeEnable\" @click=\"handleGen([record.tableName])\">生成代码</a>\n      </span>\n    </s-table>\n    <db-list-modal ref=\"dbmodal\" @ok=\"handleOk\" />\n    <preview-modal ref=\"premodal\" @ok=\"handleOk\" />\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getGenList, delGen, batchGenCode } from '@/api/gen'\nimport { checkPermission } from '@/utils/permissions'\nimport DbListModal from './modules/DbListModal.vue'\nimport PreviewModal from './modules/PreviewModal.vue'\nimport { genCodeZip } from '@/utils/download'\nconst commonStatusMap = {}\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    DbListModal,\n    PreviewModal\n  },\n  data () {\n    return {\n      description: '代码生成工具，先导入，再生成',\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '序号',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '表名',\n          dataIndex: 'tableName'\n        },\n        {\n          title: '表描述',\n          dataIndex: 'tableComment'\n        },\n        {\n          title: '实体类名称',\n          dataIndex: 'className'\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        },\n        {\n          title: '更新时间',\n          dataIndex: 'updateTime',\n          sorter: true\n        },\n        {\n          title: '操作',\n          width: '240px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getGenList(Object.assign(parameter, this.queryParam))\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: [],\n      codeEnable: checkPermission('tool:gen:code'),\n      editEnable: checkPermission('tool:gen:edit'),\n      removeEnable: checkPermission('tool:gen:remove')\n\n    }\n  },\n  filters: {\n    operTypeFilter (type) {\n      return commonStatusMap[type].text\n    },\n    statusFilter (status) {\n      const statusMap = {\n        '1': '失败',\n        '0': '成功'\n      }\n      return statusMap[status]\n    }\n  },\n  beforeCreate () {\n\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    lead () {\n      this.$refs.dbmodal.show()\n    },\n    handleEdit (tableId) {\n      this.$router.push({ name: 'genEdit', query: { tableId: tableId } })\n    },\n    handlePreview (tableId) {\n      this.$refs.premodal.show(tableId)\n    },\n    batchGen () {\n      const tables = this.selectedRows.map(t => {\n        return t.tableName\n      })\n      this.handleGen(tables)\n    },\n    handleGen (tables) {\n      genCodeZip(batchGenCode, tables.join(','))\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n    },\n    delByIds (ids) {\n      delGen({ ids: ids.join(',') }).then(res => {\n        if (res.code === 0) {\n          this.$message.success(`删除成功`)\n          this.handleOk()\n        } else {\n          this.$message.error(res.msg)\n        }\n        this.selectedRowKeys = []\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/gen"}]}