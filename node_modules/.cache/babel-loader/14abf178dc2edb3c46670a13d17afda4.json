{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Table/index.js","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Table/index.js","mtime":1581492640496},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1580791774215}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _typeof from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\nimport { Table as T } from 'ant-design-vue';\nimport get from 'lodash.get';\nexport default {\n  data: function data() {\n    return {\n      needTotalList: [],\n      selectedRows: [],\n      selectedRowKeys: [],\n      localLoading: false,\n      localDataSource: [],\n      localPagination: Object.assign({}, this.pagination)\n    };\n  },\n  props: Object.assign({}, T.props, {\n    rowKey: {\n      type: [String, Function],\n      default: 'key'\n    },\n    data: {\n      type: Function,\n      required: true\n    },\n    pageNum: {\n      type: Number,\n      default: 1\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    },\n    showSizeChanger: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: 'default'\n    },\n\n    /**\n     * alert: {\n     *   show: true,\n     *   clear: Function\n     * }\n     */\n    alert: {\n      type: [Object, Boolean],\n      default: null\n    },\n    rowSelection: {\n      type: Object,\n      default: null\n    },\n\n    /** @Deprecated */\n    showAlertInfo: {\n      type: Boolean,\n      default: false\n    },\n    showPagination: {\n      type: String | Boolean,\n      default: 'auto'\n    },\n\n    /**\n     * enable page URI mode\n     *\n     * e.g:\n     * /users/1\n     * /users/2\n     * /users/3?queryParam=test\n     * ...\n     */\n    pageURI: {\n      type: Boolean,\n      default: false\n    },\n    rangPicker: {\n      type: Array,\n      default: null\n    },\n    defaultSort: {\n      type: String,\n      default: null\n    },\n    defaultOrder: {\n      type: String,\n      default: 'desc'\n    }\n  }),\n  watch: {\n    'localPagination.current': function localPaginationCurrent(val) {\n      this.pageURI && this.$router.push(_objectSpread({}, this.$route, {\n        name: this.$route.name,\n        params: Object.assign({}, this.$route.params, {\n          pageNo: val\n        })\n      }));\n    },\n    pageNum: function pageNum(val) {\n      Object.assign(this.localPagination, {\n        current: val\n      });\n    },\n    pageSize: function pageSize(val) {\n      Object.assign(this.localPagination, {\n        pageSize: val\n      });\n    },\n    showSizeChanger: function showSizeChanger(val) {\n      Object.assign(this.localPagination, {\n        showSizeChanger: val\n      });\n    }\n  },\n  created: function created() {\n    var pageNo = this.$route.params.pageNo;\n    var localPageNum = this.pageURI && pageNo && parseInt(pageNo) || this.pageNum;\n    this.localPagination = ['auto', true].includes(this.showPagination) && Object.assign({}, this.localPagination, {\n      current: localPageNum,\n      pageSize: this.pageSize,\n      showSizeChanger: this.showSizeChanger\n    }) || false;\n    this.needTotalList = this.initTotalList(this.columns);\n    this.loadData();\n  },\n  methods: {\n    /**\n     * 表格重新加载方法\n     * 如果参数为 true, 则强制刷新到第一页\n     * @param Boolean bool\n     */\n    refresh: function refresh() {\n      var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      bool && (this.localPagination = Object.assign({}, {\n        current: 1,\n        pageSize: this.pageSize\n      }));\n      this.loadData();\n    },\n\n    /**\n     * 加载数据方法\n     * @param {Object} pagination 分页选项器\n     * @param {Object} filters 过滤条件\n     * @param {Object} sorter 排序条件\n     */\n    loadData: function loadData(pagination, filters, sorter) {\n      var _this = this;\n\n      this.localLoading = true; // console.log('rangPicker', this.rangPicker)\n\n      var parameter = Object.assign({\n        pageNum: pagination && pagination.current || this.showPagination && this.localPagination.current || this.pageNum,\n        pageSize: pagination && pagination.pageSize || this.showPagination && this.localPagination.pageSize || this.pageSize\n      }, this.rangPicker && this.rangPicker.length === 2 && {\n        beginTime: this.rangPicker[0].format('YYYY-MM-DD'),\n        endTime: this.rangPicker[1].format('YYYY-MM-DD')\n      } || {}, sorter && sorter.field && {\n        sortField: sorter.field\n      } || this.defaultSort && this.defaultSort.length > 0 && {\n        sortField: this.defaultSort\n      } || {}, sorter && sorter.order && {\n        sortOrder: sorter.order.replace('end', '')\n      } || this.defaultSort && this.defaultSort.length > 0 && {\n        sortOrder: this.defaultOrder\n      } || {}, _objectSpread({}, filters));\n      var result = this.data(parameter); // 对接自己的通用数据接口需要修改下方代码中的 r.pageNo, r.totalCount, r.data\n      // eslint-disable-next-line\n\n      if ((_typeof(result) === 'object' || typeof result === 'function') && typeof result.then === 'function') {\n        result.then(function (r) {\n          _this.localPagination = _this.showPagination && Object.assign({}, _this.localPagination, {\n            current: r.pageNum,\n            // 返回结果中的当前分页数\n            total: r.total,\n            // 返回结果中的总记录数\n            showSizeChanger: _this.showSizeChanger,\n            pageSize: pagination && pagination.pageSize || _this.localPagination.pageSize\n          }) || false; // 为防止删除数据后导致页面当前页面数据长度为 0 ,自动翻页到上一页\n\n          if (r.rows.length === 0 && _this.showPagination && _this.localPagination.current > 1) {\n            _this.localPagination.current--;\n\n            _this.loadData();\n\n            return;\n          } // console.log('localPagination', this.localPagination)\n          // 这里用于判断接口是否有返回 r.totalCount 且 this.showPagination = true 且 pageNo 和 pageSize 存在 且 totalCount 小于等于 pageNo * pageSize 的大小\n          // 当情况满足时，表示数据不满足分页大小，关闭 table 分页功能\n\n\n          try {\n            if (['auto', true].includes(_this.showPagination) && r.total <= r.pageNum * _this.localPagination.pageSize) {\n              _this.localPagination.hideOnSinglePage = true;\n            }\n          } catch (e) {\n            _this.localPagination = false;\n          }\n\n          _this.localDataSource = r.rows; // 返回结果中的数组数据\n\n          _this.localLoading = false;\n        });\n      }\n    },\n    initTotalList: function initTotalList(columns) {\n      var totalList = [];\n      columns && columns instanceof Array && columns.forEach(function (column) {\n        if (column.needTotal) {\n          totalList.push(_objectSpread({}, column, {\n            total: 0\n          }));\n        }\n      });\n      return totalList;\n    },\n\n    /**\n     * 用于更新已选中的列表数据 total 统计\n     * @param selectedRowKeys\n     * @param selectedRows\n     */\n    updateSelect: function updateSelect(selectedRowKeys, selectedRows) {\n      this.selectedRows = selectedRows;\n      this.selectedRowKeys = selectedRowKeys;\n      var list = this.needTotalList;\n      this.needTotalList = list.map(function (item) {\n        return _objectSpread({}, item, {\n          total: selectedRows.reduce(function (sum, val) {\n            var total = sum + parseInt(get(val, item.dataIndex));\n            return isNaN(total) ? 0 : total;\n          }, 0)\n        });\n      });\n    },\n\n    /**\n     * 清空 table 已选中项\n     */\n    clearSelected: function clearSelected() {\n      if (this.rowSelection) {\n        this.rowSelection.onChange([], []);\n        this.updateSelect([], []);\n      }\n    },\n\n    /**\n     * 处理交给 table 使用者去处理 clear 事件时，内部选中统计同时调用\n     * @param callback\n     * @returns {*}\n     */\n    renderClear: function renderClear(callback) {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      if (this.selectedRowKeys.length <= 0) return null;\n      return h(\"a\", {\n        \"style\": \"margin-left: 24px\",\n        \"on\": {\n          \"click\": function click() {\n            callback();\n\n            _this2.clearSelected();\n          }\n        }\n      }, [\"\\u6E05\\u7A7A\"]);\n    },\n    renderAlert: function renderAlert() {\n      var h = this.$createElement;\n      // 绘制统计列数据\n      var needTotalItems = this.needTotalList.map(function (item) {\n        return h(\"span\", {\n          \"style\": \"margin-right: 12px\"\n        }, [item.title, \"\\u603B\\u8BA1 \", h(\"a\", {\n          \"style\": \"font-weight: 600\"\n        }, [!item.customRender ? item.total : item.customRender(item.total)])]);\n      }); // 绘制 清空 按钮\n\n      var clearItem = typeof this.alert.clear === 'boolean' && this.alert.clear ? this.renderClear(this.clearSelected) : this.alert !== null && typeof this.alert.clear === 'function' ? this.renderClear(this.alert.clear) : null; // 绘制 alert 组件\n\n      return h(\"a-alert\", {\n        \"attrs\": {\n          \"showIcon\": true\n        },\n        \"style\": \"margin-bottom: 16px\"\n      }, [h(\"template\", {\n        \"slot\": \"message\"\n      }, [h(\"span\", {\n        \"style\": \"margin-right: 12px\"\n      }, [\"\\u5DF2\\u9009\\u62E9: \", h(\"a\", {\n        \"style\": \"font-weight: 600\"\n      }, [this.selectedRows.length])]), needTotalItems, clearItem])]);\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var h = arguments[0];\n    var props = {};\n    var localKeys = Object.keys(this.$data);\n    var showAlert = _typeof(this.alert) === 'object' && this.alert !== null && this.alert.show && typeof this.rowSelection.selectedRowKeys !== 'undefined' || this.alert;\n    Object.keys(T.props).forEach(function (k) {\n      var localKey = \"local\".concat(k.substring(0, 1).toUpperCase()).concat(k.substring(1));\n\n      if (localKeys.includes(localKey)) {\n        props[k] = _this3[localKey];\n        return props[k];\n      }\n\n      if (k === 'rowSelection') {\n        if (showAlert && _this3.rowSelection) {\n          // 如果需要使用alert，则重新绑定 rowSelection 事件\n          console.log('this.rowSelection', _this3.rowSelection);\n          props[k] = _objectSpread({}, _this3.rowSelection, {\n            selectedRows: _this3.selectedRows,\n            selectedRowKeys: _this3.selectedRowKeys,\n            onChange: function onChange(selectedRowKeys, selectedRows) {\n              _this3.updateSelect(selectedRowKeys, selectedRows);\n\n              typeof _this3[k].onChange !== 'undefined' && _this3[k].onChange(selectedRowKeys, selectedRows);\n            }\n          });\n          return props[k];\n        } else if (!_this3.rowSelection) {\n          // 如果没打算开启 rowSelection 则清空默认的选择项\n          props[k] = null;\n          return props[k];\n        }\n      }\n\n      _this3[k] && (props[k] = _this3[k]);\n      return props[k];\n    });\n    var table = h(\"a-table\", _mergeJSXProps([{}, {\n      props: props,\n      scopedSlots: _objectSpread({}, this.$scopedSlots)\n    }, {\n      \"on\": {\n        \"change\": this.loadData\n      }\n    }]), [Object.keys(this.$slots).map(function (name) {\n      return h(\"template\", {\n        \"slot\": name\n      }, [_this3.$slots[name]]);\n    })]);\n    return h(\"div\", {\n      \"class\": \"table-wrapper\"\n    }, [showAlert ? this.renderAlert() : null, table]);\n  }\n};",{"version":3,"sources":["/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/Table/index.js"],"names":["Table","T","get","data","needTotalList","selectedRows","selectedRowKeys","localLoading","localDataSource","localPagination","Object","assign","pagination","props","rowKey","type","String","Function","default","required","pageNum","Number","pageSize","showSizeChanger","Boolean","size","alert","rowSelection","showAlertInfo","showPagination","pageURI","rangPicker","Array","defaultSort","defaultOrder","watch","val","$router","push","$route","name","params","pageNo","current","created","localPageNum","parseInt","includes","initTotalList","columns","loadData","methods","refresh","bool","filters","sorter","parameter","length","beginTime","format","endTime","field","sortField","order","sortOrder","replace","result","then","r","total","rows","hideOnSinglePage","e","totalList","forEach","column","needTotal","updateSelect","list","map","item","reduce","sum","dataIndex","isNaN","clearSelected","onChange","renderClear","callback","renderAlert","needTotalItems","title","customRender","clearItem","clear","render","localKeys","keys","$data","showAlert","show","k","localKey","substring","toUpperCase","console","log","table","scopedSlots","$scopedSlots","$slots"],"mappings":"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","sourcesContent":["import { Table as T } from 'ant-design-vue'\nimport get from 'lodash.get'\n\nexport default {\n  data () {\n    return {\n      needTotalList: [],\n\n      selectedRows: [],\n      selectedRowKeys: [],\n\n      localLoading: false,\n      localDataSource: [],\n      localPagination: Object.assign({}, this.pagination)\n\n    }\n  },\n  props: Object.assign({}, T.props, {\n    rowKey: {\n      type: [String, Function],\n      default: 'key'\n    },\n    data: {\n      type: Function,\n      required: true\n    },\n    pageNum: {\n      type: Number,\n      default: 1\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    },\n    showSizeChanger: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: 'default'\n    },\n    /**\n     * alert: {\n     *   show: true,\n     *   clear: Function\n     * }\n     */\n    alert: {\n      type: [Object, Boolean],\n      default: null\n    },\n    rowSelection: {\n      type: Object,\n      default: null\n    },\n    /** @Deprecated */\n    showAlertInfo: {\n      type: Boolean,\n      default: false\n    },\n    showPagination: {\n      type: String | Boolean,\n      default: 'auto'\n    },\n    /**\n     * enable page URI mode\n     *\n     * e.g:\n     * /users/1\n     * /users/2\n     * /users/3?queryParam=test\n     * ...\n     */\n    pageURI: {\n      type: Boolean,\n      default: false\n    },\n    rangPicker: {\n      type: Array,\n      default: null\n    },\n    defaultSort: {\n      type: String,\n      default: null\n    },\n    defaultOrder: {\n      type: String,\n      default: 'desc'\n    }\n  }),\n  watch: {\n    'localPagination.current' (val) {\n      this.pageURI && this.$router.push({\n        ...this.$route,\n        name: this.$route.name,\n        params: Object.assign({}, this.$route.params, {\n          pageNo: val\n        })\n      })\n    },\n    pageNum (val) {\n      Object.assign(this.localPagination, {\n        current: val\n      })\n    },\n    pageSize (val) {\n      Object.assign(this.localPagination, {\n        pageSize: val\n      })\n    },\n    showSizeChanger (val) {\n      Object.assign(this.localPagination, {\n        showSizeChanger: val\n      })\n    }\n  },\n  created () {\n    const { pageNo } = this.$route.params\n    const localPageNum = this.pageURI && (pageNo && parseInt(pageNo)) || this.pageNum\n    this.localPagination = ['auto', true].includes(this.showPagination) && Object.assign({}, this.localPagination, {\n      current: localPageNum,\n      pageSize: this.pageSize,\n      showSizeChanger: this.showSizeChanger\n    }) || false\n    this.needTotalList = this.initTotalList(this.columns)\n    this.loadData()\n  },\n  methods: {\n    /**\n     * 表格重新加载方法\n     * 如果参数为 true, 则强制刷新到第一页\n     * @param Boolean bool\n     */\n    refresh (bool = false) {\n      bool && (this.localPagination = Object.assign({}, {\n        current: 1, pageSize: this.pageSize\n      }))\n      this.loadData()\n    },\n    /**\n     * 加载数据方法\n     * @param {Object} pagination 分页选项器\n     * @param {Object} filters 过滤条件\n     * @param {Object} sorter 排序条件\n     */\n    loadData (pagination, filters, sorter) {\n      this.localLoading = true\n      // console.log('rangPicker', this.rangPicker)\n      const parameter = Object.assign({\n        pageNum: (pagination && pagination.current) ||\n          this.showPagination && this.localPagination.current || this.pageNum,\n        pageSize: (pagination && pagination.pageSize) ||\n          this.showPagination && this.localPagination.pageSize || this.pageSize\n      },\n      (this.rangPicker && this.rangPicker.length === 2 && {\n        beginTime: this.rangPicker[0].format('YYYY-MM-DD'),\n        endTime: this.rangPicker[1].format('YYYY-MM-DD')\n      }) || {},\n      (sorter && sorter.field && {\n        sortField: sorter.field\n      }) || (this.defaultSort && this.defaultSort.length > 0 && { sortField: this.defaultSort }) || {},\n      (sorter && sorter.order && {\n        sortOrder: sorter.order.replace('end', '')\n      }) || (this.defaultSort && this.defaultSort.length > 0 && { sortOrder: this.defaultOrder }) || {},\n      {\n        ...filters\n      }\n      )\n      const result = this.data(parameter)\n      // 对接自己的通用数据接口需要修改下方代码中的 r.pageNo, r.totalCount, r.data\n      // eslint-disable-next-line\n      if ((typeof result === 'object' || typeof result === 'function') && typeof result.then === 'function') {\n        result.then(r => {\n          this.localPagination = this.showPagination && Object.assign({}, this.localPagination, {\n            current: r.pageNum, // 返回结果中的当前分页数\n            total: r.total, // 返回结果中的总记录数\n            showSizeChanger: this.showSizeChanger,\n            pageSize: (pagination && pagination.pageSize) ||\n              this.localPagination.pageSize\n          }) || false\n          // 为防止删除数据后导致页面当前页面数据长度为 0 ,自动翻页到上一页\n          if (r.rows.length === 0 && this.showPagination && this.localPagination.current > 1) {\n            this.localPagination.current--\n            this.loadData()\n            return\n          }\n          // console.log('localPagination', this.localPagination)\n          // 这里用于判断接口是否有返回 r.totalCount 且 this.showPagination = true 且 pageNo 和 pageSize 存在 且 totalCount 小于等于 pageNo * pageSize 的大小\n          // 当情况满足时，表示数据不满足分页大小，关闭 table 分页功能\n          try {\n            if ((['auto', true].includes(this.showPagination) && r.total <= (r.pageNum * this.localPagination.pageSize))) {\n              this.localPagination.hideOnSinglePage = true\n            }\n          } catch (e) {\n            this.localPagination = false\n          }\n          this.localDataSource = r.rows // 返回结果中的数组数据\n          this.localLoading = false\n        })\n      }\n    },\n    initTotalList (columns) {\n      const totalList = []\n      columns && columns instanceof Array && columns.forEach(column => {\n        if (column.needTotal) {\n          totalList.push({\n            ...column,\n            total: 0\n          })\n        }\n      })\n      return totalList\n    },\n    /**\n     * 用于更新已选中的列表数据 total 统计\n     * @param selectedRowKeys\n     * @param selectedRows\n     */\n    updateSelect (selectedRowKeys, selectedRows) {\n      this.selectedRows = selectedRows\n      this.selectedRowKeys = selectedRowKeys\n      const list = this.needTotalList\n      this.needTotalList = list.map(item => {\n        return {\n          ...item,\n          total: selectedRows.reduce((sum, val) => {\n            const total = sum + parseInt(get(val, item.dataIndex))\n            return isNaN(total) ? 0 : total\n          }, 0)\n        }\n      })\n    },\n    /**\n     * 清空 table 已选中项\n     */\n    clearSelected () {\n      if (this.rowSelection) {\n        this.rowSelection.onChange([], [])\n        this.updateSelect([], [])\n      }\n    },\n    /**\n     * 处理交给 table 使用者去处理 clear 事件时，内部选中统计同时调用\n     * @param callback\n     * @returns {*}\n     */\n    renderClear (callback) {\n      if (this.selectedRowKeys.length <= 0) return null\n      return (\n        <a style=\"margin-left: 24px\" onClick={() => {\n          callback()\n          this.clearSelected()\n        }}>清空</a>\n      )\n    },\n    renderAlert () {\n      // 绘制统计列数据\n      const needTotalItems = this.needTotalList.map((item) => {\n        return (<span style=\"margin-right: 12px\">\n          {item.title}总计 <a style=\"font-weight: 600\">{!item.customRender ? item.total : item.customRender(item.total)}</a>\n        </span>)\n      })\n\n      // 绘制 清空 按钮\n      const clearItem = (typeof this.alert.clear === 'boolean' && this.alert.clear) ? (\n        this.renderClear(this.clearSelected)\n      ) : (this.alert !== null && typeof this.alert.clear === 'function') ? (\n        this.renderClear(this.alert.clear)\n      ) : null\n\n      // 绘制 alert 组件\n      return (\n        <a-alert showIcon={true} style=\"margin-bottom: 16px\">\n          <template slot=\"message\">\n            <span style=\"margin-right: 12px\">已选择: <a style=\"font-weight: 600\">{this.selectedRows.length}</a></span>\n            {needTotalItems}\n            {clearItem}\n          </template>\n        </a-alert>\n      )\n    }\n  },\n\n  render () {\n    const props = {}\n    const localKeys = Object.keys(this.$data)\n    const showAlert = (typeof this.alert === 'object' && this.alert !== null && this.alert.show) && typeof this.rowSelection.selectedRowKeys !== 'undefined' || this.alert\n\n    Object.keys(T.props).forEach(k => {\n      const localKey = `local${k.substring(0, 1).toUpperCase()}${k.substring(1)}`\n      if (localKeys.includes(localKey)) {\n        props[k] = this[localKey]\n        return props[k]\n      }\n      if (k === 'rowSelection') {\n        if (showAlert && this.rowSelection) {\n          // 如果需要使用alert，则重新绑定 rowSelection 事件\n          console.log('this.rowSelection', this.rowSelection)\n          props[k] = {\n            ...this.rowSelection,\n            selectedRows: this.selectedRows,\n            selectedRowKeys: this.selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n              this.updateSelect(selectedRowKeys, selectedRows)\n              typeof this[k].onChange !== 'undefined' && this[k].onChange(selectedRowKeys, selectedRows)\n            }\n          }\n          return props[k]\n        } else if (!this.rowSelection) {\n          // 如果没打算开启 rowSelection 则清空默认的选择项\n          props[k] = null\n          return props[k]\n        }\n      }\n      this[k] && (props[k] = this[k])\n      return props[k]\n    })\n    const table = (\n      <a-table {...{ props, scopedSlots: { ...this.$scopedSlots } }} onChange={this.loadData}>\n        { Object.keys(this.$slots).map(name => (<template slot={name}>{this.$slots[name]}</template>)) }\n      </a-table>\n    )\n\n    return (\n      <div class=\"table-wrapper\">\n        { showAlert ? this.renderAlert() : null }\n        { table }\n      </div>\n    )\n  }\n}\n"]}]}