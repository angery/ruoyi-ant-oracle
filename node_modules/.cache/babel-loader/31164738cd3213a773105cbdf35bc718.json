{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/PageLoading/index.jsx","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/PageLoading/index.jsx","mtime":1581492640492},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1580791774215}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { Spin } from 'ant-design-vue';\nexport var PageLoading = {\n  name: 'PageLoading',\n  props: {\n    tip: {\n      type: String,\n      default: 'Loading..'\n    },\n    size: {\n      type: String,\n      default: 'large'\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var style = {\n      textAlign: 'center',\n      background: 'rgba(0,0,0,0.6)',\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: 1100\n    };\n    var spinStyle = {\n      position: 'absolute',\n      left: '50%',\n      top: '40%',\n      transform: 'translate(-50%, -50%)'\n    };\n    return h(\"div\", {\n      \"style\": style\n    }, [h(Spin, {\n      \"attrs\": {\n        \"size\": this.size,\n        \"tip\": this.tip\n      },\n      \"style\": spinStyle\n    })]);\n  }\n};\nvar version = '0.0.1';\nvar loading = {};\n\nloading.newInstance = function (Vue, options) {\n  var loadingElement = document.querySelector('body>div[type=loading]');\n\n  if (!loadingElement) {\n    loadingElement = document.createElement('div');\n    loadingElement.setAttribute('type', 'loading');\n    loadingElement.setAttribute('class', 'ant-loading-wrapper');\n    document.body.appendChild(loadingElement);\n  }\n\n  var cdProps = Object.assign({\n    visible: false,\n    size: 'large',\n    tip: 'Loading...'\n  }, options);\n  var instance = new Vue({\n    data: function data() {\n      return _objectSpread({}, cdProps);\n    },\n    render: function render() {\n      var h = arguments[0];\n      var tip = this.tip;\n      var props = {};\n      this.tip && (props.tip = tip);\n\n      if (this.visible) {\n        return h(PageLoading, {\n          \"props\": _objectSpread({}, props)\n        });\n      }\n\n      return null;\n    }\n  }).$mount(loadingElement);\n\n  function update(config) {\n    var _cdProps$config = _objectSpread({}, cdProps, config),\n        visible = _cdProps$config.visible,\n        size = _cdProps$config.size,\n        tip = _cdProps$config.tip;\n\n    instance.$set(instance, 'visible', visible);\n\n    if (tip) {\n      instance.$set(instance, 'tip', tip);\n    }\n\n    if (size) {\n      instance.$set(instance, 'size', size);\n    }\n  }\n\n  return {\n    instance: instance,\n    update: update\n  };\n};\n\nvar api = {\n  show: function show(options) {\n    this.instance.update(_objectSpread({}, options, {\n      visible: true\n    }));\n  },\n  hide: function hide() {\n    this.instance.update({\n      visible: false\n    });\n  }\n};\n\nvar install = function install(Vue, options) {\n  if (Vue.prototype.$loading) {\n    return;\n  }\n\n  api.instance = loading.newInstance(Vue, options);\n  Vue.prototype.$loading = api;\n};\n\nexport default {\n  version: version,\n  install: install\n};",{"version":3,"sources":["/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/PageLoading/index.jsx"],"names":["Spin","PageLoading","name","props","tip","type","String","default","size","render","style","textAlign","background","position","top","bottom","left","right","zIndex","spinStyle","transform","version","loading","newInstance","Vue","options","loadingElement","document","querySelector","createElement","setAttribute","body","appendChild","cdProps","Object","assign","visible","instance","data","$mount","update","config","$set","api","show","hide","install","prototype","$loading"],"mappings":"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","sourcesContent":["import { Spin } from 'ant-design-vue'\n\nexport const PageLoading = {\n  name: 'PageLoading',\n  props: {\n    tip: {\n      type: String,\n      default: 'Loading..'\n    },\n    size: {\n      type: String,\n      default: 'large'\n    }\n  },\n  render () {\n    const style = {\n      textAlign: 'center',\n      background: 'rgba(0,0,0,0.6)',\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: 1100\n    }\n    const spinStyle = {\n      position: 'absolute',\n      left: '50%',\n      top: '40%',\n      transform: 'translate(-50%, -50%)'\n    }\n    return (<div style={style}>\n      <Spin size={this.size} style={spinStyle} tip={this.tip} />\n    </div>)\n  }\n}\n\nconst version = '0.0.1'\nconst loading = {}\n\nloading.newInstance = (Vue, options) => {\n  let loadingElement = document.querySelector('body>div[type=loading]')\n  if (!loadingElement) {\n    loadingElement = document.createElement('div')\n    loadingElement.setAttribute('type', 'loading')\n    loadingElement.setAttribute('class', 'ant-loading-wrapper')\n    document.body.appendChild(loadingElement)\n  }\n\n  const cdProps = Object.assign({ visible: false, size: 'large', tip: 'Loading...' }, options)\n\n  const instance = new Vue({\n    data () {\n      return {\n        ...cdProps\n      }\n    },\n    render () {\n      const { tip } = this\n      const props = {}\n      this.tip && (props.tip = tip)\n      if (this.visible) {\n        return <PageLoading { ...{ props } } />\n      }\n      return null\n    }\n  }).$mount(loadingElement)\n\n  function update (config) {\n    const { visible, size, tip } = { ...cdProps, ...config }\n    instance.$set(instance, 'visible', visible)\n    if (tip) {\n      instance.$set(instance, 'tip', tip)\n    }\n    if (size) {\n      instance.$set(instance, 'size', size)\n    }\n  }\n\n  return {\n    instance,\n    update\n  }\n}\n\nconst api = {\n  show: function (options) {\n    this.instance.update({ ...options, visible: true })\n  },\n  hide: function () {\n    this.instance.update({ visible: false })\n  }\n}\n\nconst install = function (Vue, options) {\n  if (Vue.prototype.$loading) {\n    return\n  }\n  api.instance = loading.newInstance(Vue, options)\n  Vue.prototype.$loading = api\n}\n\nexport default {\n  version,\n  install\n}\n"]}]}