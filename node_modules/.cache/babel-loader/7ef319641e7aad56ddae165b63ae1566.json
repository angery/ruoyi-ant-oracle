{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/DictDataModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/DictDataModal.vue","mtime":1581645117373},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { saveDictData } from '@/api/system';\nimport pick from 'lodash.pick';\nexport default {\n  name: 'DictModal',\n  props: {},\n  components: {},\n  data: function data() {\n    return {\n      description: '列表使用场景：后台管理中的权限管理以及角色管理，可用于基于 RBAC 设计的角色权限控制，颗粒度细到每一个操作类型。',\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      roleAll: [],\n      mdl: {},\n      form: this.$form.createForm(this)\n    };\n  },\n  beforeCreate: function beforeCreate() {},\n  created: function created() {},\n  methods: {\n    add: function add(dictType) {\n      this.form.resetFields();\n      this.edit({\n        dictCode: 0,\n        dictType: dictType\n      });\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.mdl = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.mdl, 'dictCode', 'dictType', 'dictLabel', 'dictValue', 'dictSort', 'status', 'remark'));\n      });\n    },\n    handleSubmit: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          _this2.confirmLoading = true;\n          saveDictData(values).then(function (res) {\n            if (res.code === 0) {\n              _this2.$message.success('保存成功');\n\n              _this2.$emit('ok');\n\n              _this2.visible = false;\n            } else {\n              _this2.$message.warning(res.msg);\n            }\n          }).catch(function () {\n            _this2.$message.error('系统错误，请稍后再试');\n          }).finally(function () {\n            _this2.confirmLoading = false;\n          });\n        }\n      });\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["DictDataModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,SAAA,YAAA,QAAA,cAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAIA,EAAA,UAAA,EAAA,EAJA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,4DADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAHA;AAOA,MAAA,UAAA,EAAA;AACA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA;AAEA,QAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAFA,OAPA;AAWA,MAAA,cAAA,EAAA,KAXA;AAYA,MAAA,OAAA,EAAA,EAZA;AAaA,MAAA,GAAA,EAAA,EAbA;AAcA,MAAA,IAAA,EAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA;AAdA,KAAA;AAgBA,GAvBA;AAwBA,EAAA,YAxBA,0BAwBA,CACA,CAzBA;AA0BA,EAAA,OA1BA,qBA0BA,CACA,CA3BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,GADA,eACA,QADA,EACA;AACA,WAAA,IAAA,CAAA,WAAA;AACA,WAAA,IAAA,CAAA;AAAA,QAAA,QAAA,EAAA,CAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA;AACA,KAJA;AAKA,IAAA,IALA,gBAKA,MALA,EAKA;AAAA;;AACA,WAAA,GAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,CAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,UAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,QAAA,EAAA,QAAA,CAAA;AACA,OAFA;AAGA,KAXA;AAYA,IAAA,YAZA,wBAYA,CAZA,EAYA;AAAA;;AACA,MAAA,CAAA,CAAA,cAAA;AACA,WAAA,IAAA,CAAA,cAAA,CAAA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,YAAA,CAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,2BAAA,EAAA,MAAA;AACA,UAAA,MAAA,CAAA,cAAA,GAAA,IAAA;AACA,UAAA,YAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,KAAA,CAAA,IAAA;;AACA,cAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,aAJA,MAIA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,WARA,EAQA,KARA,CAQA,YAAA;AACA,YAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,YAAA;AACA,WAVA,EAUA,OAVA,CAUA,YAAA;AACA,YAAA,MAAA,CAAA,cAAA,GAAA,KAAA;AACA,WAZA;AAaA;AACA,OAlBA;AAmBA;AAjCA,GA5BA;AA+DA,EAAA,KAAA,EAAA;AACA;;;;;;;;;;;;AADA;AA/DA,CAAA","sourcesContent":["<template>\n  <a-modal\n    title=\"操作\"\n    style=\"top: 20px;\"\n    :width=\"800\"\n    v-model=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleSubmit\"\n  >\n    <a-form :form=\"form\">\n      <a-form-item style=\"display:none\">\n        <a-input v-decorator=\"['dictCode']\"/>\n      </a-form-item>\n      <a-form-item style=\"display:none\">\n        <a-input v-decorator=\"['dictType']\"/>\n      </a-form-item>\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"字典标签\"\n      >\n        <a-input placeholder=\"字典标签\" v-decorator=\"['dictLabel', {rules: [{ required: true, message: '请输入字典标签' },{ min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }]}]\" />\n      </a-form-item>\n\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"字典键值\"\n      >\n        <a-input v-decorator=\"['dictValue',{rules: [{ required: true, message: '请输入字典键值' },{ min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }]}]\" placeholder=\"字典键值\"/>\n      </a-form-item>\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"字典排序\"\n      >\n        <a-input-number v-decorator=\"['dictSort', {rules: [{ required: true, message: '请输入字典排序' }]}]\" placeholder=\"字典排序\" style=\"width:100%;\" />\n\n      </a-form-item>\n\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"状态\"\n      >\n        <a-select v-decorator=\"['status', {initialValue:'0',rules: [{ required: true, message: '请选择状态' }]}]\">\n          <a-select-option :value=\"'0'\">正常</a-select-option>\n          <a-select-option :value=\"'1'\">禁用</a-select-option>\n        </a-select>\n      </a-form-item>\n\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"备注\"\n      >\n        <a-textarea :rows=\"5\" placeholder=\"...\" v-decorator=\"['remark',{rules: [{ required: false, message: '请输入备注' },{ min: 0, max: 500, message: '长度不能超过500 个字符', trigger: 'blur' }]}]\"/>\n      </a-form-item>\n\n    </a-form>\n  </a-modal>\n</template>\n<script>\nimport { saveDictData } from '@/api/system'\nimport pick from 'lodash.pick'\nexport default {\n  name: 'DictModal',\n  props: {\n  },\n  components: {\n  },\n  data () {\n    return {\n      description: '列表使用场景：后台管理中的权限管理以及角色管理，可用于基于 RBAC 设计的角色权限控制，颗粒度细到每一个操作类型。',\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      confirmLoading: false,\n      roleAll: [],\n      mdl: {},\n      form: this.$form.createForm(this)\n    }\n  },\n  beforeCreate () {\n  },\n  created () {\n  },\n  methods: {\n    add (dictType) {\n      this.form.resetFields()\n      this.edit({ dictCode: 0, dictType: dictType })\n    },\n    edit (record) {\n      this.mdl = Object.assign({}, record)\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.mdl, 'dictCode', 'dictType', 'dictLabel', 'dictValue', 'dictSort', 'status', 'remark'))\n      })\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values)\n          this.confirmLoading = true\n          saveDictData(values).then(res => {\n            if (res.code === 0) {\n              this.$message.success('保存成功')\n              this.$emit('ok')\n              this.visible = false\n            } else {\n              this.$message.warning(res.msg)\n            }\n          }).catch(() => {\n            this.$message.error('系统错误，请稍后再试')\n          }).finally(() => {\n            this.confirmLoading = false\n          })\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system/modules"}]}