{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/DictDataListModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/DictDataListModal.vue","mtime":1581645216352},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { STable } from '@/components';\nimport { getDictDataList, delDictData } from '@/api/system';\nimport DictDataModal from \"./DictDataModal.vue\";\nimport { checkPermission } from '@/utils/permissions';\nvar statusMap = {\n  0: {\n    status: 'success',\n    text: '正常'\n  },\n  1: {\n    status: 'default',\n    text: '停用'\n  }\n};\nexport default {\n  name: 'TableList',\n  components: {\n    STable: STable,\n    DictDataModal: DictDataModal\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [{\n        title: '字典标签',\n        dataIndex: 'dictLabel'\n      }, {\n        title: '字典键值',\n        dataIndex: 'dictValue'\n      }, {\n        title: '字典排序',\n        dataIndex: 'dictSort'\n      }, {\n        title: '状态',\n        dataIndex: 'status',\n        scopedSlots: {\n          customRender: 'status'\n        }\n      }, {\n        title: '创建时间',\n        dataIndex: 'createTime',\n        sorter: true\n      }, {\n        title: '操作',\n        width: '150px',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: function loadData(parameter) {\n        return getDictDataList(Object.assign(parameter, _this.queryParam));\n      },\n      dictType: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:dict:add'),\n      editEnabel: checkPermission('system:dict:edit'),\n      removeEnable: checkPermission('system:dict:remove')\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(type) {\n      return statusMap[type].text;\n    },\n    statusTypeFilter: function statusTypeFilter(type) {\n      return statusMap[type].status;\n    }\n  },\n  created: function created() {},\n  methods: {\n    show: function show(dictType) {\n      this.visible = true;\n      this.queryParam.dictType = dictType;\n      this.dictType = dictType;\n      this.$refs.table && this.$refs.table.refresh(true);\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    handleEdit: function handleEdit(record) {\n      this.$refs.modal.edit(record);\n    },\n    handleOk: function handleOk() {\n      this.$refs.table.refresh(true);\n      console.log('handleSaveOk');\n    },\n    delByIds: function delByIds(ids) {\n      var _this2 = this;\n\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: function onOk() {\n          delDictData({\n            ids: ids.join(',')\n          }).then(function (res) {\n            if (res.code === 0) {\n              _this2.$message.success(\"\\u5220\\u9664\\u6210\\u529F\");\n\n              _this2.handleOk();\n            } else {\n              _this2.$message.error(res.msg);\n            }\n\n            _this2.selectedRowKeys = [];\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n};",{"version":3,"sources":["DictDataListModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    title=\"字典数据\"\n    style=\"top: 20px;\"\n    :width=\"1100\"\n    v-model=\"visible\"\n    :footer=\"null\"\n  >\n    <div class=\"table-operator\">\n      <a-button v-if=\"addEnable\" type=\"primary\" icon=\"plus\" @click=\"$refs.modal.add(dictType)\">新建</a-button>\n      <a-dropdown v-if=\"removeEnable&&selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"dictCode\"\n      :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n    >\n      <span slot=\"status\" slot-scope=\"text\">\n        <a-badge :status=\"text | statusTypeFilter\" :text=\"text | statusFilter\" />\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a v-if=\"editEnabel\" @click=\"handleEdit(record)\">编辑</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"removeEnable\" @click=\"delByIds([record.dictCode])\">删除</a>\n      </span>\n    </s-table>\n    <dict-data-modal ref=\"modal\" @ok=\"handleOk\" />\n  </a-modal>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getDictDataList, delDictData } from '@/api/system'\nimport DictDataModal from './DictDataModal.vue'\nimport { checkPermission } from '@/utils/permissions'\n\nconst statusMap = {\n  0: {\n    status: 'success',\n    text: '正常'\n  },\n  1: {\n    status: 'default',\n    text: '停用'\n  }\n}\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    DictDataModal\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: { },\n      // 表头\n      columns: [\n        {\n          title: '字典标签',\n          dataIndex: 'dictLabel'\n        },\n        {\n          title: '字典键值',\n          dataIndex: 'dictValue'\n        },\n        {\n          title: '字典排序',\n          dataIndex: 'dictSort'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        },\n        {\n          title: '操作',\n          width: '150px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getDictDataList(Object.assign(parameter, this.queryParam))\n      },\n      dictType: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:dict:add'),\n      editEnabel: checkPermission('system:dict:edit'),\n      removeEnable: checkPermission('system:dict:remove')\n    }\n  },\n  filters: {\n    statusFilter (type) {\n      return statusMap[type].text\n    },\n    statusTypeFilter (type) {\n      return statusMap[type].status\n    }\n  },\n  created () {\n  },\n  methods: {\n    show (dictType) {\n      this.visible = true\n      this.queryParam.dictType = dictType\n      this.dictType = dictType\n      this.$refs.table && this.$refs.table.refresh(true)\n    },\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleEdit (record) {\n      this.$refs.modal.edit(record)\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delDictData({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system/modules"}]}