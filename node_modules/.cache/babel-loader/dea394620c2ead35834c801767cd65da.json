{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/IconSelector/IconSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/IconSelector/IconSelector.vue","mtime":1581492640485},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport icons from \"./icons\";\nexport default {\n  name: 'IconSelect',\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'ant-pro-icon-selector'\n    },\n    // eslint-disable-next-line\n    value: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      selectedIcon: this.value || '',\n      currentTab: 'directional',\n      icons: icons\n    };\n  },\n  watch: {\n    value: function value(val) {\n      this.selectedIcon = val;\n      this.autoSwitchTab();\n    }\n  },\n  created: function created() {\n    if (this.value) {\n      this.autoSwitchTab();\n    }\n  },\n  methods: {\n    handleSelectedIcon: function handleSelectedIcon(icon) {\n      this.selectedIcon = icon;\n      this.$emit('change', icon);\n    },\n    handleTabChange: function handleTabChange(activeKey) {\n      this.currentTab = activeKey;\n    },\n    autoSwitchTab: function autoSwitchTab() {\n      var _this = this;\n\n      icons.some(function (item) {\n        return item.icons.some(function (icon) {\n          return icon === _this.value;\n        }) && (_this.currentTab = item.key);\n      });\n    }\n  }\n};",{"version":3,"sources":["IconSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAA,KAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AANA,GAFA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KAAA,KAAA,IAAA,EADA;AAEA,MAAA,UAAA,EAAA,aAFA;AAGA,MAAA,KAAA,EAAA;AAHA,KAAA;AAKA,GAlBA;AAmBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,GADA,EACA;AACA,WAAA,YAAA,GAAA,GAAA;AACA,WAAA,aAAA;AACA;AAJA,GAnBA;AAyBA,EAAA,OAzBA,qBAyBA;AACA,QAAA,KAAA,KAAA,EAAA;AACA,WAAA,aAAA;AACA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,8BACA,IADA,EACA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,IAAA;AACA,KAJA;AAKA,IAAA,eALA,2BAKA,SALA,EAKA;AACA,WAAA,UAAA,GAAA,SAAA;AACA,KAPA;AAQA,IAAA,aARA,2BAQA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,KAAA,CAAA,KAAA;AAAA,SAAA,MAAA,KAAA,CAAA,UAAA,GAAA,IAAA,CAAA,GAAA,CAAA;AAAA,OAAA;AACA;AAVA;AA9BA,CAAA","sourcesContent":["<template>\n  <div :class=\"prefixCls\">\n    <a-tabs v-model=\"currentTab\" @change=\"handleTabChange\">\n      <a-tab-pane v-for=\"v in icons\" :tab=\"v.title\" :key=\"v.key\">\n        <ul>\n          <li v-for=\"(icon, key) in v.icons\" :key=\"`${v.key}-${key}`\" :class=\"{ 'active': selectedIcon==icon }\" @click=\"handleSelectedIcon(icon)\" >\n            <a-icon :type=\"icon\" :style=\"{ fontSize: '36px' }\" />\n          </li>\n        </ul>\n      </a-tab-pane>\n    </a-tabs>\n  </div>\n</template>\n\n<script>\nimport icons from './icons'\n\nexport default {\n  name: 'IconSelect',\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'ant-pro-icon-selector'\n    },\n    // eslint-disable-next-line\n    value: {\n      type: String\n    }\n  },\n  data () {\n    return {\n      selectedIcon: this.value || '',\n      currentTab: 'directional',\n      icons\n    }\n  },\n  watch: {\n    value (val) {\n      this.selectedIcon = val\n      this.autoSwitchTab()\n    }\n  },\n  created () {\n    if (this.value) {\n      this.autoSwitchTab()\n    }\n  },\n  methods: {\n    handleSelectedIcon (icon) {\n      this.selectedIcon = icon\n      this.$emit('change', icon)\n    },\n    handleTabChange (activeKey) {\n      this.currentTab = activeKey\n    },\n    autoSwitchTab () {\n      icons.some(item => item.icons.some(icon => icon === this.value) && (this.currentTab = item.key))\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  @import \"../index.less\";\n\n  ul{\n    list-style: none;\n    padding: 0;\n    overflow-y: scroll;\n    height: 250px;\n\n    li{\n      display: inline-block;\n      padding: @padding-sm;\n      margin: 3px 0;\n      border-radius: @border-radius-base;\n\n      &:hover, &.active{\n        // box-shadow: 0px 0px 5px 2px @primary-color;\n        cursor: pointer;\n        color: @white;\n        background-color: @primary-color;\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/IconSelector"}]}