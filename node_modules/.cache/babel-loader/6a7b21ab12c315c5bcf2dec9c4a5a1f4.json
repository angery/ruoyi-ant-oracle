{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/store/modules/i18n.js","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/store/modules/i18n.js","mtime":1581492640514},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1580791774215}],"contextDependencies":[],"result":["import { loadLanguageAsync } from '@/locales';\nvar i18n = {\n  state: {\n    lang: 'en-US'\n  },\n  mutations: {\n    SET_LANG: function SET_LANG(state, lang) {\n      state.lang = lang;\n    }\n  },\n  actions: {\n    // 设置界面语言\n    SetLang: function SetLang(_ref, lang) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        commit('SET_LANG', lang);\n        loadLanguageAsync(lang);\n        resolve();\n      });\n    }\n  }\n};\nexport default i18n;",{"version":3,"sources":["/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/store/modules/i18n.js"],"names":["loadLanguageAsync","i18n","state","lang","mutations","SET_LANG","actions","SetLang","commit","Promise","resolve"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,WAAlC;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD,GADI;AAIXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,kBAACH,KAAD,EAAQC,IAAR,EAAiB;AACzBD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD;AAHQ,GAJA;AASXG,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,OAFO,yBAEcJ,IAFd,EAEoB;AAAA,UAAhBK,MAAgB,QAAhBA,MAAgB;AACzB,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BF,QAAAA,MAAM,CAAC,UAAD,EAAaL,IAAb,CAAN;AACAH,QAAAA,iBAAiB,CAACG,IAAD,CAAjB;AACAO,QAAAA,OAAO;AACR,OAJM,CAAP;AAKD;AARM;AATE,CAAb;AAqBA,eAAeT,IAAf","sourcesContent":["import { loadLanguageAsync } from '@/locales'\n\nconst i18n = {\n  state: {\n    lang: 'en-US'\n  },\n  mutations: {\n    SET_LANG: (state, lang) => {\n      state.lang = lang\n    }\n  },\n  actions: {\n    // 设置界面语言\n    SetLang ({ commit }, lang) {\n      return new Promise(resolve => {\n        commit('SET_LANG', lang)\n        loadLanguageAsync(lang)\n        resolve()\n      })\n    }\n  }\n}\n\nexport default i18n\n"]}]}