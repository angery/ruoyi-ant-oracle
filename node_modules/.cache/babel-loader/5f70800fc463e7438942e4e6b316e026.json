{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/user/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/user/Login.vue","mtime":1581492640553},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha';\nimport { mapActions } from 'vuex';\nimport { timeFix } from '@/utils/util'; // eslint-disable-next-line no-unused-vars\n\nimport md5 from 'md5'; // eslint-disable-next-line no-unused-vars\n\nimport { getSmsCaptcha, get2step, imgcode } from '@/api/login';\nexport default {\n  components: {\n    TwoStepCaptcha: TwoStepCaptcha\n  },\n  data: function data() {\n    return {\n      codesrc: null,\n      randomStr: null,\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      errorMsg: '',\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    };\n  },\n  created: function created() {\n    // get2step({ })\n    //   .then(res => {\n    //     this.requiredTwoStepCaptcha = res.result.stepCode\n    //   })\n    //   .catch(() => {\n    //     this.requiredTwoStepCaptcha = false\n    //   })\n    // this.requiredTwoStepCaptcha = true\n    this.getImgCode();\n  },\n  methods: _objectSpread({}, mapActions(['Login', 'Logout']), {\n    // handler\n    handleUsernameOrEmail: function handleUsernameOrEmail(rule, value, callback) {\n      var state = this.state;\n      var regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n\n      if (regex.test(value)) {\n        state.loginType = 0;\n      } else {\n        state.loginType = 1;\n      }\n\n      callback();\n    },\n    handleTabClick: function handleTabClick(key) {\n      this.customActiveKey = key; // this.form.resetFields()\n    },\n    handleSubmit: function handleSubmit(e) {\n      var _this = this;\n\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n          state = this.state,\n          customActiveKey = this.customActiveKey,\n          Login = this.Login;\n      state.loginBtn = true;\n      var validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password', 'captcha'] : ['mobile', 'captcha'];\n      validateFields(validateFieldsKey, {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          console.log('login form', values);\n\n          var loginParams = _objectSpread({}, values);\n\n          delete loginParams.username;\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username; // loginParams.password = md5(values.password)\n\n          loginParams.randomStr = _this.randomStr;\n          Login(loginParams).then(function (res) {\n            return _this.loginSuccess(res);\n          }).catch(function (err) {\n            return _this.requestFailed(err);\n          }).finally(function () {\n            state.loginBtn = false;\n          });\n        } else {\n          setTimeout(function () {\n            state.loginBtn = false;\n          }, 600);\n        }\n      });\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n          state = this.state;\n      validateFields(['mobile'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          state.smsSendBtn = true;\n          var interval = window.setInterval(function () {\n            if (state.time-- <= 0) {\n              state.time = 60;\n              state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n\n          var hide = _this2.$message.loading('验证码发送中..', 0);\n\n          getSmsCaptcha({\n            mobile: values.mobile\n          }).then(function (res) {\n            setTimeout(hide, 2500);\n\n            _this2.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            });\n          }).catch(function (err) {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            state.time = 60;\n            state.smsSendBtn = false;\n\n            _this2.requestFailed(err);\n          });\n        }\n      });\n    },\n    stepCaptchaSuccess: function stepCaptchaSuccess() {\n      this.loginSuccess();\n    },\n    stepCaptchaCancel: function stepCaptchaCancel() {\n      var _this3 = this;\n\n      this.Logout().then(function () {\n        _this3.loginBtn = false;\n        _this3.stepCaptchaVisible = false;\n      });\n    },\n    getImgCode: function () {\n      var _getImgCode = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this4 = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return imgcode().then(function (res) {\n                  var raw = res.data;\n                  var randomstr = res.headers.randomstr;\n                  _this4.randomStr = randomstr;\n                  _this4.codesrc = URL.createObjectURL(raw);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getImgCode() {\n        return _getImgCode.apply(this, arguments);\n      }\n\n      return getImgCode;\n    }(),\n    loginSuccess: function loginSuccess(res) {\n      var _this5 = this;\n\n      if (res.code === 0) {\n        this.$router.push({\n          name: 'dashboard'\n        }, function () {\n          _this5.$notification.success({\n            message: '欢迎',\n            description: \"\".concat(timeFix(), \"\\uFF0C\\u6B22\\u8FCE\\u56DE\\u6765\")\n          });\n        });\n        this.isLoginError = false;\n      } else {\n        this.requestFailed(res);\n      }\n    },\n    requestFailed: function requestFailed(err) {\n      this.isLoginError = true;\n      this.getImgCode();\n      this.errorMsg = ((err.response || {}).data || {}).msg || err.msg || '请求出现错误，请稍后再试';\n      this.$notification['error']({\n        message: '错误',\n        description: this.errorMsg,\n        duration: 4\n      });\n    }\n  })\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form\n      id=\"formLogin\"\n      class=\"user-layout-login\"\n      ref=\"formLogin\"\n      :form=\"form\"\n      @submit=\"handleSubmit\"\n    >\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\"\n      >\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登录\">\n          <a-alert v-if=\"isLoginError\" type=\"error\" showIcon style=\"margin-bottom: 24px;\" :message=\"errorMsg\" />\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              placeholder=\"账户: admin\"\n              v-decorator=\"[\n                'username',\n                {initialValue:'admin',rules: [{ required: true, message: '请输入帐户名或邮箱地址' }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"password\"\n              autocomplete=\"false\"\n              placeholder=\"密码: admin123\"\n              v-decorator=\"[\n                'password',\n                { initialValue:'admin123',rules: [{ required: true, message: '请输入密码' }], validateTrigger: 'blur'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input size=\"large\" type=\"text\" placeholder=\"验证码\" v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <img class=\"getCaptcha\" :src=\"codesrc\" @click=\"getImgCode\">\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n        <a-tab-pane key=\"tab2\" tab=\"手机号登录\">\n          <a-form-item>\n            <a-input size=\"large\" type=\"text\" placeholder=\"手机号\" v-decorator=\"['mobile', {rules: [{ required: true, pattern: /^1[34578]\\d{9}$/, message: '请输入正确的手机号' }], validateTrigger: 'change'}]\">\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input size=\"large\" type=\"text\" placeholder=\"验证码\" v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <a-button\n                class=\"getCaptcha\"\n                tabindex=\"-1\"\n                :disabled=\"state.smsSendBtn\"\n                @click.stop.prevent=\"getCaptcha\"\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"\n              ></a-button>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe']\">自动登录</a-checkbox>\n        <router-link\n          :to=\"{ name: 'recover', params: { user: 'aaa'} }\"\n          class=\"forge-password\"\n          style=\"float: right;\"\n        >忘记密码</router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"state.loginBtn\"\n          :disabled=\"state.loginBtn\"\n        >确定</a-button>\n      </a-form-item>\n\n      <div class=\"user-login-other\">\n        <span>其他登录方式</span>\n        <a>\n          <a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon>\n        </a>\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">注册账户</router-link>\n      </div>\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"\n    ></two-step-captcha>\n  </div>\n</template>\n\n<script>\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\n// eslint-disable-next-line no-unused-vars\nimport md5 from 'md5'\n// eslint-disable-next-line no-unused-vars\nimport { getSmsCaptcha, get2step, imgcode } from '@/api/login'\n\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n  data () {\n    return {\n      codesrc: null,\n      randomStr: null,\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      errorMsg: '',\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    }\n  },\n  created () {\n    // get2step({ })\n    //   .then(res => {\n    //     this.requiredTwoStepCaptcha = res.result.stepCode\n    //   })\n    //   .catch(() => {\n    //     this.requiredTwoStepCaptcha = false\n    //   })\n    // this.requiredTwoStepCaptcha = true\n    this.getImgCode()\n  },\n  methods: {\n    ...mapActions(['Login', 'Logout']),\n    // handler\n    handleUsernameOrEmail (rule, value, callback) {\n      const { state } = this\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\n      if (regex.test(value)) {\n        state.loginType = 0\n      } else {\n        state.loginType = 1\n      }\n      callback()\n    },\n    handleTabClick (key) {\n      this.customActiveKey = key\n      // this.form.resetFields()\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      const {\n        form: { validateFields },\n        state,\n        customActiveKey,\n        Login\n      } = this\n\n      state.loginBtn = true\n\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password', 'captcha'] : ['mobile', 'captcha']\n\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\n        if (!err) {\n          console.log('login form', values)\n          const loginParams = { ...values }\n          delete loginParams.username\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username\n          // loginParams.password = md5(values.password)\n          loginParams.randomStr = this.randomStr\n          Login(loginParams)\n            .then((res) => this.loginSuccess(res))\n            .catch(err => this.requestFailed(err))\n            .finally(() => {\n              state.loginBtn = false\n            })\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false\n          }, 600)\n        }\n      })\n    },\n    getCaptcha (e) {\n      e.preventDefault()\n      const { form: { validateFields }, state } = this\n\n      validateFields(['mobile'], { force: true }, (err, values) => {\n        if (!err) {\n          state.smsSendBtn = true\n\n          const interval = window.setInterval(() => {\n            if (state.time-- <= 0) {\n              state.time = 60\n              state.smsSendBtn = false\n              window.clearInterval(interval)\n            }\n          }, 1000)\n\n          const hide = this.$message.loading('验证码发送中..', 0)\n          getSmsCaptcha({ mobile: values.mobile }).then(res => {\n            setTimeout(hide, 2500)\n            this.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            })\n          }).catch(err => {\n            setTimeout(hide, 1)\n            clearInterval(interval)\n            state.time = 60\n            state.smsSendBtn = false\n            this.requestFailed(err)\n          })\n        }\n      })\n    },\n    stepCaptchaSuccess () {\n      this.loginSuccess()\n    },\n    stepCaptchaCancel () {\n      this.Logout().then(() => {\n        this.loginBtn = false\n        this.stepCaptchaVisible = false\n      })\n    },\n    async getImgCode () {\n      await imgcode().then(res => {\n        const raw = res.data\n        const { randomstr } = res.headers\n        this.randomStr = randomstr\n        this.codesrc = URL.createObjectURL(raw)\n      })\n    },\n    loginSuccess (res) {\n      if (res.code === 0) {\n        this.$router.push({ name: 'dashboard' }, () => {\n          this.$notification.success({\n            message: '欢迎',\n            description: `${timeFix()}，欢迎回来`\n          })\n        })\n        this.isLoginError = false\n      } else {\n        this.requestFailed(res)\n      }\n    },\n    requestFailed (err) {\n      this.isLoginError = true\n      this.getImgCode()\n      this.errorMsg = ((err.response || {}).data || {}).msg || err.msg || '请求出现错误，请稍后再试'\n      this.$notification['error']({\n        message: '错误',\n        description: this.errorMsg,\n        duration: 4\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n\n  .forge-password {\n    font-size: 14px;\n  }\n\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color 0.3s;\n\n      &:hover {\n        color: #1890ff;\n      }\n    }\n\n    .register {\n      float: right;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/user"}]}