{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/TagSelect/index.jsx","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/TagSelect/index.jsx","mtime":1581492640497},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1580791774215}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport PropTypes from 'ant-design-vue/es/_util/vue-types';\nimport Option from \"./TagSelectOption.jsx\";\nimport { filterEmpty } from '@/components/_util/util';\nexport default {\n  Option: Option,\n  name: 'TagSelect',\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'ant-pro-tag-select'\n    },\n    defaultValue: {\n      type: PropTypes.array,\n      default: null\n    },\n    value: {\n      type: PropTypes.array,\n      default: null\n    },\n    expandable: {\n      type: Boolean,\n      default: false\n    },\n    hideCheckAll: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      expand: false,\n      localCheckAll: false,\n      items: this.getItemsKey(filterEmpty(this.$slots.default)),\n      val: this.value || this.defaultValue || []\n    };\n  },\n  methods: {\n    onChange: function onChange(checked) {\n      var key = Object.keys(this.items).filter(function (key) {\n        return key === checked.value;\n      });\n      this.items[key] = checked.checked;\n      var bool = Object.values(this.items).lastIndexOf(false);\n\n      if (bool === -1) {\n        this.localCheckAll = true;\n      } else {\n        this.localCheckAll = false;\n      }\n    },\n    onCheckAll: function onCheckAll(checked) {\n      var _this = this;\n\n      Object.keys(this.items).forEach(function (v) {\n        _this.items[v] = checked.checked;\n      });\n      this.localCheckAll = checked.checked;\n    },\n    getItemsKey: function getItemsKey(items) {\n      var totalItem = {};\n      items.forEach(function (item) {\n        totalItem[item.componentOptions.propsData && item.componentOptions.propsData.value] = false;\n      });\n      return totalItem;\n    },\n    // CheckAll Button\n    renderCheckAll: function renderCheckAll() {\n      var h = this.$createElement;\n      return !this.hideCheckAll && h(Option, {\n        \"key\": 'total',\n        \"attrs\": {\n          \"checked\": this.localCheckAll\n        },\n        \"on\": {\n          \"change\": this.onCheckAll\n        }\n      }, [\"All\"]) || null;\n    },\n    // expandable\n    renderExpandable: function renderExpandable() {},\n    // render option\n    renderTags: function renderTags(items) {\n      var _this2 = this;\n\n      var listeners = {\n        change: function change(checked) {\n          _this2.onChange(checked);\n\n          _this2.$emit('change', checked);\n        }\n      };\n      return items.map(function (vnode) {\n        var options = vnode.componentOptions;\n        options.listeners = listeners;\n        return vnode;\n      });\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var prefixCls = this.$props.prefixCls;\n\n    var classString = _defineProperty({}, \"\".concat(prefixCls), true);\n\n    var tagItems = filterEmpty(this.$slots.default);\n    return h(\"div\", {\n      \"class\": classString\n    }, [this.renderCheckAll(), this.renderTags(tagItems)]);\n  }\n};",{"version":3,"sources":["/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/components/TagSelect/index.jsx"],"names":["PropTypes","Option","filterEmpty","name","model","prop","event","props","prefixCls","type","String","default","defaultValue","array","value","expandable","Boolean","hideCheckAll","data","expand","localCheckAll","items","getItemsKey","$slots","val","methods","onChange","checked","key","Object","keys","filter","bool","values","lastIndexOf","onCheckAll","forEach","v","totalItem","item","componentOptions","propsData","renderCheckAll","renderExpandable","renderTags","listeners","change","$emit","map","vnode","options","render","$props","classString","tagItems"],"mappings":"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","sourcesContent":["import PropTypes from 'ant-design-vue/es/_util/vue-types'\nimport Option from './TagSelectOption.jsx'\nimport { filterEmpty } from '@/components/_util/util'\n\nexport default {\n  Option,\n  name: 'TagSelect',\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'ant-pro-tag-select'\n    },\n    defaultValue: {\n      type: PropTypes.array,\n      default: null\n    },\n    value: {\n      type: PropTypes.array,\n      default: null\n    },\n    expandable: {\n      type: Boolean,\n      default: false\n    },\n    hideCheckAll: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      expand: false,\n      localCheckAll: false,\n      items: this.getItemsKey(filterEmpty(this.$slots.default)),\n      val: this.value || this.defaultValue || []\n    }\n  },\n  methods: {\n    onChange (checked) {\n      const key = Object.keys(this.items).filter(key => key === checked.value)\n      this.items[key] = checked.checked\n      const bool = Object.values(this.items).lastIndexOf(false)\n      if (bool === -1) {\n        this.localCheckAll = true\n      } else {\n        this.localCheckAll = false\n      }\n    },\n    onCheckAll (checked) {\n      Object.keys(this.items).forEach(v => {\n        this.items[v] = checked.checked\n      })\n      this.localCheckAll = checked.checked\n    },\n    getItemsKey (items) {\n      const totalItem = {}\n      items.forEach(item => {\n        totalItem[item.componentOptions.propsData && item.componentOptions.propsData.value] = false\n      })\n      return totalItem\n    },\n    // CheckAll Button\n    renderCheckAll () {\n      return !this.hideCheckAll && (<Option key={'total'} checked={this.localCheckAll} onChange={this.onCheckAll}>All</Option>) || null\n    },\n    // expandable\n    renderExpandable () {\n\n    },\n    // render option\n    renderTags (items) {\n      const listeners = {\n        change: (checked) => {\n          this.onChange(checked)\n          this.$emit('change', checked)\n        }\n      }\n\n      return items.map(vnode => {\n        const options = vnode.componentOptions\n        options.listeners = listeners\n        return vnode\n      })\n    }\n  },\n  render () {\n    const { $props: { prefixCls } } = this\n    const classString = {\n      [`${prefixCls}`]: true\n    }\n    const tagItems = filterEmpty(this.$slots.default)\n    return (\n      <div class={classString}>\n        {this.renderCheckAll()}\n        {this.renderTags(tagItems)}\n      </div>\n    )\n  }\n}\n"]}]}