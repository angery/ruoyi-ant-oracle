{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcDefList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcDefList.vue","mtime":1581492640526},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { getProfList, delProf, diagram, modelXml, processState } from '@/api/activiti'\nimport { checkPermission } from '@/utils/permissions'\n\nexport default {\n  name: 'ProfList',\n  components: {\n    STable\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '流程定义key',\n          dataIndex: 'key'\n        },\n        {\n          title: '版本',\n          dataIndex: 'version'\n        },\n        {\n          title: '部署ID',\n          dataIndex: 'deploymentId'\n        },\n        {\n          title: '资源名称',\n          dataIndex: 'resourceName',\n          scopedSlots: { customRender: 'resourceName' }\n        },\n        {\n          title: '流程图名称',\n          dataIndex: 'dgrmResourceName',\n          scopedSlots: { customRender: 'dgrmResourceName' }\n        },\n        {\n          title: '操作',\n          width: '200px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getProfList(Object.assign(parameter, this.queryParam))\n      },\n      previewVisible: false,\n      previewImage: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('activiti:prof:add'),\n      editEnabel: checkPermission('activiti:prof:edit'),\n      removeEnable: checkPermission('activiti:prof:remove')\n    }\n  },\n  computed: {\n    rowSelection () {\n      return {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: this.onSelectChange,\n        getCheckboxProps: record => ({\n          // props: {\n          //   disabled: record.deploymentId, // Column configuration not to be checked\n          //   name: record.name\n          // }\n        })\n      }\n    }\n  },\n  filters: {\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleNode (procDefId) {\n      this.$router.push({ name: 'procDefNode', query: { procDefId: procDefId } })\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    dataModal (dictType) {\n      this.$refs.datamodal.show(dictType)\n    },\n    previewCancel () {\n      this.previewVisible = false\n    },\n    handleShowImage (did) {\n      diagram(did).then(res => {\n        const raw = res.data\n        this.previewImage = URL.createObjectURL(raw)\n      })\n      this.previewVisible = true\n    },\n    handleModelXml (record) {\n      modelXml(record.deploymentId).then(res => {\n        const aLink = document.createElement('a')\n        var blob = new Blob([res.data], { type: 'application/xml' })\n        var fileName = record.resourceName\n        aLink.href = URL.createObjectURL(blob)\n        aLink.setAttribute('download', fileName) // 设置下载文件名称\n        document.body.appendChild(aLink)\n        aLink.click()\n        document.body.removeChild(aLink)\n        window.URL.revokeObjectURL(aLink.href)\n      })\n    },\n    handleState (record) {\n      const state = record.suspensionState === 1 ? 'suspend' : 'active'\n      processState(record.id, state).then(res => {\n        if (res.code === 0) {\n          record.suspensionState = record.suspensionState === 1 ? 2 : 1\n        }\n      })\n    },\n    delByIds (ids) {\n      delProf({ ids: ids.join(',') }).then(res => {\n        if (res.code === 0) {\n          this.$message.success(`删除成功`)\n          this.handleOk()\n          this.selectedRowKeys = []\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n",{"version":3,"sources":["ProcDefList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"ProcDefList.vue","sourceRoot":"src/views/activiti","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"流程定义key\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.key\" allowClear/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"8\" :sm=\"24\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-button v-if=\"removeEnable\" :disabled=\"selectedRowKeys.length===0\" type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"deploymentId\"\n      :rowSelection=\"rowSelection\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n    >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">\n        {{ index + 1 }}\n      </span>\n      <span slot=\"resourceName\" slot-scope=\"text, record\">\n        <a @click=\"handleModelXml(record)\">{{ text }}</a>\n      </span>\n      <span slot=\"dgrmResourceName\" slot-scope=\"text, record\">\n        <a @click=\"handleShowImage(record.deploymentId)\">{{ text }}</a>\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n\n        <a-popconfirm\n          placement=\"topRight\"\n          title=\"该操作会一并 激活/挂起 所有流程实例?\"\n          @confirm=\"handleState(record)\"\n          okText=\"是\"\n          cancelText=\"否\"\n          v-if=\"editEnabel\"\n        >\n          <a-icon slot=\"icon\" type=\"question-circle-o\" style=\"color: red\" />\n          <a >{{ record.suspensionState===1?'挂起':'激活' }}</a>\n        </a-popconfirm>\n        <a-divider v-if=\"editEnabel\" type=\"vertical\" />\n        <a v-if=\"editEnabel\" @click=\"handleNode(record.id)\">节点配置</a>\n        <a-divider v-if=\"removeEnable\" type=\"vertical\" />\n        <a v-if=\"removeEnable\" @click=\"delByIds([record.deploymentId])\">删除</a>\n      </span>\n    </s-table>\n    <a-modal :visible=\"previewVisible\" :width=\"900\" :footer=\"null\" @cancel=\"previewCancel\">\n      <img style=\"width: 100%\" :src=\"previewImage\" />\n    </a-modal>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getProfList, delProf, diagram, modelXml, processState } from '@/api/activiti'\nimport { checkPermission } from '@/utils/permissions'\n\nexport default {\n  name: 'ProfList',\n  components: {\n    STable\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '流程定义key',\n          dataIndex: 'key'\n        },\n        {\n          title: '版本',\n          dataIndex: 'version'\n        },\n        {\n          title: '部署ID',\n          dataIndex: 'deploymentId'\n        },\n        {\n          title: '资源名称',\n          dataIndex: 'resourceName',\n          scopedSlots: { customRender: 'resourceName' }\n        },\n        {\n          title: '流程图名称',\n          dataIndex: 'dgrmResourceName',\n          scopedSlots: { customRender: 'dgrmResourceName' }\n        },\n        {\n          title: '操作',\n          width: '200px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getProfList(Object.assign(parameter, this.queryParam))\n      },\n      previewVisible: false,\n      previewImage: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('activiti:prof:add'),\n      editEnabel: checkPermission('activiti:prof:edit'),\n      removeEnable: checkPermission('activiti:prof:remove')\n    }\n  },\n  computed: {\n    rowSelection () {\n      return {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: this.onSelectChange,\n        getCheckboxProps: record => ({\n          // props: {\n          //   disabled: record.deploymentId, // Column configuration not to be checked\n          //   name: record.name\n          // }\n        })\n      }\n    }\n  },\n  filters: {\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleNode (procDefId) {\n      this.$router.push({ name: 'procDefNode', query: { procDefId: procDefId } })\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    dataModal (dictType) {\n      this.$refs.datamodal.show(dictType)\n    },\n    previewCancel () {\n      this.previewVisible = false\n    },\n    handleShowImage (did) {\n      diagram(did).then(res => {\n        const raw = res.data\n        this.previewImage = URL.createObjectURL(raw)\n      })\n      this.previewVisible = true\n    },\n    handleModelXml (record) {\n      modelXml(record.deploymentId).then(res => {\n        const aLink = document.createElement('a')\n        var blob = new Blob([res.data], { type: 'application/xml' })\n        var fileName = record.resourceName\n        aLink.href = URL.createObjectURL(blob)\n        aLink.setAttribute('download', fileName) // 设置下载文件名称\n        document.body.appendChild(aLink)\n        aLink.click()\n        document.body.removeChild(aLink)\n        window.URL.revokeObjectURL(aLink.href)\n      })\n    },\n    handleState (record) {\n      const state = record.suspensionState === 1 ? 'suspend' : 'active'\n      processState(record.id, state).then(res => {\n        if (res.code === 0) {\n          record.suspensionState = record.suspensionState === 1 ? 2 : 1\n        }\n      })\n    },\n    delByIds (ids) {\n      delProf({ ids: ids.join(',') }).then(res => {\n        if (res.code === 0) {\n          this.$message.success(`删除成功`)\n          this.handleOk()\n          this.selectedRowKeys = []\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"]}]}