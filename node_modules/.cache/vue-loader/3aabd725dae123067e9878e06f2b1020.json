{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/list/modules/StepByStepModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/list/modules/StepByStepModal.vue","mtime":1581492640538},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\n\nconst stepForms = [\n  ['name', 'desc'],\n  ['target', 'template', 'type'],\n  ['time', 'frequency']\n]\n\nexport default {\n  name: 'StepByStepModal',\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      currentStep: 0,\n      mdl: {},\n\n      form: this.$form.createForm(this)\n    }\n  },\n  methods: {\n    edit (record) {\n      this.visible = true\n      const { form: { setFieldsValue } } = this\n      this.$nextTick(() => {\n        setFieldsValue(pick(record, []))\n      })\n    },\n    handleNext (step) {\n      const { form: { validateFields } } = this\n      const currentStep = step + 1\n      if (currentStep <= 2) {\n        // stepForms\n        validateFields(stepForms[ this.currentStep ], (errors, values) => {\n          if (!errors) {\n            this.currentStep = currentStep\n          }\n        })\n        return\n      }\n      // last step\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        console.log('errors:', errors, 'val:', values)\n        if (!errors) {\n          console.log('values:', values)\n          setTimeout(() => {\n            this.confirmLoading = false\n            this.$emit('ok', values)\n          }, 1500)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    backward () {\n      this.currentStep--\n    },\n    handleCancel () {\n      // clear form & currentStep\n      this.visible = false\n      this.currentStep = 0\n    }\n  }\n}\n",{"version":3,"sources":["StepByStepModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StepByStepModal.vue","sourceRoot":"src/views/list/modules","sourcesContent":["<template>\n  <a-modal\n    title=\"分步对话框\"\n    :width=\"640\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @cancel=\"handleCancel\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-steps :current=\"currentStep\" :style=\"{ marginBottom: '28px' }\" size=\"small\">\n        <a-step title=\"基本信息\" />\n        <a-step title=\"配置规则属性\" />\n        <a-step title=\"设定调度周期\" />\n      </a-steps>\n      <a-form :form=\"form\">\n        <!-- step1 -->\n        <div v-show=\"currentStep === 0\">\n          <a-form-item\n            label=\"规则名称\"\n            :labelCol=\"labelCol\"\n            :wrapperCol=\"wrapperCol\"\n          >\n            <a-input v-decorator=\"['name', {rules: [{required: true}]}]\" />\n          </a-form-item>\n          <a-form-item\n            label=\"规则描述\"\n            :labelCol=\"labelCol\"\n            :wrapperCol=\"wrapperCol\"\n          >\n            <a-textarea :rows=\"4\" v-decorator=\"['desc', {rules: [{required: true}]}]\"></a-textarea>\n          </a-form-item>\n        </div>\n        <div v-show=\"currentStep === 1\">\n          <a-form-item\n            label=\"监控对象\"\n            :labelCol=\"labelCol\"\n            :wrapperCol=\"wrapperCol\"\n          >\n            <a-select v-decorator=\"['target', {initialValue: 0, rules: [{required: true}]}]\" style=\"width: 100%\">\n              <a-select-option :value=\"0\">表一</a-select-option>\n              <a-select-option :value=\"1\">表二</a-select-option>\n            </a-select>\n          </a-form-item>\n\n          <a-form-item\n            label=\"规则模板\"\n            :labelCol=\"labelCol\"\n            :wrapperCol=\"wrapperCol\"\n          >\n            <a-select v-decorator=\"['template', { initialValue: 0, rules: [{required: true}]}]\" style=\"width: 100%\">\n              <a-select-option :value=\"0\">规则模板一</a-select-option>\n              <a-select-option :value=\"1\">规则模板二</a-select-option>\n            </a-select>\n          </a-form-item>\n\n          <a-form-item\n            label=\"规则类型\"\n            :labelCol=\"labelCol\"\n            :wrapperCol=\"wrapperCol\"\n          >\n            <a-radio-group v-decorator=\"['type', {initialValue: 0, rules: [{required: true}]}]\" style=\"width: 100%\">\n              <a-radio :value=\"0\">强</a-radio>\n              <a-radio :value=\"1\">弱</a-radio>\n            </a-radio-group>\n          </a-form-item>\n        </div>\n\n        <div v-show=\"currentStep === 2\">\n          <a-form-item\n            label=\"开始时间\"\n            :labelCol=\"labelCol\"\n            :wrapperCol=\"wrapperCol\"\n          >\n            <a-date-picker v-decorator=\"['time', {rules: [{ type: 'object', required: true, message: 'Please select time!' }]}]\" style=\"width: 100%\" />\n          </a-form-item>\n          <a-form-item\n            label=\"调度周期\"\n            :labelCol=\"labelCol\"\n            :wrapperCol=\"wrapperCol\"\n          >\n            <a-select v-decorator=\"['frequency', { initialValue: 'month', rules: [{required: true}]}]\" style=\"width: 100%\">\n              <a-select-option value=\"month\">月</a-select-option>\n              <a-select-option value=\"week\">周</a-select-option>\n            </a-select>\n          </a-form-item>\n        </div>\n        <!-- step1 end -->\n      </a-form>\n    </a-spin>\n    <template slot=\"footer\">\n      <a-button key=\"back\" @click=\"backward\" v-if=\"currentStep > 0\" :style=\"{ float: 'left' }\" >上一步</a-button>\n      <a-button key=\"cancel\" @click=\"handleCancel\">取消</a-button>\n      <a-button key=\"forward\" :loading=\"confirmLoading\" type=\"primary\" @click=\"handleNext(currentStep)\">{{ currentStep === 2 && '完成' || '下一步' }}</a-button>\n    </template>\n  </a-modal>\n</template>\n\n<script>\nimport pick from 'lodash.pick'\n\nconst stepForms = [\n  ['name', 'desc'],\n  ['target', 'template', 'type'],\n  ['time', 'frequency']\n]\n\nexport default {\n  name: 'StepByStepModal',\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n      visible: false,\n      confirmLoading: false,\n      currentStep: 0,\n      mdl: {},\n\n      form: this.$form.createForm(this)\n    }\n  },\n  methods: {\n    edit (record) {\n      this.visible = true\n      const { form: { setFieldsValue } } = this\n      this.$nextTick(() => {\n        setFieldsValue(pick(record, []))\n      })\n    },\n    handleNext (step) {\n      const { form: { validateFields } } = this\n      const currentStep = step + 1\n      if (currentStep <= 2) {\n        // stepForms\n        validateFields(stepForms[ this.currentStep ], (errors, values) => {\n          if (!errors) {\n            this.currentStep = currentStep\n          }\n        })\n        return\n      }\n      // last step\n      this.confirmLoading = true\n      validateFields((errors, values) => {\n        console.log('errors:', errors, 'val:', values)\n        if (!errors) {\n          console.log('values:', values)\n          setTimeout(() => {\n            this.confirmLoading = false\n            this.$emit('ok', values)\n          }, 1500)\n        } else {\n          this.confirmLoading = false\n        }\n      })\n    },\n    backward () {\n      this.currentStep--\n    },\n    handleCancel () {\n      // clear form & currentStep\n      this.visible = false\n      this.currentStep = 0\n    }\n  }\n}\n</script>\n"]}]}