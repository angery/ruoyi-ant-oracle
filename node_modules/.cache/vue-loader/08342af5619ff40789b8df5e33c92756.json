{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/RoleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/RoleModal.vue","mtime":1581586557926},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPermissions, getRolePermIds, saveRole } from '@/api/system'\nimport pick from 'lodash.pick'\n\nexport default {\n  name: 'RoleModal',\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      visible: false,\n      confirmLoading: false,\n      mdl: {},\n\n      form: this.$form.createForm(this),\n      permissions: [],\n      treeCheck: false,\n      pidSet: [],\n      checkedKeys: [],\n      halfCheckedKeys: []\n    }\n  },\n  created () {\n    this.loadPermissions()\n  },\n  methods: {\n    add () {\n      this.form.resetFields()\n      this.checkedKeys = []\n      this.pidSet = []\n      this.edit({ })\n    },\n    edit (record) {\n      if (record.roleId) {\n        getRolePermIds(record.roleId).then(res => {\n          const pidSet = new Set(res.map(m => m.parentId).filter(id => id > 0))\n          this.pidSet = pidSet\n          // 因为antd 树插件勾选父节点会导致所有子节点选中,所以过滤所有父节点\n          this.checkedKeys = res.map(m => m.menuId).filter(id => !pidSet.has(id))\n        })\n      }\n      this.mdl = Object.assign({}, record)\n      // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n      this.treeCheck = false\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.mdl, 'roleId', 'roleName', 'status', 'roleSort', 'roleKey'))\n        // this.form.setFieldsValue(...record)\n      })\n    },\n    close () {\n      this.$emit('close')\n      this.visible = false\n    },\n    onExpand (expandedKeys) {\n      console.log('onExpand', expandedKeys)\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    onCheck (checkedKeys, info) {\n      if (!this.treeCheck) this.treeCheck = true\n      console.log('onCheck', info)\n      this.checkedKeys = checkedKeys\n      this.halfCheckedKeys = info.halfCheckedKeys\n    },\n    onSelect (selectedKeys, info) {\n      console.log('onSelect', info)\n      this.selectedKeys = selectedKeys\n    },\n    loadPermissions () {\n      getPermissions().then(res => {\n        this.buildtree(res.rows, this.permissions, '0')\n      })\n    },\n    buildtree (list, permissions, parentId) {\n      list.forEach(item => {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.menuId,\n            title: item.menuName,\n            children: []\n          }\n          this.buildtree(list, child.children, item.menuId)\n          permissions.push(child)\n        }\n      })\n    },\n    handleOk (e) {\n      const _this = this\n      // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n      const checkedAll = this.treeCheck ? _this.checkedKeys.concat(_this.halfCheckedKeys) : _this.checkedKeys.concat(Array.from(_this.pidSet))\n      if (!checkedAll.length > 0) {\n        _this.$message.warning('请至少选择一个权限')\n        return\n      }\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        // 验证表单没错误\n        if (!err) {\n          values.menuIds = checkedAll\n          _this.confirmLoading = true\n          saveRole(Object.assign(values)).then(res => {\n            if (res.code === 0) {\n              _this.$message.success('保存成功')\n              _this.$emit('ok')\n              _this.visible = false\n            } else {\n              _this.$message.warning(res.msg)\n            }\n          }).catch(() => {\n            _this.$message.error('系统错误，请稍后再试')\n          }).finally(() => {\n            _this.confirmLoading = false\n          })\n        }\n      })\n    },\n    handleCancel () {\n      this.confirmLoading = false\n      this.visible = false\n    }\n\n  }\n}\n",{"version":3,"sources":["RoleModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"RoleModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    title=\"操作\"\n    style=\"top: 20px;\"\n    :width=\"900\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n  >\n    <a-form :form=\"form\">\n\n      <a-form-item style=\"display:none\">\n        <a-input v-decorator=\"['roleId']\"/>\n      </a-form-item>\n\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"角色名称\"\n      >\n        <a-input\n          v-decorator=\"[\n            'roleName',\n            {\n              rules: [{ required: true, message: '请输入角色名称' },{ min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }]\n            }\n          ]\"\n          placeholder=\"起一个名字\"/>\n      </a-form-item>\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"权限字符\"\n      >\n        <a-input\n          v-decorator=\"['roleKey',{rules: [{ required: true, message: '请输入权限字符' },{ min: 1, max: 100, message: '长度在 1 到 30 个字符', trigger: 'blur' }]}]\"\n          placeholder=\"权限字符\"/>\n      </a-form-item>\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"显示顺序\"\n      >\n        <a-input-number v-decorator=\"['roleSort', {initialValue:'0',rules: [{ required: true, message: '请输入序号' },{ min: 0, max: 11, message: '长度在 0 到 11 个字符', trigger: 'blur' }]}]\" placeholder=\"显示顺序\" style=\"width:100%;\" />\n\n      </a-form-item>\n\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"状态\"\n      >\n        <a-select v-decorator=\"['status', {initialValue:'0',rules: [{ required: true, message: '请选择状态' }]}]\">\n          <a-select-option :value=\"'0'\">正常</a-select-option>\n          <a-select-option :value=\"'1'\">禁用</a-select-option>\n        </a-select>\n      </a-form-item>\n\n      <a-divider />\n      <a-form-item\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n        label=\"拥有权限\"\n      >\n\n        <!-- v-decorator=\"['parentId',{initialValue:'0'}]\" -->\n        <!-- <a-tree\n          checkable\n          autoExpandParent\n          @expand=\"onExpand\"\n          :expandedKeys=\"expandedKeys\"\n          v-model=\"checkedKeys\"\n          @select=\"onSelect\"\n          @check=\"onCheck\"\n          :selectedKeys=\"selectedKeys\"\n          :checkedKeys=\"checkedKeys\"\n          :treeData=\"permissions\"\n        > -->\n        <a-tree\n          checkable\n          v-model=\"checkedKeys\"\n          @check=\"onCheck\"\n          :treeData=\"permissions\"\n        >\n        </a-tree>\n      </a-form-item>\n    </a-form>\n\n  </a-modal>\n</template>\n\n<script>\nimport { getPermissions, getRolePermIds, saveRole } from '@/api/system'\nimport pick from 'lodash.pick'\n\nexport default {\n  name: 'RoleModal',\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      visible: false,\n      confirmLoading: false,\n      mdl: {},\n\n      form: this.$form.createForm(this),\n      permissions: [],\n      treeCheck: false,\n      pidSet: [],\n      checkedKeys: [],\n      halfCheckedKeys: []\n    }\n  },\n  created () {\n    this.loadPermissions()\n  },\n  methods: {\n    add () {\n      this.form.resetFields()\n      this.checkedKeys = []\n      this.pidSet = []\n      this.edit({ })\n    },\n    edit (record) {\n      if (record.roleId) {\n        getRolePermIds(record.roleId).then(res => {\n          const pidSet = new Set(res.map(m => m.parentId).filter(id => id > 0))\n          this.pidSet = pidSet\n          // 因为antd 树插件勾选父节点会导致所有子节点选中,所以过滤所有父节点\n          this.checkedKeys = res.map(m => m.menuId).filter(id => !pidSet.has(id))\n        })\n      }\n      this.mdl = Object.assign({}, record)\n      // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n      this.treeCheck = false\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.mdl, 'roleId', 'roleName', 'status', 'roleSort', 'roleKey'))\n        // this.form.setFieldsValue(...record)\n      })\n    },\n    close () {\n      this.$emit('close')\n      this.visible = false\n    },\n    onExpand (expandedKeys) {\n      console.log('onExpand', expandedKeys)\n      this.expandedKeys = expandedKeys\n      this.autoExpandParent = false\n    },\n    onCheck (checkedKeys, info) {\n      if (!this.treeCheck) this.treeCheck = true\n      console.log('onCheck', info)\n      this.checkedKeys = checkedKeys\n      this.halfCheckedKeys = info.halfCheckedKeys\n    },\n    onSelect (selectedKeys, info) {\n      console.log('onSelect', info)\n      this.selectedKeys = selectedKeys\n    },\n    loadPermissions () {\n      getPermissions().then(res => {\n        this.buildtree(res.rows, this.permissions, '0')\n      })\n    },\n    buildtree (list, permissions, parentId) {\n      list.forEach(item => {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.menuId,\n            title: item.menuName,\n            children: []\n          }\n          this.buildtree(list, child.children, item.menuId)\n          permissions.push(child)\n        }\n      })\n    },\n    handleOk (e) {\n      const _this = this\n      // 如果没有check过，半选节点是拿不到的，只能通过预先设置的pidSet获取\n      const checkedAll = this.treeCheck ? _this.checkedKeys.concat(_this.halfCheckedKeys) : _this.checkedKeys.concat(Array.from(_this.pidSet))\n      if (!checkedAll.length > 0) {\n        _this.$message.warning('请至少选择一个权限')\n        return\n      }\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        // 验证表单没错误\n        if (!err) {\n          values.menuIds = checkedAll\n          _this.confirmLoading = true\n          saveRole(Object.assign(values)).then(res => {\n            if (res.code === 0) {\n              _this.$message.success('保存成功')\n              _this.$emit('ok')\n              _this.visible = false\n            } else {\n              _this.$message.warning(res.msg)\n            }\n          }).catch(() => {\n            _this.$message.error('系统错误，请稍后再试')\n          }).finally(() => {\n            _this.confirmLoading = false\n          })\n        }\n      })\n    },\n    handleCancel () {\n      this.confirmLoading = false\n      this.visible = false\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}