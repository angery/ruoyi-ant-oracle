{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/list/modules/TaskForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/list/modules/TaskForm.vue","mtime":1581492640538},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'TaskForm',\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n\n      visible: false,\n      form: this.$form.createForm(this)\n    }\n  },\n  methods: {\n    add () {\n      this.visible = true\n    },\n    edit (record) {\n      const { form: { setFieldsValue } } = this\n      this.visible = true\n      this.$nextTick(() => {\n        setFieldsValue({ taskName: 'test' })\n      })\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.visible = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["TaskForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TaskForm.vue","sourceRoot":"src/views/list/modules","sourcesContent":["<template>\n  <a-modal :width=\"640\" :visible=\"visible\" title=\"任务添加\" @ok=\"handleSubmit\" @cancel=\"visible = false\">\n    <a-form @submit=\"handleSubmit\" :form=\"form\">\n      <a-form-item\n        label=\"任务名称\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n      >\n        <a-input v-decorator=\"['taskName', {rules:[{required: true, message: '请输入任务名称'}]}]\" />\n      </a-form-item>\n      <a-form-item\n        label=\"开始时间\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n      >\n        <a-date-picker style=\"width: 100%\" v-decorator=\"['startTime', {rules:[{required: true, message: '请选择开始时间'}]}]\" />\n      </a-form-item>\n      <a-form-item\n        label=\"任务负责人\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n      >\n        <a-select v-decorator=\"['owner', {rules:[{required: true, message: '请选择开始时间'}]}]\">\n          <a-select-option :value=\"0\">付晓晓</a-select-option>\n          <a-select-option :value=\"1\">周毛毛</a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-form-item\n        label=\"产品描述\"\n        :labelCol=\"labelCol\"\n        :wrapperCol=\"wrapperCol\"\n      >\n        <a-textarea v-decorator=\"['desc']\"></a-textarea>\n      </a-form-item>\n    </a-form>\n  </a-modal>\n</template>\n\n<script>\nexport default {\n  name: 'TaskForm',\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 7 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 13 }\n      },\n\n      visible: false,\n      form: this.$form.createForm(this)\n    }\n  },\n  methods: {\n    add () {\n      this.visible = true\n    },\n    edit (record) {\n      const { form: { setFieldsValue } } = this\n      this.visible = true\n      this.$nextTick(() => {\n        setFieldsValue({ taskName: 'test' })\n      })\n    },\n    handleSubmit () {\n      const { form: { validateFields } } = this\n      this.visible = true\n      validateFields((errors, values) => {\n        if (!errors) {\n          console.log('values', values)\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}