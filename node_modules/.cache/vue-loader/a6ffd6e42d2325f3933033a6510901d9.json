{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/Tasking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/Tasking.vue","mtime":1581492640528},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { getTasking, auditTaskBatch, modalMap } from '@/api/activiti'\nimport LeaveModal from './modules/LeaveModal.vue'\nimport PurchaseModal from './modules/PurchaseModal.vue'\nimport ProcFlowModal from './modules/ProcFlowModal.vue'\nexport default {\n  name: 'Tasking',\n  components: {\n    STable,\n    LeaveModal,\n    ProcFlowModal,\n    PurchaseModal\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '流程标题',\n          dataIndex: 'processName'\n        },\n        {\n          title: '所属流程',\n          dataIndex: 'processDefName'\n        },\n        {\n          title: '节点名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '申请人',\n          dataIndex: 'applyer'\n        },\n        {\n          title: '状态',\n          dataIndex: 'suspended',\n          scopedSlots: { customRender: 'suspended' }\n        },\n        {\n          title: '操作',\n          width: '150px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getTasking(Object.assign(parameter, this.queryParam))\n      },\n      previewVisible: false,\n      previewImage: '',\n      selectedRowKeys: [],\n      selectedRows: []\n    }\n  },\n  computed: {\n    rowSelection () {\n      return {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: this.onSelectChange,\n        getCheckboxProps: record => ({\n          props: {\n            disabled: record.suspended // Column configuration not to be checked\n          }\n        })\n      }\n    }\n  },\n  filters: {\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    handFlow (procInstId) {\n      this.$refs.modal.show(procInstId)\n    },\n    handelAudit (record) {\n      const modal = modalMap[record.processDefKey]\n      this.$refs[modal].show(record)\n    },\n    handelAuditBatch (taskIds, result) {\n      auditTaskBatch({ taskIds: taskIds, result: result }).then(res => {\n        if (res.code === 0) {\n          this.handleOk()\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n",{"version":3,"sources":["Tasking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Tasking.vue","sourceRoot":"src/views/activiti","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"流程定义key\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.processDefKey\" allowClear/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"8\" :sm=\"24\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-button :disabled=\"selectedRowKeys.length===0\" type=\"primary\" icon=\"check\" @click=\"handelAuditBatch(selectedRowKeys,2)\">批量同意</a-button>\n      <a-button :disabled=\"selectedRowKeys.length===0\" icon=\"close\" @click=\"handelAuditBatch(selectedRowKeys,3)\">批量驳回</a-button>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"id\"\n      :rowSelection=\"rowSelection\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n    >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">\n        {{ index + 1 }}\n      </span>\n      <span slot=\"suspended\" slot-scope=\"text\">\n        <a-badge :status=\"text?'error':'processing'\" :text=\"text?'挂起':'激活'\" />\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <!-- <a-divider v-if=\"editEnabel\" type=\"vertical\" />\n        <a v-if=\"editEnabel\" @click=\"handleEdit(record.id)\">编辑</a> -->\n        <a @click=\"handelAudit(record)\" :disabled=\"record.suspended\">审批</a>\n        <a-divider type=\"vertical\" />\n        <a @click=\"handFlow(record.procInstId)\">历史</a>\n      </span>\n    </s-table>\n    <leave-modal ref=\"leavemodal\" @ok=\"handleOk\"/>\n    <purchase-modal ref=\"purchasemodal\" @ok=\"handleOk\"/>\n    <proc-flow-modal ref=\"modal\" @ok=\"handleOk\"/>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getTasking, auditTaskBatch, modalMap } from '@/api/activiti'\nimport LeaveModal from './modules/LeaveModal.vue'\nimport PurchaseModal from './modules/PurchaseModal.vue'\nimport ProcFlowModal from './modules/ProcFlowModal.vue'\nexport default {\n  name: 'Tasking',\n  components: {\n    STable,\n    LeaveModal,\n    ProcFlowModal,\n    PurchaseModal\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '#',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '流程标题',\n          dataIndex: 'processName'\n        },\n        {\n          title: '所属流程',\n          dataIndex: 'processDefName'\n        },\n        {\n          title: '节点名称',\n          dataIndex: 'name'\n        },\n        {\n          title: '申请人',\n          dataIndex: 'applyer'\n        },\n        {\n          title: '状态',\n          dataIndex: 'suspended',\n          scopedSlots: { customRender: 'suspended' }\n        },\n        {\n          title: '操作',\n          width: '150px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getTasking(Object.assign(parameter, this.queryParam))\n      },\n      previewVisible: false,\n      previewImage: '',\n      selectedRowKeys: [],\n      selectedRows: []\n    }\n  },\n  computed: {\n    rowSelection () {\n      return {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: this.onSelectChange,\n        getCheckboxProps: record => ({\n          props: {\n            disabled: record.suspended // Column configuration not to be checked\n          }\n        })\n      }\n    }\n  },\n  filters: {\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    handFlow (procInstId) {\n      this.$refs.modal.show(procInstId)\n    },\n    handelAudit (record) {\n      const modal = modalMap[record.processDefKey]\n      this.$refs[modal].show(record)\n    },\n    handelAuditBatch (taskIds, result) {\n      auditTaskBatch({ taskIds: taskIds, result: result }).then(res => {\n        if (res.code === 0) {\n          this.handleOk()\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"]}]}