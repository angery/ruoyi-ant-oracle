{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/monitor/LoginLogList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/monitor/LoginLogList.vue","mtime":1581650251435},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { getLoginLogList, delLoginLog, cleanLoginLog } from '@/api/monitor'\n// import { getLoginLogList } from '@/api/monitor'\nimport { getDictArray } from '../../utils/dict'\nconst commonStatusMap = {}\nexport default {\n  name: 'TableList',\n  components: {\n    STable\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '登录名称',\n          dataIndex: 'loginName'\n        },\n        {\n          title: '登录地址',\n          dataIndex: 'ipaddr'\n        },\n        {\n          title: '登录地点',\n          dataIndex: 'loginLocation'\n        },\n        {\n          title: '浏览器',\n          dataIndex: 'browser'\n        },\n        {\n          title: '操作系统',\n          dataIndex: 'os'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '操作信息',\n          dataIndex: 'msg'\n        },\n        {\n          title: '操作时间',\n          dataIndex: 'loginTime',\n          sorter: true\n        }\n      ],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getLoginLogList(Object.assign(parameter, this.queryParam))\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: []\n\n    }\n  },\n  filters: {\n    operTypeFilter (type) {\n      return commonStatusMap[type].text\n    },\n    statusFilter (status) {\n      const statusMap = {\n        '1': '失败',\n        '0': '成功'\n      }\n      return statusMap[status]\n    }\n  },\n  beforeCreate () {\n\n  },\n  async created () {\n    this.commonStatus = await getDictArray('sys_common_status')\n    this.commonStatus.map(d => {\n      commonStatusMap[d.dictValue] = { text: d.dictLabel }\n    })\n  },\n  methods: {\n    onSelectChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delLoginLog({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    },\n    clean () {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          cleanLoginLog().then(res => {\n            this.handleOk()\n          })\n        },\n        onCancel () {\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n",{"version":3,"sources":["LoginLogList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"LoginLogList.vue","sourceRoot":"src/views/monitor","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"登陆地址\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.ipaddr\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"登陆名称\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.loginName\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\" :sm=\"12\">\n            <a-form-item label=\"登陆状态\">\n              <a-select placeholder=\"请选择\" v-model=\"queryParam.status\" default-value=\"0\">\n                <a-select-option :value=\"''\">全部</a-select-option>\n                <a-select-option v-for=\"(d, index) in commonStatus\" :key=\"index\" :value=\"d.dictValue\">{{ d.dictLabel }}</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"6\" :sm=\"18\">\n            <a-form-item label=\"登陆时间\">\n              <a-range-picker v-model=\"range\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\" :sm=\"12\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-popconfirm v-has=\"'monitor:loginlog:remove'\" title=\"确认清空吗？\" @confirm=\"clean\">\n        <a-icon slot=\"icon\" type=\"question-circle-o\" style=\"color: red\" />\n        <a-button type=\"danger\" ghost icon=\"close\">清空</a-button>\n      </a-popconfirm>\n      <a-dropdown v-has=\"'monitor:loginlog:remove'\" v-if=\"selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"infoId\"\n      :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      :rangPicker=\"range\"\n      defaultSort=\"loginTime\"\n    >\n      <span slot=\"status\" slot-scope=\"text\">\n        {{ text | statusFilter }}\n      </span>\n    </s-table>\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getLoginLogList, delLoginLog, cleanLoginLog } from '@/api/monitor'\n// import { getLoginLogList } from '@/api/monitor'\nimport { getDictArray } from '../../utils/dict'\nconst commonStatusMap = {}\nexport default {\n  name: 'TableList',\n  components: {\n    STable\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '登录名称',\n          dataIndex: 'loginName'\n        },\n        {\n          title: '登录地址',\n          dataIndex: 'ipaddr'\n        },\n        {\n          title: '登录地点',\n          dataIndex: 'loginLocation'\n        },\n        {\n          title: '浏览器',\n          dataIndex: 'browser'\n        },\n        {\n          title: '操作系统',\n          dataIndex: 'os'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '操作信息',\n          dataIndex: 'msg'\n        },\n        {\n          title: '操作时间',\n          dataIndex: 'loginTime',\n          sorter: true\n        }\n      ],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getLoginLogList(Object.assign(parameter, this.queryParam))\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: []\n\n    }\n  },\n  filters: {\n    operTypeFilter (type) {\n      return commonStatusMap[type].text\n    },\n    statusFilter (status) {\n      const statusMap = {\n        '1': '失败',\n        '0': '成功'\n      }\n      return statusMap[status]\n    }\n  },\n  beforeCreate () {\n\n  },\n  async created () {\n    this.commonStatus = await getDictArray('sys_common_status')\n    this.commonStatus.map(d => {\n      commonStatusMap[d.dictValue] = { text: d.dictLabel }\n    })\n  },\n  methods: {\n    onSelectChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delLoginLog({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    },\n    clean () {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          cleanLoginLog().then(res => {\n            this.handleOk()\n          })\n        },\n        onCancel () {\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"]}]}