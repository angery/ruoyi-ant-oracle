{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/DictDataListModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/system/modules/DictDataListModal.vue","mtime":1581645216352},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { getDictDataList, delDictData } from '@/api/system'\nimport DictDataModal from './DictDataModal.vue'\nimport { checkPermission } from '@/utils/permissions'\n\nconst statusMap = {\n  0: {\n    status: 'success',\n    text: '正常'\n  },\n  1: {\n    status: 'default',\n    text: '停用'\n  }\n}\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    DictDataModal\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: { },\n      // 表头\n      columns: [\n        {\n          title: '字典标签',\n          dataIndex: 'dictLabel'\n        },\n        {\n          title: '字典键值',\n          dataIndex: 'dictValue'\n        },\n        {\n          title: '字典排序',\n          dataIndex: 'dictSort'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        },\n        {\n          title: '操作',\n          width: '150px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getDictDataList(Object.assign(parameter, this.queryParam))\n      },\n      dictType: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:dict:add'),\n      editEnabel: checkPermission('system:dict:edit'),\n      removeEnable: checkPermission('system:dict:remove')\n    }\n  },\n  filters: {\n    statusFilter (type) {\n      return statusMap[type].text\n    },\n    statusTypeFilter (type) {\n      return statusMap[type].status\n    }\n  },\n  created () {\n  },\n  methods: {\n    show (dictType) {\n      this.visible = true\n      this.queryParam.dictType = dictType\n      this.dictType = dictType\n      this.$refs.table && this.$refs.table.refresh(true)\n    },\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleEdit (record) {\n      this.$refs.modal.edit(record)\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delDictData({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n",{"version":3,"sources":["DictDataListModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"DictDataListModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    title=\"字典数据\"\n    style=\"top: 20px;\"\n    :width=\"1100\"\n    v-model=\"visible\"\n    :footer=\"null\"\n  >\n    <div class=\"table-operator\">\n      <a-button v-if=\"addEnable\" type=\"primary\" icon=\"plus\" @click=\"$refs.modal.add(dictType)\">新建</a-button>\n      <a-dropdown v-if=\"removeEnable&&selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"dictCode\"\n      :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n    >\n      <span slot=\"status\" slot-scope=\"text\">\n        <a-badge :status=\"text | statusTypeFilter\" :text=\"text | statusFilter\" />\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a v-if=\"editEnabel\" @click=\"handleEdit(record)\">编辑</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"removeEnable\" @click=\"delByIds([record.dictCode])\">删除</a>\n      </span>\n    </s-table>\n    <dict-data-modal ref=\"modal\" @ok=\"handleOk\" />\n  </a-modal>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getDictDataList, delDictData } from '@/api/system'\nimport DictDataModal from './DictDataModal.vue'\nimport { checkPermission } from '@/utils/permissions'\n\nconst statusMap = {\n  0: {\n    status: 'success',\n    text: '正常'\n  },\n  1: {\n    status: 'default',\n    text: '停用'\n  }\n}\n\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    DictDataModal\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: { },\n      // 表头\n      columns: [\n        {\n          title: '字典标签',\n          dataIndex: 'dictLabel'\n        },\n        {\n          title: '字典键值',\n          dataIndex: 'dictValue'\n        },\n        {\n          title: '字典排序',\n          dataIndex: 'dictSort'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          scopedSlots: { customRender: 'status' }\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        },\n        {\n          title: '操作',\n          width: '150px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getDictDataList(Object.assign(parameter, this.queryParam))\n      },\n      dictType: '',\n      selectedRowKeys: [],\n      selectedRows: [],\n      addEnable: checkPermission('system:dict:add'),\n      editEnabel: checkPermission('system:dict:edit'),\n      removeEnable: checkPermission('system:dict:remove')\n    }\n  },\n  filters: {\n    statusFilter (type) {\n      return statusMap[type].text\n    },\n    statusTypeFilter (type) {\n      return statusMap[type].status\n    }\n  },\n  created () {\n  },\n  methods: {\n    show (dictType) {\n      this.visible = true\n      this.queryParam.dictType = dictType\n      this.dictType = dictType\n      this.$refs.table && this.$refs.table.refresh(true)\n    },\n    onSelectChange (selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys\n    },\n    handleEdit (record) {\n      this.$refs.modal.edit(record)\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n      console.log('handleSaveOk')\n    },\n    delByIds (ids) {\n      this.$confirm({\n        title: '提示',\n        content: '确定删除该条记录吗 ?',\n        onOk: () => {\n          delDictData({ ids: ids.join(',') }).then(res => {\n            if (res.code === 0) {\n              this.$message.success(`删除成功`)\n              this.handleOk()\n            } else {\n              this.$message.error(res.msg)\n            }\n            this.selectedRowKeys = []\n          })\n        },\n        onCancel () {\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"]}]}