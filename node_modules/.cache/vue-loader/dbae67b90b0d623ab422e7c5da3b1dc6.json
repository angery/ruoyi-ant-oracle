{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/user/Login.vue?vue&type=style&index=0&id=1ecd471f&lang=less&scoped=true&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/user/Login.vue","mtime":1581492640553},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/css-loader/index.js","mtime":1580791779396},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1580791779864},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/postcss-loader/src/index.js","mtime":1580791779716},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/less-loader/dist/cjs.js","mtime":1580791787081},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n\n  .forge-password {\n    font-size: 14px;\n  }\n\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color 0.3s;\n\n      &:hover {\n        color: #1890ff;\n      }\n    }\n\n    .register {\n      float: right;\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiTA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form\n      id=\"formLogin\"\n      class=\"user-layout-login\"\n      ref=\"formLogin\"\n      :form=\"form\"\n      @submit=\"handleSubmit\"\n    >\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\"\n      >\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登录\">\n          <a-alert v-if=\"isLoginError\" type=\"error\" showIcon style=\"margin-bottom: 24px;\" :message=\"errorMsg\" />\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              placeholder=\"账户: admin\"\n              v-decorator=\"[\n                'username',\n                {initialValue:'admin',rules: [{ required: true, message: '请输入帐户名或邮箱地址' }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"password\"\n              autocomplete=\"false\"\n              placeholder=\"密码: admin123\"\n              v-decorator=\"[\n                'password',\n                { initialValue:'admin123',rules: [{ required: true, message: '请输入密码' }], validateTrigger: 'blur'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input size=\"large\" type=\"text\" placeholder=\"验证码\" v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <img class=\"getCaptcha\" :src=\"codesrc\" @click=\"getImgCode\">\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n        <a-tab-pane key=\"tab2\" tab=\"手机号登录\">\n          <a-form-item>\n            <a-input size=\"large\" type=\"text\" placeholder=\"手机号\" v-decorator=\"['mobile', {rules: [{ required: true, pattern: /^1[34578]\\d{9}$/, message: '请输入正确的手机号' }], validateTrigger: 'change'}]\">\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input size=\"large\" type=\"text\" placeholder=\"验证码\" v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <a-button\n                class=\"getCaptcha\"\n                tabindex=\"-1\"\n                :disabled=\"state.smsSendBtn\"\n                @click.stop.prevent=\"getCaptcha\"\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"\n              ></a-button>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe']\">自动登录</a-checkbox>\n        <router-link\n          :to=\"{ name: 'recover', params: { user: 'aaa'} }\"\n          class=\"forge-password\"\n          style=\"float: right;\"\n        >忘记密码</router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"state.loginBtn\"\n          :disabled=\"state.loginBtn\"\n        >确定</a-button>\n      </a-form-item>\n\n      <div class=\"user-login-other\">\n        <span>其他登录方式</span>\n        <a>\n          <a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon>\n        </a>\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">注册账户</router-link>\n      </div>\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"\n    ></two-step-captcha>\n  </div>\n</template>\n\n<script>\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\n// eslint-disable-next-line no-unused-vars\nimport md5 from 'md5'\n// eslint-disable-next-line no-unused-vars\nimport { getSmsCaptcha, get2step, imgcode } from '@/api/login'\n\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n  data () {\n    return {\n      codesrc: null,\n      randomStr: null,\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      errorMsg: '',\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    }\n  },\n  created () {\n    // get2step({ })\n    //   .then(res => {\n    //     this.requiredTwoStepCaptcha = res.result.stepCode\n    //   })\n    //   .catch(() => {\n    //     this.requiredTwoStepCaptcha = false\n    //   })\n    // this.requiredTwoStepCaptcha = true\n    this.getImgCode()\n  },\n  methods: {\n    ...mapActions(['Login', 'Logout']),\n    // handler\n    handleUsernameOrEmail (rule, value, callback) {\n      const { state } = this\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\n      if (regex.test(value)) {\n        state.loginType = 0\n      } else {\n        state.loginType = 1\n      }\n      callback()\n    },\n    handleTabClick (key) {\n      this.customActiveKey = key\n      // this.form.resetFields()\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      const {\n        form: { validateFields },\n        state,\n        customActiveKey,\n        Login\n      } = this\n\n      state.loginBtn = true\n\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password', 'captcha'] : ['mobile', 'captcha']\n\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\n        if (!err) {\n          console.log('login form', values)\n          const loginParams = { ...values }\n          delete loginParams.username\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username\n          // loginParams.password = md5(values.password)\n          loginParams.randomStr = this.randomStr\n          Login(loginParams)\n            .then((res) => this.loginSuccess(res))\n            .catch(err => this.requestFailed(err))\n            .finally(() => {\n              state.loginBtn = false\n            })\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false\n          }, 600)\n        }\n      })\n    },\n    getCaptcha (e) {\n      e.preventDefault()\n      const { form: { validateFields }, state } = this\n\n      validateFields(['mobile'], { force: true }, (err, values) => {\n        if (!err) {\n          state.smsSendBtn = true\n\n          const interval = window.setInterval(() => {\n            if (state.time-- <= 0) {\n              state.time = 60\n              state.smsSendBtn = false\n              window.clearInterval(interval)\n            }\n          }, 1000)\n\n          const hide = this.$message.loading('验证码发送中..', 0)\n          getSmsCaptcha({ mobile: values.mobile }).then(res => {\n            setTimeout(hide, 2500)\n            this.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            })\n          }).catch(err => {\n            setTimeout(hide, 1)\n            clearInterval(interval)\n            state.time = 60\n            state.smsSendBtn = false\n            this.requestFailed(err)\n          })\n        }\n      })\n    },\n    stepCaptchaSuccess () {\n      this.loginSuccess()\n    },\n    stepCaptchaCancel () {\n      this.Logout().then(() => {\n        this.loginBtn = false\n        this.stepCaptchaVisible = false\n      })\n    },\n    async getImgCode () {\n      await imgcode().then(res => {\n        const raw = res.data\n        const { randomstr } = res.headers\n        this.randomStr = randomstr\n        this.codesrc = URL.createObjectURL(raw)\n      })\n    },\n    loginSuccess (res) {\n      if (res.code === 0) {\n        this.$router.push({ name: 'dashboard' }, () => {\n          this.$notification.success({\n            message: '欢迎',\n            description: `${timeFix()}，欢迎回来`\n          })\n        })\n        this.isLoginError = false\n      } else {\n        this.requestFailed(res)\n      }\n    },\n    requestFailed (err) {\n      this.isLoginError = true\n      this.getImgCode()\n      this.errorMsg = ((err.response || {}).data || {}).msg || err.msg || '请求出现错误，请稍后再试'\n      this.$notification['error']({\n        message: '错误',\n        description: this.errorMsg,\n        duration: 4\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n\n  .forge-password {\n    font-size: 14px;\n  }\n\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color 0.3s;\n\n      &:hover {\n        color: #1890ff;\n      }\n    }\n\n    .register {\n      float: right;\n    }\n  }\n}\n</style>\n"]}]}