{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/gen/GenList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/gen/GenList.vue","mtime":1581492640536},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { STable } from '@/components'\nimport { getGenList, delGen, batchGenCode } from '@/api/gen'\nimport { checkPermission } from '@/utils/permissions'\nimport DbListModal from './modules/DbListModal.vue'\nimport PreviewModal from './modules/PreviewModal.vue'\nimport { genCodeZip } from '@/utils/download'\nconst commonStatusMap = {}\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    DbListModal,\n    PreviewModal\n  },\n  data () {\n    return {\n      description: '代码生成工具，先导入，再生成',\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '序号',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '表名',\n          dataIndex: 'tableName'\n        },\n        {\n          title: '表描述',\n          dataIndex: 'tableComment'\n        },\n        {\n          title: '实体类名称',\n          dataIndex: 'className'\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        },\n        {\n          title: '更新时间',\n          dataIndex: 'updateTime',\n          sorter: true\n        },\n        {\n          title: '操作',\n          width: '240px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getGenList(Object.assign(parameter, this.queryParam))\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: [],\n      codeEnable: checkPermission('tool:gen:code'),\n      editEnable: checkPermission('tool:gen:edit'),\n      removeEnable: checkPermission('tool:gen:remove')\n\n    }\n  },\n  filters: {\n    operTypeFilter (type) {\n      return commonStatusMap[type].text\n    },\n    statusFilter (status) {\n      const statusMap = {\n        '1': '失败',\n        '0': '成功'\n      }\n      return statusMap[status]\n    }\n  },\n  beforeCreate () {\n\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    lead () {\n      this.$refs.dbmodal.show()\n    },\n    handleEdit (tableId) {\n      this.$router.push({ name: 'genEdit', query: { tableId: tableId } })\n    },\n    handlePreview (tableId) {\n      this.$refs.premodal.show(tableId)\n    },\n    batchGen () {\n      const tables = this.selectedRows.map(t => {\n        return t.tableName\n      })\n      this.handleGen(tables)\n    },\n    handleGen (tables) {\n      genCodeZip(batchGenCode, tables.join(','))\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n    },\n    delByIds (ids) {\n      delGen({ ids: ids.join(',') }).then(res => {\n        if (res.code === 0) {\n          this.$message.success(`删除成功`)\n          this.handleOk()\n        } else {\n          this.$message.error(res.msg)\n        }\n        this.selectedRowKeys = []\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n",{"version":3,"sources":["GenList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GenList.vue","sourceRoot":"src/views/gen","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"48\">\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"表名称\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.tableName\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"15\">\n            <a-form-item label=\"表描述\">\n              <a-input placeholder=\"请输入\" v-model=\"queryParam.tableComment\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"6\" :sm=\"18\">\n            <a-form-item label=\"表时间\">\n              <a-range-picker v-model=\"range\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"4\" :sm=\"12\">\n            <span class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"$refs.table.refresh(true)\">查询</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"() => queryParam = {}\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n    </div>\n    <div class=\"table-operator\">\n      <a-button icon=\"upload\" type=\"primary\" @click=\"lead()\">导入</a-button>\n      <!-- <a-button type=\"primary\" icon=\"download\" @click=\"gen(selectedRowKeys)\">生成</a-button> -->\n      <!-- <a-dropdown v-if=\"selectedRowKeys.length > 0\">\n        <a-button type=\"danger\" icon=\"delete\" @click=\"delByIds(selectedRowKeys)\">删除</a-button>\n      </a-dropdown> -->\n      <a-dropdown v-if=\"selectedRowKeys.length > 0\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"batchGen(selectedRowKeys)\"><a-icon type=\"download\" />生成代码</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"delByIds(selectedRowKeys)\"><a-icon type=\"delete\" />删除</a-menu-item>\n        </a-menu>\n        <a-button style=\"margin-left: 8px\">\n          批量操作 <a-icon type=\"down\" />\n        </a-button>\n      </a-dropdown>\n    </div>\n    <s-table\n      size=\"default\"\n      ref=\"table\"\n      rowKey=\"tableId\"\n      :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n      :columns=\"columns\"\n      :data=\"loadData\"\n      :rangPicker=\"range\"\n      defaultSort=\"createTime\"\n    >\n      <span slot=\"serial\" slot-scope=\"text, record, index\">\n        {{ index + 1 }}\n      </span>\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a v-if=\"editEnable\" @click=\"handlePreview(record.tableId)\">预览</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"editEnable\" @click=\"handleEdit(record.tableId)\">编辑</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"removeEnable\" @click=\"delByIds([record.tableId])\">删除</a>\n        <a-divider type=\"vertical\" />\n        <a v-if=\"codeEnable\" @click=\"handleGen([record.tableName])\">生成代码</a>\n      </span>\n    </s-table>\n    <db-list-modal ref=\"dbmodal\" @ok=\"handleOk\" />\n    <preview-modal ref=\"premodal\" @ok=\"handleOk\" />\n  </a-card>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport { getGenList, delGen, batchGenCode } from '@/api/gen'\nimport { checkPermission } from '@/utils/permissions'\nimport DbListModal from './modules/DbListModal.vue'\nimport PreviewModal from './modules/PreviewModal.vue'\nimport { genCodeZip } from '@/utils/download'\nconst commonStatusMap = {}\nexport default {\n  name: 'TableList',\n  components: {\n    STable,\n    DbListModal,\n    PreviewModal\n  },\n  data () {\n    return {\n      description: '代码生成工具，先导入，再生成',\n      visible: false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      form: this.$form.createForm(this),\n      mdl: {},\n      permissions: [],\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '序号',\n          scopedSlots: { customRender: 'serial' }\n        },\n        {\n          title: '表名',\n          dataIndex: 'tableName'\n        },\n        {\n          title: '表描述',\n          dataIndex: 'tableComment'\n        },\n        {\n          title: '实体类名称',\n          dataIndex: 'className'\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          sorter: true\n        },\n        {\n          title: '更新时间',\n          dataIndex: 'updateTime',\n          sorter: true\n        },\n        {\n          title: '操作',\n          width: '240px',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      range: null,\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return getGenList(Object.assign(parameter, this.queryParam))\n      },\n      commonStatus: [],\n      selectedRowKeys: [],\n      selectedRows: [],\n      codeEnable: checkPermission('tool:gen:code'),\n      editEnable: checkPermission('tool:gen:edit'),\n      removeEnable: checkPermission('tool:gen:remove')\n\n    }\n  },\n  filters: {\n    operTypeFilter (type) {\n      return commonStatusMap[type].text\n    },\n    statusFilter (status) {\n      const statusMap = {\n        '1': '失败',\n        '0': '成功'\n      }\n      return statusMap[status]\n    }\n  },\n  beforeCreate () {\n\n  },\n  created () {\n  },\n  methods: {\n    onSelectChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    lead () {\n      this.$refs.dbmodal.show()\n    },\n    handleEdit (tableId) {\n      this.$router.push({ name: 'genEdit', query: { tableId: tableId } })\n    },\n    handlePreview (tableId) {\n      this.$refs.premodal.show(tableId)\n    },\n    batchGen () {\n      const tables = this.selectedRows.map(t => {\n        return t.tableName\n      })\n      this.handleGen(tables)\n    },\n    handleGen (tables) {\n      genCodeZip(batchGenCode, tables.join(','))\n    },\n    handleOk () {\n      this.$refs.table.refresh(true)\n    },\n    delByIds (ids) {\n      delGen({ ids: ids.join(',') }).then(res => {\n        if (res.code === 0) {\n          this.$message.success(`删除成功`)\n          this.handleOk()\n        } else {\n          this.$message.error(res.msg)\n        }\n        this.selectedRowKeys = []\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n"]}]}