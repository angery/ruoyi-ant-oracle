{"remainingRequest":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcDefNode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/src/views/activiti/ProcDefNode.vue","mtime":1581494123460},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/babel-loader/lib/index.js","mtime":1580791766093},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/cache-loader/dist/cjs.js","mtime":1580791779218},{"path":"/Users/medo/Downloads/code/ruoyi-cloud-view/ruoyi-ant/node_modules/vue-loader/lib/index.js","mtime":1580791779864}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Tree, Icon } from 'ant-design-vue'\nimport { STable } from '@/components'\nimport { getNodeList, getNodeInfo, updateNodeInfo } from '@/api/activiti'\nimport { getDeptList, getUserList, getRoleAll } from '@/api/system'\nimport pick from 'lodash.pick'\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1574906_mvhehmkaer.js' // 在 iconfont.cn 上生成\n})\nexport default {\n  name: 'TableList',\n  components: {\n    Tree,\n    STable,\n    MyIcon\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        lg: { span: 3 }, sm: { span: 3 }\n      },\n      wrapperCol: {\n        lg: { span: 20 }, sm: { span: 12 }\n      },\n      mdl: {},\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      deptChecked: false,\n      depts: [],\n      userChecked: false,\n      users: [],\n      roleChecked: false,\n      roles: [],\n      deptHeader: false,\n      nodes: []\n    }\n  },\n  created () {\n    const procDefId = this.$route.query.procDefId\n    getNodeList(procDefId).then(res => {\n      this.nodes = res.rows.map(n => {\n        let icon = ''\n        switch (n.type) {\n          case 0:\n            icon = 'icon-kaishi1'\n            break\n          case 2:\n            icon = 'icon-jieshu'\n            break\n          default:\n            icon = 'icon-shen'\n        }\n        return { name: n.name, nodeId: n.nodeId, icon: icon, type: n.type }\n      })\n    })\n    getRoleAll().then(res => {\n      this.roles = res.rows\n    })\n    getDeptList().then(res => {\n      const data = res.rows\n      this.buildtree(data, this.depts, '0')\n    })\n    getUserList().then(res => {\n      this.users = res.rows\n    })\n  },\n  methods: {\n    handleSelect (e) {\n      const nodeId = e.key\n      const node = this.nodes.filter(item => nodeId === item.nodeId)[0]\n      if (node.type === 1) {\n        getNodeInfo(nodeId).then(res => {\n          const data = res.data\n          this.mdl = Object.assign(data, node)\n          this.roleChecked = data.roleIds.length > 0\n          this.deptChecked = data.deptIds.length > 0\n          this.userChecked = data.userIds.length > 0\n          this.deptHeader = data.deptHeader\n          console.log('mdl:', this.mdl)\n          this.$nextTick(() => {\n            this.form.setFieldsValue(pick(this.mdl, 'nodeId', 'userIds', 'deptIds', 'roleIds', 'deptHeader'))\n            console.log('form.deptHeader:', this.form.getFieldValue('deptHeader'))\n            // this.form.setFieldsValue({ ...record })\n          })\n        })\n      } else {\n        this.$message.error('只能编辑任务节点')\n        this.mdl = {}\n        this.roleChecked = this.deptChecked = this.userChecked = this.deptHeader = false\n      }\n    },\n    onChangeRole (e) {\n      const value = e.target.checked\n      this.roleChecked = value\n      if (!value) { this.form.setFieldsValue({ roleIds: [] }) }\n    },\n    onChangeDept (e) {\n      const value = e.target.checked\n      this.deptChecked = value\n      if (!value) { this.form.setFieldsValue({ deptIds: [] }) }\n    },\n    buildtree (list, arr, parentId) {\n      list.forEach(item => {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.deptId,\n            value: item.deptId, // value是给modal的select用的，2者属性不一样\n            title: item.deptName,\n            scopedSlots: { title: 'title' },\n            children: []\n          }\n          this.buildtree(list, child.children, item.deptId)\n          if (child.children.length === 0) { delete child.children }\n          arr.push(child)\n        }\n      })\n    },\n    onChangeUser (e) {\n      const value = e.target.checked\n      this.userChecked = value\n      if (!value) { this.form.setFieldsValue({ userIds: [] }) }\n    },\n    onChangeDeptHeader (e) {\n      this.deptHeader = e.target.checked\n      this.form.setFieldsValue({ deptHeader: this.deptHeader })\n    },\n    handleChangeDept (value, label, extra) {\n      console.log(extra)\n      if (extra.selected && extra.triggerNode.$children.length > 0) {\n        this.$message.error('不能选择父节点 ' + extra.triggerNode.title)\n        value.splice(value.findIndex(item => item === extra.triggerValue), 1)\n      }\n    },\n    toList () {\n      this.$router.push({ name: 'procDefList' })\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values)\n          this.confirmLoading = true\n          updateNodeInfo(values).then(res => {\n            if (res.code === 0) {\n              this.$message.success('保存成功')\n              // this.toList()\n            } else {\n              this.$message.error(res.msg)\n            }\n          }).catch(() => {\n            this.$message.error('系统错误，请稍后再试')\n          }).finally(() => {\n            this.confirmLoading = false\n          })\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n",{"version":3,"sources":["ProcDefNode.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"ProcDefNode.vue","sourceRoot":"src/views/activiti","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-row :gutter=\"8\">\n      <a-col :span=\"5\">\n        <!-- <a-tree\n          v-if=\"nodes.length>0\"\n          :treeData=\"nodes\"\n          showIcon\n          @select=\"handleSelect\">\n          <my-icon slot=\"0\" type=\"icon-kaishi1\" />\n          <my-icon slot=\"1\" type=\"icon-shen\" />\n          <my-icon slot=\"2\" type=\"icon-jieshu\" />\n        </a-tree> -->\n        <a-menu style=\"width: 256px\" mode=\"vertical\" @select=\"handleSelect\">\n          <a-menu-item v-for=\"node in nodes\" :key=\"node.nodeId\" :title=\"node.name\" >\n            <my-icon :type=\"node.icon\" />\n            {{ node.name }}\n          </a-menu-item>\n        </a-menu>\n      </a-col>\n      <a-col :span=\"12\">\n        <div class=\"table-page-search-wrapper\">\n          <a-form @submit=\"handleSubmit\" :form=\"form\">\n            <a-form-item\n              :wrapperCol=\"{ span: 22 }\">\n              <a-alert message=\"温馨提示：若流程运行至未分配审批人员的审批节点时，流程将自动中断取消\" type=\"warning\" showIcon />\n            </a-form-item>\n            <a-form-item v-show=\"false\">\n              <a-input v-decorator=\"['nodeId']\"/>\n            </a-form-item>\n            <a-form-item v-show=\"false\">\n              <a-input v-decorator=\"['deptHeader']\"/>\n            </a-form-item>\n            <a-form-item\n              label=\"节点名称\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\">\n              <span>{{ mdl.name }}</span>\n            </a-form-item>\n            <a-form-item\n              label=\"审批人\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\">\n              <a-checkbox @change=\"onChangeRole\" :checked=\"roleChecked\">角色</a-checkbox>\n              <a-checkbox @change=\"onChangeDept\" :checked=\"deptChecked\">部门</a-checkbox>\n              <a-checkbox @change=\"onChangeUser\" :checked=\"userChecked\">用户</a-checkbox>\n              <a-checkbox @change=\"onChangeDeptHeader\" :checked=\"deptHeader\" >所属部门负责人</a-checkbox>\n            </a-form-item>\n            <a-form-item\n              label=\"选择角色\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              v-show=\"roleChecked\"\n            >\n              <!-- <a-select\n                v-decorator=\"['roleIds', {rules: [{ required: roleChecked, message: '至少选择一个角色' }]}]\"\n                mode=\"multiple\"\n                allowClear\n                placeholder=\"角色\">\n                <a-select-option v-for=\"(item, index) in roles\" :key=\"index\" :value=\"item.roleId\">{{ item.roleName }}</a-select-option>\n              </a-select> -->\n\n              <a-select\n                v-decorator=\"['roleIds', {rules: [{ required: roleChecked, message: '至少选择一个用户' }]}]\"\n                mode=\"multiple\"\n                allowClear\n                placeholder=\"用户\">\n                <a-select-option v-for=\"(item, index) in roles\" :key=\"index\" :value=\"item.roleId\">{{ item.roleName }}</a-select-option>\n              </a-select>\n            </a-form-item>\n            <a-form-item\n              label=\"选择部门\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              v-show=\"deptChecked\"\n            >\n              <a-tree-select\n                v-decorator=\"['deptIds', {rules: [{ required: deptChecked, message: '至少选择一个部门' }]}]\"\n                :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\n                :treeData=\"depts\"\n                treeDefaultExpandAll\n                @change=\"handleChangeDept\"\n                placeholder=\"部门\"\n                multiple\n                allowClear\n              >\n              </a-tree-select>\n            </a-form-item>\n            <a-form-item\n              label=\"选择用户\"\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              v-show=\"userChecked\"\n            >\n              <a-select\n                v-decorator=\"['userIds', {rules: [{ required: userChecked, message: '至少选择一个用户' }]}]\"\n                mode=\"multiple\"\n                allowClear\n                placeholder=\"用户\">\n                <a-select-option v-for=\"(item, index) in users\" :key=\"index\" :value=\"item.userId\">{{ item.userName+' - '+item.loginName }}</a-select-option>\n              </a-select>\n            </a-form-item>\n            <a-form-item\n              :wrapperCol=\"{ span: 24 }\"\n              style=\"text-align: center\"\n            >\n              <a-button htmlType=\"submit\" type=\"primary\" :loading=\"confirmLoading\" :disabled=\"mdl.type!==1\">提交</a-button>\n              <a-button style=\"margin-left: 8px\" @click=\"toList\">返回</a-button>\n            </a-form-item>\n          </a-form>\n        </div>\n      </a-col>\n    </a-row>\n  </a-card>\n</template>\n\n<script>\nimport { Tree, Icon } from 'ant-design-vue'\nimport { STable } from '@/components'\nimport { getNodeList, getNodeInfo, updateNodeInfo } from '@/api/activiti'\nimport { getDeptList, getUserList, getRoleAll } from '@/api/system'\nimport pick from 'lodash.pick'\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1574906_mvhehmkaer.js' // 在 iconfont.cn 上生成\n})\nexport default {\n  name: 'TableList',\n  components: {\n    Tree,\n    STable,\n    MyIcon\n  },\n  data () {\n    return {\n      visible: false,\n      labelCol: {\n        lg: { span: 3 }, sm: { span: 3 }\n      },\n      wrapperCol: {\n        lg: { span: 20 }, sm: { span: 12 }\n      },\n      mdl: {},\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      deptChecked: false,\n      depts: [],\n      userChecked: false,\n      users: [],\n      roleChecked: false,\n      roles: [],\n      deptHeader: false,\n      nodes: []\n    }\n  },\n  created () {\n    const procDefId = this.$route.query.procDefId\n    getNodeList(procDefId).then(res => {\n      this.nodes = res.rows.map(n => {\n        let icon = ''\n        switch (n.type) {\n          case 0:\n            icon = 'icon-kaishi1'\n            break\n          case 2:\n            icon = 'icon-jieshu'\n            break\n          default:\n            icon = 'icon-shen'\n        }\n        return { name: n.name, nodeId: n.nodeId, icon: icon, type: n.type }\n      })\n    })\n    getRoleAll().then(res => {\n      this.roles = res.rows\n    })\n    getDeptList().then(res => {\n      const data = res.rows\n      this.buildtree(data, this.depts, '0')\n    })\n    getUserList().then(res => {\n      this.users = res.rows\n    })\n  },\n  methods: {\n    handleSelect (e) {\n      const nodeId = e.key\n      const node = this.nodes.filter(item => nodeId === item.nodeId)[0]\n      if (node.type === 1) {\n        getNodeInfo(nodeId).then(res => {\n          const data = res.data\n          this.mdl = Object.assign(data, node)\n          this.roleChecked = data.roleIds.length > 0\n          this.deptChecked = data.deptIds.length > 0\n          this.userChecked = data.userIds.length > 0\n          this.deptHeader = data.deptHeader\n          console.log('mdl:', this.mdl)\n          this.$nextTick(() => {\n            this.form.setFieldsValue(pick(this.mdl, 'nodeId', 'userIds', 'deptIds', 'roleIds', 'deptHeader'))\n            console.log('form.deptHeader:', this.form.getFieldValue('deptHeader'))\n            // this.form.setFieldsValue({ ...record })\n          })\n        })\n      } else {\n        this.$message.error('只能编辑任务节点')\n        this.mdl = {}\n        this.roleChecked = this.deptChecked = this.userChecked = this.deptHeader = false\n      }\n    },\n    onChangeRole (e) {\n      const value = e.target.checked\n      this.roleChecked = value\n      if (!value) { this.form.setFieldsValue({ roleIds: [] }) }\n    },\n    onChangeDept (e) {\n      const value = e.target.checked\n      this.deptChecked = value\n      if (!value) { this.form.setFieldsValue({ deptIds: [] }) }\n    },\n    buildtree (list, arr, parentId) {\n      list.forEach(item => {\n        if (item.parentId === parentId) {\n          var child = {\n            key: item.deptId,\n            value: item.deptId, // value是给modal的select用的，2者属性不一样\n            title: item.deptName,\n            scopedSlots: { title: 'title' },\n            children: []\n          }\n          this.buildtree(list, child.children, item.deptId)\n          if (child.children.length === 0) { delete child.children }\n          arr.push(child)\n        }\n      })\n    },\n    onChangeUser (e) {\n      const value = e.target.checked\n      this.userChecked = value\n      if (!value) { this.form.setFieldsValue({ userIds: [] }) }\n    },\n    onChangeDeptHeader (e) {\n      this.deptHeader = e.target.checked\n      this.form.setFieldsValue({ deptHeader: this.deptHeader })\n    },\n    handleChangeDept (value, label, extra) {\n      console.log(extra)\n      if (extra.selected && extra.triggerNode.$children.length > 0) {\n        this.$message.error('不能选择父节点 ' + extra.triggerNode.title)\n        value.splice(value.findIndex(item => item === extra.triggerValue), 1)\n      }\n    },\n    toList () {\n      this.$router.push({ name: 'procDefList' })\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values)\n          this.confirmLoading = true\n          updateNodeInfo(values).then(res => {\n            if (res.code === 0) {\n              this.$message.success('保存成功')\n              // this.toList()\n            } else {\n              this.$message.error(res.msg)\n            }\n          }).catch(() => {\n            this.$message.error('系统错误，请稍后再试')\n          }).finally(() => {\n            this.confirmLoading = false\n          })\n        }\n      })\n    }\n  },\n  watch: {\n    /*\n      'selectedRows': function (selectedRows) {\n        this.needTotalList = this.needTotalList.map(item => {\n          return {\n            ...item,\n            total: selectedRows.reduce( (sum, val) => {\n              return sum + val[item.dataIndex]\n            }, 0)\n          }\n        })\n      }\n      */\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n/deep/ .ant-menu-vertical {\n  .ant-menu-item{\n    display: flex;\n    .anticon{\n        font-size: 24px;\n        display: flex;\n        align-items: center;\n    }\n  }\n}\n</style>\n"]}]}