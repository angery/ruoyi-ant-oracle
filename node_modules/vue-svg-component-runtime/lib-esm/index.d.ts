import Vue, { ComponentOptions, PropOptions } from 'vue';
export declare const isElementNode: (node: MinifiedASTNode) => node is MinifedASTElement;
export declare type MinifiedASTNode = MinifiedASTText | MinifedASTElement;
export interface MinifiedASTText {
    text: string;
}
export interface MinifedASTElement {
    tag: string;
    attrsMap?: Record<string, string>;
    children?: MinifiedASTNode[];
}
export interface IDimensions {
    height: number;
    width: number;
}
export interface IComponent extends Vue {
    scale: number | undefined;
    fill: string;
    dimension: IDimensions;
}
export declare const svgComponent: (svg: MinifedASTElement) => ComponentOptions<Vue, object | ((this: Vue) => object), {
    [key: string]: (this: Vue, ...args: any[]) => any;
}, {
    [key: string]: any;
}, string[] | {
    [x: string]: PropOptions<any> | (() => any) | (new (...args: any[]) => any) | ((() => any) | (new (...args: any[]) => any))[];
}, Record<string, any>>;
